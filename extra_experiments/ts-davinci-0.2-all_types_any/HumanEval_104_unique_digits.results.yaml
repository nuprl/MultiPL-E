language: ts
name: HumanEval_104_unique_digits
results:
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let isEven = false;\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (num[j] % 2 ===\
    \ 0) {\n                isEven = true;\n                break;\n            }\n\
    \        }\n        if (!isEven) {\n            result.push(x[i]);\n        }\n\
    \    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326075
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let num = x[i];\n        let flag = true;\n\
    \        while (num > 0) {\n            let digit = num % 10;\n            if\
    \ (digit % 2 == 0) {\n                flag = false;\n                break;\n\
    \            }\n            num = Math.floor(num / 10);\n        }\n        if\
    \ (flag) {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326075
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let count: number = 0;\n        for (let j = 0; j < temp.length; j++)\
    \ {\n            if (temp[j] % 2 == 0) {\n                count++;\n         \
    \   }\n        }\n        if (count == 0) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326075
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let num: number = x[i];\n        let\
    \ isUnique: boolean = true;\n        while (num > 0) {\n            let digit:\
    \ number = num % 10;\n            if (digit % 2 == 0) {\n                isUnique\
    \ = false;\n                break;\n            }\n            num = Math.floor(num\
    \ / 10);\n        }\n        if (isUnique) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326075
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let uniqueDigits: any = [];\n    let\
    \ evenDigits: any = [];\n    let evenDigitsStr: any = [];\n    let uniqueDigitsStr:\
    \ any = [];\n    let uniqueDigitsStrSorted: any = [];\n    let uniqueDigitsSorted:\
    \ any = [];\n    for (let i = 0; i < x.length; i++) {\n        if (x[i] % 2 ===\
    \ 0) {\n            evenDigits.push(x[i]);\n        }\n    }\n    for (let i =\
    \ 0; i < evenDigits.length; i++) {\n        evenDigitsStr.push(evenDigits[i].toString());\n\
    \    }\n    for (let i = 0; i < evenDigitsStr.length; i++) {\n        for (let\
    \ j = 0; j < evenDigitsStr[i].length; j++) {\n            if (evenDigitsStr[i][j]\
    \ % 2 === 0) {\n                uniqueDigitsStr.push(evenDigitsStr[i]);\n    \
    \        }\n        }\n    }\n    for (let i = 0; i < uniqueDigitsStr.length;\
    \ i++) {\n        uniqueDigitsStrSorted.push(uniqueDigitsStr[i].split('').sort().join(''));\n\
    \    }\n    for (let i = 0; i < uniqueDigitsStrSorted.length; i++) {\n       \
    \ uniqueDigitsSorted.push(parseInt(uniqueDigitsStrSorted[i]));\n    }\n    for\
    \ (let i = 0; i < x.length; i++) {\n        if (uniqueDigitsSorted.indexOf(x[i])\
    \ === -1) {\n            uniqueDigits.push(x[i]);\n        }\n    }\n    return\
    \ uniqueDigits.sort();\n}\nconsole.log(unique_digits([15, 33, 1422, 1]));\nconsole.log(unique_digits([152,\
    \ 323, 1422, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1422,\n\
    \  15,\n  33\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at\
    \ test (/tmp/tmp9y0x1lh4.js:49:12)\n    at Object.<anonymous> (/tmp/tmp9y0x1lh4.js:54:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1422,\
    \ 15, 33 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: '[ 1, 1422, 15, 33 ]

    [ 10, 1422, 152, 323 ]

    '
  timestamp: 1660326076
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j = 0; j < temp.length; j++)\
    \ {\n            if (parseInt(temp[j]) % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n        }\n        if (flag) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) =>\
    \ a - b);\n}\nconsole.log(unique_digits([15, 33, 1422, 1]));\nconsole.log(unique_digits([152,\
    \ 323, 1422, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326076
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n        for\
    \ (let j = 0; j < x[i].toString().length; j++) {\n            if (x[i].toString()[j]\
    \ % 2 === 0) {\n                isEven = true;\n            }\n        }\n   \
    \     if (!isEven) {\n            result.push(x[i]);\n        }\n    }\n    return\
    \ result.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326076
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let arr = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        let temp = x[i].toString().split('');\n      \
    \  let flag = true;\n        for (let j = 0; j < temp.length; j++) {\n       \
    \     if (temp[j] % 2 == 0) {\n                flag = false;\n               \
    \ break;\n            }\n        }\n        if (flag) {\n            arr.push(x[i]);\n\
    \        }\n    }\n    return arr.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326076
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let isEven = false;\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (num[j] % 2 ===\
    \ 0) {\n                isEven = true;\n                break;\n            }\n\
    \        }\n        if (!isEven) {\n            result.push(x[i]);\n        }\n\
    \    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326075
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let evenDigits = [2, 4, 6, 8, 0];\n\
    \    let result = [];\n    for (let i = 0; i < x.length; i++) {\n        let isEven\
    \ = false;\n        let num = x[i];\n        while (num > 0) {\n            let\
    \ digit = num % 10;\n            if (evenDigits.includes(digit)) {\n         \
    \       isEven = true;\n                break;\n            }\n            num\
    \ = Math.floor(num / 10);\n        }\n        if (!isEven) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpa6_do5vj.ts(17,28): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1660326078
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let arr: any = [];\n    for (let i\
    \ = 0; i < x.length; i++) {\n        let num = x[i].toString();\n        let flag\
    \ = true;\n        for (let j = 0; j < num.length; j++) {\n            if (num[j]\
    \ % 2 == 0) {\n                flag = false;\n                break;\n       \
    \     }\n        }\n        if (flag) {\n            arr.push(x[i]);\n       \
    \ }\n    }\n    return arr.sort();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmpabatgs3m.js:32:12)\n\
    \    at Object.<anonymous> (/tmp/tmpabatgs3m.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326078
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let even = false;\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (num[j] % 2 ===\
    \ 0) {\n                even = true;\n            }\n        }\n        if (!even)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326078
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n        let\
    \ str: string = x[i].toString();\n        for (let j = 0; j < str.length; j++)\
    \ {\n            if (parseInt(str[j]) % 2 === 0) {\n                isEven = true;\n\
    \                break;\n            }\n        }\n        if (!isEven) {\n  \
    \          result.push(x[i]);\n        }\n    }\n    return result.sort((a, b)\
    \ => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326078
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let num: any = x[i];\n        let flag:\
    \ boolean = true;\n        while (num > 0) {\n            let digit: number =\
    \ num % 10;\n            if (digit % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n            num = Math.floor(num / 10);\n\
    \        }\n        if (flag) {\n            result.push(x[i]);\n        }\n \
    \   }\n    return result.sort();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmplojpx1e6.js:34:12)\n\
    \    at Object.<anonymous> (/tmp/tmplojpx1e6.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326079
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let evenDigits = [0, 2, 4, 6, 8];\n\
    \    let uniqueDigits = [];\n    for (let i = 0; i < x.length; i++) {\n      \
    \  let isUnique = true;\n        let num = x[i];\n        while (num > 0) {\n\
    \            let digit = num % 10;\n            if (evenDigits.includes(digit))\
    \ {\n                isUnique = false;\n                break;\n            }\n\
    \            num = Math.floor(num / 10);\n        }\n        if (isUnique) {\n\
    \            uniqueDigits.push(x[i]);\n        }\n    }\n    return uniqueDigits.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmp9tkjqi0k.ts(17,28): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1660326079
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let isEven = false;\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (num[j] % 2 ===\
    \ 0) {\n                isEven = true;\n                break;\n            }\n\
    \        }\n        if (!isEven) {\n            result.push(x[i]);\n        }\n\
    \    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326075
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let even_digits = [0, 2, 4, 6, 8];\n\
    \    let result = [];\n    for (let i = 0; i < x.length; i++) {\n        let is_even\
    \ = false;\n        let num = x[i];\n        while (num > 0) {\n            let\
    \ digit = num % 10;\n            if (even_digits.includes(digit)) {\n        \
    \        is_even = true;\n                break;\n            }\n            num\
    \ = Math.floor(num / 10);\n        }\n        if (!is_even) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbcps61fp.ts(17,29): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1660326079
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j = 0; j < temp.length; j++)\
    \ {\n            if (parseInt(temp[j]) % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n        }\n        if (flag) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) =>\
    \ a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326079
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j: number = 0; j < temp.length;\
    \ j++) {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n        }\n        if (flag) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort();\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmprbo7crjp.js:34:12)\n\
    \    at Object.<anonymous> (/tmp/tmprbo7crjp.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326081
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let isEven = false;\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (num[j] % 2 ===\
    \ 0) {\n                isEven = true;\n                break;\n            }\n\
    \        }\n        if (!isEven) {\n            result.push(x[i]);\n        }\n\
    \    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326075
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let even: boolean = false;\n        let\
    \ num: number = x[i];\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even = true;\n                break;\n            }\n   \
    \         num = Math.floor(num / 10);\n        }\n        if (!even) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) =>\
    \ a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326081
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let even: boolean = false;\n        let\
    \ num: number = x[i];\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even = true;\n                break;\n            }\n   \
    \         num = Math.floor(num / 10);\n        }\n        if (!even) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) =>\
    \ a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326081
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let even: boolean = false;\n        let\
    \ num: number = x[i];\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even = true;\n                break;\n            }\n   \
    \         num = Math.floor(num / 10);\n        }\n        if (!even) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) =>\
    \ a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326081
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let even: boolean = false;\n        let\
    \ str: string = x[i].toString();\n        for (let j = 0; j < str.length; j++)\
    \ {\n            if (str[j] % 2 == 0) {\n                even = true;\n      \
    \          break;\n            }\n        }\n        if (!even) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) => a -\
    \ b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmp6t7lunw5.ts(15,17): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    '
  timestamp: 1660326080
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let num = x[i].toString();\n        let\
    \ flag = true;\n        for (let j = 0; j < num.length; j++) {\n            if\
    \ (num[j] % 2 == 0) {\n                flag = false;\n                break;\n\
    \            }\n        }\n        if (flag) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort();\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmpbyih3t6t.js:32:12)\n\
    \    at Object.<anonymous> (/tmp/tmpbyih3t6t.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326081
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let even_digits: any = [];\n    let\
    \ odd_digits: any = [];\n    for (let i = 0; i < x.length; i++) {\n        let\
    \ num: any = x[i];\n        let str: any = num.toString();\n        let arr: any\
    \ = str.split('');\n        let even: any = [];\n        let odd: any = [];\n\
    \        for (let j = 0; j < arr.length; j++) {\n            if (arr[j] % 2 ==\
    \ 0) {\n                even.push(arr[j]);\n            } else {\n           \
    \     odd.push(arr[j]);\n            }\n        }\n        if (even.length ==\
    \ 0) {\n            even_digits.push(num);\n        } else {\n            odd_digits.push(num);\n\
    \        }\n    }\n    return even_digits.sort();\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmpg4jse168.js:43:12)\n\
    \    at Object.<anonymous> (/tmp/tmpg4jse168.js:45:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326082
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let isEven = false;\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (num[j] % 2 ===\
    \ 0) {\n                isEven = true;\n                break;\n            }\n\
    \        }\n        if (!isEven) {\n            result.push(x[i]);\n        }\n\
    \    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326075
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let even: boolean = false;\n        let\
    \ number: any = x[i].toString();\n        for (let j = 0; j < number.length; j++)\
    \ {\n            if (number[j] % 2 == 0) {\n                even = true;\n   \
    \         }\n        }\n        if (!even) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort();\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmppo8x98kk.js:33:12)\n\
    \    at Object.<anonymous> (/tmp/tmppo8x98kk.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326082
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j = 0; j < temp.length; j++)\
    \ {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n    \
    \            break;\n            }\n        }\n        if (flag) {\n         \
    \   result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) => a -\
    \ b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326082
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let arr: any = [];\n    for (let i\
    \ = 0; i < x.length; i++) {\n        if (x[i].toString().length === 1) {\n   \
    \         arr.push(x[i]);\n        } else {\n            for (let j = 0; j < x[i].toString().length;\
    \ j++) {\n                if (x[i].toString()[j] % 2 !== 0) {\n              \
    \      arr.push(x[i]);\n                    break;\n                }\n      \
    \      }\n        }\n    }\n    arr.sort(function (a, b) { return a - b });\n\
    \    return arr;\n}\nconsole.log(unique_digits([15, 33, 1422, 1]));\nconsole.log(unique_digits([152,\
    \ 323, 1422, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  15,\n\
    \  33,\n  1422\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n  \
    \  at test (/tmp/tmpf08qm7wx.js:32:12)\n    at Object.<anonymous> (/tmp/tmpf08qm7wx.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 15, 33,\
    \ 1422 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 15, 33, 1422 ]

    [ 10, 152, 323, 1422 ]

    '
  timestamp: 1660326082
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let evenDigits: any = [];\n    let\
    \ uniqueDigits: any = [];\n    let sortedDigits: any = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        let num = x[i];\n        let numString = num.toString();\n\
    \        for (let j = 0; j < numString.length; j++) {\n            let digit =\
    \ numString[j];\n            if (digit % 2 === 0) {\n                evenDigits.push(num);\n\
    \                break;\n            }\n        }\n    }\n    for (let i = 0;\
    \ i < x.length; i++) {\n        if (evenDigits.indexOf(x[i]) === -1) {\n     \
    \       uniqueDigits.push(x[i]);\n        }\n    }\n    sortedDigits = uniqueDigits.sort(function\
    \ (a, b) { return a - b });\n    return sortedDigits;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326083
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n   \
    \     let num: number = x[i];\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                isEven = true;\n                break;\n      \
    \      }\n            num = Math.floor(num / 10);\n        }\n        if (!isEven)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326084
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let even: any = false;\n        let num:\
    \ any = x[i].toString();\n        for (let j = 0; j < num.length; j++) {\n   \
    \         if (num[j] % 2 == 0) {\n                even = true;\n            }\n\
    \        }\n        if (even == false) {\n            result.push(x[i]);\n   \
    \     }\n    }\n    return result.sort();\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmpq0ugesmq.js:31:12)\n\
    \    at Object.<anonymous> (/tmp/tmpq0ugesmq.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326084
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let isEven = false;\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (num[j] % 2 ===\
    \ 0) {\n                isEven = true;\n                break;\n            }\n\
    \        }\n        if (!isEven) {\n            result.push(x[i]);\n        }\n\
    \    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326075
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let arr: any = [];\n    for (let i\
    \ = 0; i < x.length; i++) {\n        let str: any = x[i].toString();\n       \
    \ let flag: boolean = true;\n        for (let j = 0; j < str.length; j++) {\n\
    \            if (str[j] % 2 == 0) {\n                flag = false;\n         \
    \       break;\n            }\n        }\n        if (flag) {\n            arr.push(x[i]);\n\
    \        }\n    }\n    return arr.sort((a, b) => a - b);\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326084
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let str: any = x[i].toString();\n     \
    \   let flag: boolean = true;\n        for (let j = 0; j < str.length; j++) {\n\
    \            if (str[j] % 2 == 0) {\n                flag = false;\n         \
    \       break;\n            }\n        }\n        if (flag) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326085
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let y: any = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let str: any = x[i].toString();\n        let\
    \ flag: any = 0;\n        for (let j = 0; j < str.length; j++) {\n           \
    \ if (str[j] % 2 == 0) {\n                flag = 1;\n                break;\n\
    \            }\n        }\n        if (flag == 0) {\n            y.push(x[i]);\n\
    \        }\n    }\n    return y.sort();\n}\nconsole.log(unique_digits([15, 33,\
    \ 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmpz5q9qvfx.js:34:12)\n\
    \    at Object.<anonymous> (/tmp/tmpz5q9qvfx.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326085
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j: number = 0; j < temp.length;\
    \ j++) {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n        }\n        if (flag) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort();\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmp322kpj2d.js:32:12)\n\
    \    at Object.<anonymous> (/tmp/tmp322kpj2d.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326085
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j: number = 0; j < temp.length;\
    \ j++) {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n        }\n        if (flag) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort();\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmp322kpj2d.js:32:12)\n\
    \    at Object.<anonymous> (/tmp/tmp322kpj2d.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326085
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let even: boolean = false;\n  \
    \      let num: number = x[i];\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even = true;\n                break;\n        \
    \    }\n            num = Math.floor(num / 10);\n        }\n        if (!even)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326085
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let flag = true;\n        let num = x[i];\n\
    \        while (num > 0) {\n            if (num % 2 == 0) {\n                flag\
    \ = false;\n                break;\n            }\n            num = Math.floor(num\
    \ / 10);\n        }\n        if (flag) {\n            result.push(x[i]);\n   \
    \     }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326086
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let arr: any = [];\n    for (let i\
    \ = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j = 0; j < temp.length; j++)\
    \ {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n    \
    \            break;\n            }\n        }\n        if (flag) {\n         \
    \   arr.push(x[i]);\n        }\n    }\n    return arr.sort();\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmpafm09hzo.js:34:12)\n\
    \    at Object.<anonymous> (/tmp/tmpafm09hzo.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326086
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let evenDigits: number[] = [2, 4, 6,\
    \ 8, 0];\n    let uniqueDigits: number[] = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let isEven: boolean = false;\n        let num: number = x[i];\n\
    \        while (num > 0) {\n            let digit: number = num % 10;\n      \
    \      if (evenDigits.indexOf(digit) >= 0) {\n                isEven = true;\n\
    \                break;\n            }\n            num = Math.floor(num / 10);\n\
    \        }\n        if (!isEven) {\n            uniqueDigits.push(x[i]);\n   \
    \     }\n    }\n    return uniqueDigits.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326087
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let flag = true;\n        let num = x[i];\n\
    \        while (num > 0) {\n            if (num % 2 == 0) {\n                flag\
    \ = false;\n                break;\n            }\n            num = Math.floor(num\
    \ / 10);\n        }\n        if (flag) {\n            result.push(x[i]);\n   \
    \     }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326086
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let arr: any = [];\n    for (let i\
    \ = 0; i < x.length; i++) {\n        let num: any = x[i].toString();\n       \
    \ let flag: boolean = true;\n        for (let j = 0; j < num.length; j++) {\n\
    \            if (num[j] % 2 == 0) {\n                flag = false;\n         \
    \       break;\n            }\n        }\n        if (flag) {\n            arr.push(x[i]);\n\
    \        }\n    }\n    return arr.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326087
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let even = false;\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (num[j] % 2 ===\
    \ 0) {\n                even = true;\n            }\n        }\n        if (!even)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326088
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let isUnique: boolean = true;\n\
    \        let num: number = x[i];\n        while (num > 0) {\n            let digit:\
    \ number = num % 10;\n            if (digit % 2 == 0) {\n                isUnique\
    \ = false;\n                break;\n            }\n            num = Math.floor(num\
    \ / 10);\n        }\n        if (isUnique) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a: number, b: number) => a - b);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326088
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let str: string = x[i].toString();\n  \
    \      let flag: boolean = true;\n        for (let j = 0; j < str.length; j++)\
    \ {\n            if (str[j] % 2 == 0) {\n                flag = false;\n     \
    \           break;\n            }\n        }\n        if (flag) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) => a -\
    \ b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpsipsy4ro.ts(15,17): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    '
  timestamp: 1660326088
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n\
    \        let num: number = x[i];\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                isEven = true;\n                break;\n      \
    \      }\n            num = Math.floor(num / 10);\n        }\n        if (!isEven)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326088
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let num = x[i];\n        let isEven = false;\n\
    \        while (num > 0) {\n            let digit = num % 10;\n            if\
    \ (digit % 2 === 0) {\n                isEven = true;\n                break;\n\
    \            }\n            num = Math.floor(num / 10);\n        }\n        if\
    \ (!isEven) {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326089
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let even: boolean = false;\n        for (let j = 0; j < temp.length;\
    \ j++) {\n            if (temp[j] % 2 == 0) {\n                even = true;\n\
    \            }\n        }\n        if (!even) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort();\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmpss_k_s_e.js:31:12)\n\
    \    at Object.<anonymous> (/tmp/tmpss_k_s_e.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326089
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j = 0; j < temp.length; j++)\
    \ {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n    \
    \            break;\n            }\n        }\n        if (flag) {\n         \
    \   result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) => a -\
    \ b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326082
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        if (x[i].toString().split('').every(y =>\
    \ y % 2 != 0)) {\n            result.push(x[i]);\n        }\n    }\n    return\
    \ result.sort((a, b) => a - b);\n}\nconsole.log(unique_digits([15, 33, 1422, 1]));\n\
    console.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326089
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: number[] = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let even: boolean = false;\n     \
    \   let num: number = x[i];\n        while (num > 0) {\n            if (num %\
    \ 2 == 0) {\n                even = true;\n                break;\n          \
    \  }\n            num = Math.floor(num / 10);\n        }\n        if (!even) {\n\
    \            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326090
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let arr = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        let num = x[i];\n        let flag = true;\n  \
    \      while (num > 0) {\n            let digit = num % 10;\n            if (digit\
    \ % 2 == 0) {\n                flag = false;\n                break;\n       \
    \     }\n            num = Math.floor(num / 10);\n        }\n        if (flag)\
    \ {\n            arr.push(x[i]);\n        }\n    }\n    return arr.sort((a, b)\
    \ => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326091
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let arr: any = [];\n    for (let i\
    \ = 0; i < x.length; i++) {\n        let str: string = x[i].toString();\n    \
    \    let flag: boolean = true;\n        for (let j = 0; j < str.length; j++) {\n\
    \            if (str[j] % 2 == 0) {\n                flag = false;\n         \
    \       break;\n            }\n        }\n        if (flag) {\n            arr.push(x[i]);\n\
    \        }\n    }\n    return arr.sort();\n}\nconsole.log(unique_digits([15, 33,\
    \ 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmp8omixrtz.ts(15,17): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    '
  timestamp: 1660326091
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let even_digits = [2, 4, 6, 8, 0];\n\
    \    let result = [];\n    for (let i = 0; i < x.length; i++) {\n        let is_even\
    \ = false;\n        let num = x[i];\n        while (num > 0) {\n            let\
    \ digit = num % 10;\n            if (even_digits.includes(digit)) {\n        \
    \        is_even = true;\n                break;\n            }\n            num\
    \ = Math.floor(num / 10);\n        }\n        if (!is_even) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpma3vf6yb.ts(17,29): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1660326091
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let arr: any = [];\n    for (let i:\
    \ number = 0; i < x.length; i++) {\n        let num: number = x[i];\n        let\
    \ flag: boolean = true;\n        while (num > 0) {\n            let digit: number\
    \ = num % 10;\n            if (digit % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n            num = Math.floor(num / 10);\n\
    \        }\n        if (flag) {\n            arr.push(x[i]);\n        }\n    }\n\
    \    return arr.sort();\n}\nconsole.log(unique_digits([15, 33, 1422, 1]));\nconsole.log(unique_digits([152,\
    \ 323, 1422, 10]));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmpfp15yxpc.js:36:12)\n\
    \    at Object.<anonymous> (/tmp/tmpfp15yxpc.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326091
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let even = false;\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (num[j] % 2 ===\
    \ 0) {\n                even = true;\n            }\n        }\n        if (!even)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326088
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        if (x[i].toString().length == 1) {\n  \
    \          result.push(x[i]);\n        } else {\n            let flag: boolean\
    \ = true;\n            for (let j = 0; j < x[i].toString().length; j++) {\n  \
    \              if (x[i].toString()[j] % 2 == 0) {\n                    flag =\
    \ false;\n                    break;\n                }\n            }\n     \
    \       if (flag) {\n                result.push(x[i]);\n            }\n     \
    \   }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326092
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n        let\
    \ num: number = x[i];\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                isEven = true;\n                break;\n            }\n \
    \           num = Math.floor(num / 10);\n        }\n        if (!isEven) {\n \
    \           result.push(x[i]);\n        }\n    }\n    return result.sort((a, b)\
    \ => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326092
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let num: number = x[i];\n     \
    \   let isEven: boolean = false;\n        while (num > 0) {\n            if (num\
    \ % 2 === 0) {\n                isEven = true;\n                break;\n     \
    \       }\n            num = Math.floor(num / 10);\n        }\n        if (!isEven)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326092
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let flag = true;\n        let num = x[i];\n\
    \        while (num > 0) {\n            if (num % 2 == 0) {\n                flag\
    \ = false;\n                break;\n            }\n            num = Math.floor(num\
    \ / 10);\n        }\n        if (flag) {\n            result.push(x[i]);\n   \
    \     }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326086
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let even: boolean = false;\n        let\
    \ num: number = x[i];\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even = true;\n                break;\n            }\n   \
    \         num = Math.floor(num / 10);\n        }\n        if (!even) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) =>\
    \ a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326081
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let str: string = x[i].toString();\n  \
    \      let flag: boolean = true;\n        for (let j = 0; j < str.length; j++)\
    \ {\n            if (str[j] % 2 == 0) {\n                flag = false;\n     \
    \           break;\n            }\n        }\n        if (flag) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) => a -\
    \ b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpsipsy4ro.ts(15,17): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    '
  timestamp: 1660326088
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let num = x[i].toString();\n        let flag\
    \ = true;\n        for (let j = 0; j < num.length; j++) {\n            if (num[j]\
    \ % 2 == 0) {\n                flag = false;\n                break;\n       \
    \     }\n        }\n        if (flag) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326093
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let unique_digits_array: number[] =\
    \ [];\n    for (let i = 0; i < x.length; i++) {\n        let is_even: boolean\
    \ = false;\n        let num: number = x[i];\n        while (num > 0) {\n     \
    \       let digit: number = num % 10;\n            if (digit % 2 == 0) {\n   \
    \             is_even = true;\n                break;\n            }\n       \
    \     num = Math.floor(num / 10);\n        }\n        if (!is_even) {\n      \
    \      unique_digits_array.push(x[i]);\n        }\n    }\n    return unique_digits_array.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326093
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let even: any = [];\n    let odd: any\
    \ = [];\n    for (let i = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let count: number = 0;\n        for (let j = 0; j < temp.length; j++)\
    \ {\n            if (temp[j] % 2 === 0) {\n                count++;\n        \
    \    }\n        }\n        if (count === 0) {\n            odd.push(x[i]);\n \
    \       }\n        else {\n            even.push(x[i]);\n        }\n    }\n  \
    \  return odd.sort();\n}\nconsole.log(unique_digits([15, 33, 1422, 1]));\nconsole.log(unique_digits([152,\
    \ 323, 1422, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmpg13j935d.js:37:12)\n\
    \    at Object.<anonymous> (/tmp/tmpg13j935d.js:39:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326094
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let even_digits = [2, 4, 6, 8, 0];\n\
    \    let result = [];\n    for (let i = 0; i < x.length; i++) {\n        let flag\
    \ = true;\n        let num = x[i];\n        while (num > 0) {\n            let\
    \ digit = num % 10;\n            if (even_digits.includes(digit)) {\n        \
    \        flag = false;\n                break;\n            }\n            num\
    \ = Math.floor(num / 10);\n        }\n        if (flag) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpj9mwr2n4.ts(17,29): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1660326094
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let unique = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let num = x[i];\n        let isUnique = true;\n\
    \        while (num > 0) {\n            let digit = num % 10;\n            if\
    \ (digit % 2 == 0) {\n                isUnique = false;\n                break;\n\
    \            }\n            num = Math.floor(num / 10);\n        }\n        if\
    \ (isUnique) {\n            unique.push(x[i]);\n        }\n    }\n    return unique.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326094
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let temp = x[i].toString().split('');\n   \
    \     let flag = true;\n        for (let j = 0; j < temp.length; j++) {\n    \
    \        if (parseInt(temp[j]) % 2 == 0) {\n                flag = false;\n  \
    \              break;\n            }\n        }\n        if (flag) {\n       \
    \     result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) => a\
    \ - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326095
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let num = x[i].toString();\n        let flag\
    \ = true;\n        for (let j = 0; j < num.length; j++) {\n            if (num[j]\
    \ % 2 == 0) {\n                flag = false;\n                break;\n       \
    \     }\n        }\n        if (flag) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326093
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let str: any = x[i].toString();\n     \
    \   let flag: boolean = true;\n        for (let j = 0; j < str.length; j++) {\n\
    \            if (str[j] % 2 == 0) {\n                flag = false;\n         \
    \       break;\n            }\n        }\n        if (flag) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort();\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmp1xfa240v.js:32:12)\n\
    \    at Object.<anonymous> (/tmp/tmp1xfa240v.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326095
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j = 0; j < temp.length; j++)\
    \ {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n    \
    \            break;\n            }\n        }\n        if (flag) {\n         \
    \   result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) => a -\
    \ b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326082
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let temp: string = x[i].toString();\n\
    \        let flag: boolean = true;\n        for (let j: number = 0; j < temp.length;\
    \ j++) {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n        }\n        if (flag) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort();\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpm6osh84f.ts(15,17): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    '
  timestamp: 1660326095
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let temp = x[i].toString().split('');\n   \
    \     let flag = false;\n        for (let j = 0; j < temp.length; j++) {\n   \
    \         if (temp[j] % 2 == 0) {\n                flag = true;\n            \
    \    break;\n            }\n        }\n        if (!flag) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326096
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let num = x[i].toString().split('');\n\
    \        let flag = true;\n        for (let j = 0; j < num.length; j++) {\n  \
    \          if (num[j] % 2 == 0) {\n                flag = false;\n           \
    \     break;\n            }\n        }\n        if (flag) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326096
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let evens = [];\n    let odds = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let num = x[i].toString();\n\
    \        let isEven = false;\n        for (let j = 0; j < num.length; j++) {\n\
    \            if (num[j] % 2 === 0) {\n                isEven = true;\n       \
    \     }\n        }\n        if (isEven) {\n            evens.push(x[i]);\n   \
    \     } else {\n            odds.push(x[i]);\n        }\n    }\n    return odds.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326097
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j = 0; j < temp.length; j++)\
    \ {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n    \
    \            break;\n            }\n        }\n        if (flag) {\n         \
    \   result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) => a -\
    \ b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326082
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let even_digits = [0, 2, 4, 6, 8];\n\
    \    let unique_digits = [];\n    for (let i = 0; i < x.length; i++) {\n     \
    \   let has_even_digit = false;\n        for (let j = 0; j < even_digits.length;\
    \ j++) {\n            if (x[i].toString().includes(even_digits[j].toString()))\
    \ {\n                has_even_digit = true;\n            }\n        }\n      \
    \  if (!has_even_digit) {\n            unique_digits.push(x[i]);\n        }\n\
    \    }\n    return unique_digits.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326097
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let temp = x[i].toString().split('');\n   \
    \     let flag = true;\n        for (let j = 0; j < temp.length; j++) {\n    \
    \        if (temp[j] % 2 == 0) {\n                flag = false;\n            \
    \    break;\n            }\n        }\n        if (flag) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326097
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let num = x[i];\n        let isEven = false;\n\
    \        while (num > 0) {\n            if (num % 2 === 0) {\n               \
    \ isEven = true;\n                break;\n            }\n            num = Math.floor(num\
    \ / 10);\n        }\n        if (!isEven) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326098
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n        let\
    \ num: number = x[i];\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                isEven = true;\n                break;\n            }\n \
    \           num = Math.floor(num / 10);\n        }\n        if (!isEven) {\n \
    \           result.push(x[i]);\n        }\n    }\n    return result.sort((a, b)\
    \ => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326092
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        if (x[i].toString().length == 1) {\n  \
    \          result.push(x[i]);\n        } else {\n            let flag: boolean\
    \ = true;\n            for (let j = 0; j < x[i].toString().length; j++) {\n  \
    \              if (x[i].toString()[j] % 2 == 0) {\n                    flag =\
    \ false;\n                    break;\n                }\n            }\n     \
    \       if (flag) {\n                result.push(x[i]);\n            }\n     \
    \   }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326092
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let evenDigits = [];\n    let uniqueDigits\
    \ = [];\n    for (let i = 0; i < x.length; i++) {\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (num[j] % 2 ===\
    \ 0) {\n                evenDigits.push(x[i]);\n                break;\n     \
    \       }\n        }\n    }\n    for (let i = 0; i < x.length; i++) {\n      \
    \  if (evenDigits.indexOf(x[i]) === -1) {\n            uniqueDigits.push(x[i]);\n\
    \        }\n    }\n    return uniqueDigits.sort((a, b) => a - b);\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326098
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j: number = 0; j < temp.length;\
    \ j++) {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n        }\n        if (flag) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) =>\
    \ a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326098
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let num: any = x[i];\n        let isUnique:\
    \ boolean = true;\n        while (num > 0) {\n            let digit: number =\
    \ num % 10;\n            if (digit % 2 == 0) {\n                isUnique = false;\n\
    \                break;\n            }\n            num = Math.floor(num / 10);\n\
    \        }\n        if (isUnique) {\n            result.push(x[i]);\n        }\n\
    \    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326099
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n\
    \        let num: number = x[i];\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                isEven = true;\n                break;\n      \
    \      }\n            num = Math.floor(num / 10);\n        }\n        if (!isEven)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326088
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        if (x[i].toString().length === 1) {\n \
    \           result.push(x[i]);\n        } else {\n            let isUnique: boolean\
    \ = true;\n            for (let j = 0; j < x[i].toString().length; j++) {\n  \
    \              if (x[i].toString()[j] % 2 === 0) {\n                    isUnique\
    \ = false;\n                }\n            }\n            if (isUnique) {\n  \
    \              result.push(x[i]);\n            }\n        }\n    }\n    return\
    \ result.sort((a, b) => a - b);\n}\nconsole.log(unique_digits([15, 33, 1422, 1]));\n\
    console.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326099
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let even: boolean = false;\n        let\
    \ num: any = x[i].toString();\n        for (let j = 0; j < num.length; j++) {\n\
    \            if (num[j] % 2 == 0) {\n                even = true;\n          \
    \  }\n        }\n        if (!even) {\n            result.push(x[i]);\n      \
    \  }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326100
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let res: any = [];\n    for (let i\
    \ = 0; i < x.length; i++) {\n        if (x[i].toString().length == 1) {\n    \
    \        res.push(x[i]);\n        } else {\n            let flag: boolean = true;\n\
    \            for (let j = 0; j < x[i].toString().length; j++) {\n            \
    \    if (x[i].toString()[j] % 2 == 0) {\n                    flag = false;\n \
    \                   break;\n                }\n            }\n            if (flag)\
    \ {\n                res.push(x[i]);\n            }\n        }\n    }\n    return\
    \ res.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326100
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let temp = x[i].toString().split('');\n   \
    \     let flag = true;\n        for (let j = 0; j < temp.length; j++) {\n    \
    \        if (temp[j] % 2 == 0) {\n                flag = false;\n            \
    \    break;\n            }\n        }\n        if (flag) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326097
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let isEven = false;\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (num[j] % 2 ===\
    \ 0) {\n                isEven = true;\n                break;\n            }\n\
    \        }\n        if (!isEven) {\n            result.push(x[i]);\n        }\n\
    \    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326075
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let even: boolean = false;\n  \
    \      let num: number = x[i];\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even = true;\n                break;\n        \
    \    }\n            num = Math.floor(num / 10);\n        }\n        if (!even)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmp411n7por.js:33:12)\n\
    \    at Object.<anonymous> (/tmp/tmp411n7por.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326100
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let num: any = x[i];\n        let isEven:\
    \ boolean = false;\n        while (num > 0) {\n            if (num % 2 == 0) {\n\
    \                isEven = true;\n                break;\n            }\n     \
    \       num = Math.floor(num / 10);\n        }\n        if (!isEven) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) =>\
    \ a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326101
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let res: any = [];\n    for (let i\
    \ = 0; i < x.length; i++) {\n        let num = x[i];\n        let isUnique = true;\n\
    \        while (num > 0) {\n            let digit = num % 10;\n            if\
    \ (digit % 2 == 0) {\n                isUnique = false;\n                break;\n\
    \            }\n            num = Math.floor(num / 10);\n        }\n        if\
    \ (isUnique) {\n            res.push(x[i]);\n        }\n    }\n    return res.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326101
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let arr: any = [];\n    for (let i\
    \ = 0; i < x.length; i++) {\n        let num = x[i];\n        let str = num.toString();\n\
    \        let flag = true;\n        for (let j = 0; j < str.length; j++) {\n  \
    \          if (str[j] % 2 == 0) {\n                flag = false;\n           \
    \     break;\n            }\n        }\n        if (flag) {\n            arr.push(num);\n\
    \        }\n    }\n    return arr.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326101
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let even: boolean = false;\n  \
    \      let num: number = x[i];\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even = true;\n                break;\n        \
    \    }\n            num = Math.floor(num / 10);\n        }\n        if (!even)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmp411n7por.js:33:12)\n\
    \    at Object.<anonymous> (/tmp/tmp411n7por.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326100
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let flag: boolean = true;\n        let\
    \ temp: any = x[i].toString().split('');\n        for (let j = 0; j < temp.length;\
    \ j++) {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n        }\n        if (flag) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) =>\
    \ a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326102
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let even_digits = [2, 4, 6, 8, 0];\n\
    \    let unique_digits = [];\n    for (let i = 0; i < x.length; i++) {\n     \
    \   let even_digit_found = false;\n        let num = x[i];\n        while (num\
    \ > 0) {\n            let digit = num % 10;\n            if (even_digits.includes(digit))\
    \ {\n                even_digit_found = true;\n                break;\n      \
    \      }\n            num = Math.floor(num / 10);\n        }\n        if (!even_digit_found)\
    \ {\n            unique_digits.push(x[i]);\n        }\n    }\n    return unique_digits.sort();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmp602aea4h.ts(17,29): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1660326102
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let evenDigits = [2, 4, 6, 8, 0];\n\
    \    let result = [];\n    for (let i = 0; i < x.length; i++) {\n        let hasEvenDigit\
    \ = false;\n        let num = x[i];\n        while (num > 0) {\n            let\
    \ digit = num % 10;\n            if (evenDigits.includes(digit)) {\n         \
    \       hasEvenDigit = true;\n                break;\n            }\n        \
    \    num = Math.floor(num / 10);\n        }\n        if (!hasEvenDigit) {\n  \
    \          result.push(x[i]);\n        }\n    }\n    return result.sort((a, b)\
    \ => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpc5kqpjst.ts(17,28): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1660326102
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let temp = x[i].toString().split('');\n   \
    \     let flag = true;\n        for (let j = 0; j < temp.length; j++) {\n    \
    \        if (temp[j] % 2 == 0) {\n                flag = false;\n            \
    \    break;\n            }\n        }\n        if (flag) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326097
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let isEven = false;\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (parseInt(num[j])\
    \ % 2 === 0) {\n                isEven = true;\n                break;\n     \
    \       }\n        }\n        if (!isEven) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326103
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j = 0; j < temp.length; j++)\
    \ {\n            if (parseInt(temp[j]) % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n        }\n        if (flag) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort();\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmpin4rfjsy.js:32:12)\n\
    \    at Object.<anonymous> (/tmp/tmpin4rfjsy.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326103
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let temp = x[i].toString().split('');\n   \
    \     for (let j = 0; j < temp.length; j++) {\n            if (temp[j] % 2 ===\
    \ 0) {\n                break;\n            }\n            if (j === temp.length\
    \ - 1) {\n                result.push(x[i]);\n            }\n        }\n    }\n\
    \    return result.sort((a, b) => a - b);\n}\nconsole.log(unique_digits([15, 33,\
    \ 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326104
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j = 0; j < temp.length; j++)\
    \ {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n    \
    \            break;\n            }\n        }\n        if (flag) {\n         \
    \   result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) => a -\
    \ b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326082
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let evenDigits = [];\n    let oddDigits\
    \ = [];\n    for (let i = 0; i < x.length; i++) {\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (num[j] % 2 ===\
    \ 0) {\n                evenDigits.push(x[i]);\n                break;\n     \
    \       }\n        }\n    }\n    for (let i = 0; i < x.length; i++) {\n      \
    \  if (evenDigits.indexOf(x[i]) === -1) {\n            oddDigits.push(x[i]);\n\
    \        }\n    }\n    return oddDigits.sort((a, b) => a - b);\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326104
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let num = x[i].toString().split('');\n    \
    \    let flag = true;\n        for (let j = 0; j < num.length; j++) {\n      \
    \      if (num[j] % 2 == 0) {\n                flag = false;\n               \
    \ break;\n            }\n        }\n        if (flag) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326104
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let arr: any = [];\n    for (let i\
    \ = 0; i < x.length; i++) {\n        let num: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j = 0; j < num.length; j++)\
    \ {\n            if (num[j] % 2 == 0) {\n                flag = false;\n     \
    \           break;\n            }\n        }\n        if (flag) {\n          \
    \  arr.push(x[i]);\n        }\n    }\n    return arr.sort();\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmpmayg82jv.js:32:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmayg82jv.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326105
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let num = x[i];\n        let isEven = false;\n\
    \        while (num > 0) {\n            if (num % 2 === 0) {\n               \
    \ isEven = true;\n                break;\n            }\n            num = Math.floor(num\
    \ / 10);\n        }\n        if (!isEven) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326098
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let even_digits = [];\n    let unique_digits\
    \ = [];\n    for (let i = 0; i < x.length; i++) {\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (num[j] % 2 ===\
    \ 0) {\n                even_digits.push(num);\n                break;\n     \
    \       }\n        }\n    }\n    for (let i = 0; i < x.length; i++) {\n      \
    \  if (even_digits.indexOf(x[i].toString()) === -1) {\n            unique_digits.push(x[i]);\n\
    \        }\n    }\n    return unique_digits.sort((a, b) => a - b);\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326105
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j = 0; j < temp.length; j++)\
    \ {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n    \
    \            break;\n            }\n        }\n        if (flag) {\n         \
    \   result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) => a -\
    \ b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326082
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let num = x[i];\n        let isEven = false;\n\
    \        while (num > 0) {\n            if (num % 2 === 0) {\n               \
    \ isEven = true;\n                break;\n            }\n            num = Math.floor(num\
    \ / 10);\n        }\n        if (!isEven) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326098
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let even_digits: any = [];\n    let\
    \ odd_digits: any = [];\n    let result: any = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let num: any = x[i];\n        let num_str: any = num.toString();\n\
    \        for (let j = 0; j < num_str.length; j++) {\n            let digit: any\
    \ = num_str[j];\n            if (digit % 2 == 0) {\n                even_digits.push(num);\n\
    \                break;\n            }\n        }\n    }\n    for (let i = 0;\
    \ i < x.length; i++) {\n        if (even_digits.indexOf(x[i]) == -1) {\n     \
    \       odd_digits.push(x[i]);\n        }\n    }\n    for (let i = 0; i < odd_digits.length;\
    \ i++) {\n        for (let j = 0; j < odd_digits.length; j++) {\n            if\
    \ (odd_digits[i] < odd_digits[j]) {\n                let temp: any = odd_digits[i];\n\
    \                odd_digits[i] = odd_digits[j];\n                odd_digits[j]\
    \ = temp;\n            }\n        }\n    }\n    return odd_digits;\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326106
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j = 0; j < temp.length; j++)\
    \ {\n            if (parseInt(temp[j]) % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n        }\n        if (flag) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) =>\
    \ a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326079
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let even: boolean = false;\n  \
    \      let num: number = x[i];\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even = true;\n                break;\n        \
    \    }\n            num = Math.floor(num / 10);\n        }\n        if (!even)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326085
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j = 0; j < temp.length; j++)\
    \ {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n    \
    \            break;\n            }\n        }\n        if (flag) {\n         \
    \   result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) => a -\
    \ b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326082
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let arr: number[] = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        if (x[i].toString().split('').every(e =>\
    \ e % 2 != 0)) {\n            arr.push(x[i]);\n        }\n    }\n    return arr.sort((a,\
    \ b) => a - b);\n}\nconsole.log(unique_digits([15, 33, 1422, 1]));\nconsole.log(unique_digits([152,\
    \ 323, 1422, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326106
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let arr = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        let num = x[i];\n        let isEven = false;\n\
    \        while (num > 0) {\n            let digit = num % 10;\n            if\
    \ (digit % 2 == 0) {\n                isEven = true;\n                break;\n\
    \            }\n            num = Math.floor(num / 10);\n        }\n        if\
    \ (!isEven) {\n            arr.push(x[i]);\n        }\n    }\n    return arr.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326106
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n\
    \        let num: number = x[i];\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                isEven = true;\n                break;\n      \
    \      }\n            num = Math.floor(num / 10);\n        }\n        if (!isEven)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326088
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let y: any = [];\n    for (let i: number\
    \ = 0; i < x.length; i++) {\n        let z: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j: number = 0; j < z.length;\
    \ j++) {\n            if (z[j] % 2 == 0) {\n                flag = false;\n  \
    \              break;\n            }\n        }\n        if (flag) {\n       \
    \     y.push(x[i]);\n        }\n    }\n    return y.sort();\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmp46fbizw7.js:32:12)\n\
    \    at Object.<anonymous> (/tmp/tmp46fbizw7.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326107
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n\
    \        let num: number = x[i];\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                isEven = true;\n                break;\n      \
    \      }\n            num = Math.floor(num / 10);\n        }\n        if (!isEven)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326088
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        if (x[i].toString().length == 1) {\n  \
    \          result.push(x[i]);\n        } else {\n            let flag: boolean\
    \ = true;\n            for (let j = 0; j < x[i].toString().length; j++) {\n  \
    \              if (x[i].toString()[j] % 2 == 0) {\n                    flag =\
    \ false;\n                    break;\n                }\n            }\n     \
    \       if (flag) {\n                result.push(x[i]);\n            }\n     \
    \   }\n    }\n    return result.sort((a, b) => a - b);\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326107
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let even: boolean = false;\n        let\
    \ num: number = x[i];\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even = true;\n                break;\n            }\n   \
    \         num = Math.floor(num / 10);\n        }\n        if (!even) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) =>\
    \ a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326081
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j: number = 0; j < temp.length;\
    \ j++) {\n            if (parseInt(temp[j]) % 2 == 0) {\n                flag\
    \ = false;\n                break;\n            }\n        }\n        if (flag)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326108
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let num: any = x[i];\n        let isEven:\
    \ boolean = false;\n        while (num > 0) {\n            let digit: number =\
    \ num % 10;\n            if (digit % 2 == 0) {\n                isEven = true;\n\
    \                break;\n            }\n            num = Math.floor(num / 10);\n\
    \        }\n        if (!isEven) {\n            result.push(x[i]);\n        }\n\
    \    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326108
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let str: string = x[i].toString();\n\
    \        let flag: boolean = true;\n        for (let j: number = 0; j < str.length;\
    \ j++) {\n            if (str[j] % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n        }\n        if (flag) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort();\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmp10mtp8o8.ts(15,17): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    '
  timestamp: 1660326108
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let isEven = false;\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (parseInt(num[j])\
    \ % 2 === 0) {\n                isEven = true;\n                break;\n     \
    \       }\n        }\n        if (!isEven) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326103
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n\
    \        let temp: number = x[i];\n        while (temp > 0) {\n            if\
    \ (temp % 2 == 0) {\n                isEven = true;\n                break;\n\
    \            }\n            temp = Math.floor(temp / 10);\n        }\n       \
    \ if (!isEven) {\n            result.push(x[i]);\n        }\n    }\n    return\
    \ result.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326109
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let unique_digits = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let even_digit = false;\n        let num\
    \ = x[i];\n        while (num > 0) {\n            if (num % 2 == 0) {\n      \
    \          even_digit = true;\n                break;\n            }\n       \
    \     num = Math.floor(num / 10);\n        }\n        if (!even_digit) {\n   \
    \         unique_digits.push(x[i]);\n        }\n    }\n    return unique_digits.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326109
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n\
    \        let num: number = x[i];\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                isEven = true;\n                break;\n      \
    \      }\n            num = Math.floor(num / 10);\n        }\n        if (!isEven)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmpqqimbuia.js:33:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqqimbuia.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326110
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let num: any = x[i];\n        let numString:\
    \ string = num.toString();\n        let even: boolean = false;\n        for (let\
    \ j = 0; j < numString.length; j++) {\n            if (numString[j] % 2 === 0)\
    \ {\n                even = true;\n            }\n        }\n        if (!even)\
    \ {\n            result.push(num);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbvcwi9mx.ts(16,17): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    '
  timestamp: 1660326110
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let num = x[i];\n        let isEven = false;\n\
    \        while (num > 0) {\n            let digit = num % 10;\n            if\
    \ (digit % 2 === 0) {\n                isEven = true;\n                break;\n\
    \            }\n            num = Math.floor(num / 10);\n        }\n        if\
    \ (!isEven) {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326089
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n\
    \        let num: number = x[i];\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                isEven = true;\n                break;\n      \
    \      }\n            num = Math.floor(num / 10);\n        }\n        if (!isEven)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326088
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let num = x[i].toString();\n        let flag\
    \ = true;\n        for (let j = 0; j < num.length; j++) {\n            if (num[j]\
    \ % 2 == 0) {\n                flag = false;\n                break;\n       \
    \     }\n        }\n        if (flag) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326093
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j = 0; j < temp.length; j++)\
    \ {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n    \
    \            break;\n            }\n        }\n        if (flag) {\n         \
    \   result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) => a -\
    \ b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326082
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let isUnique = true;\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (num[j] % 2 ===\
    \ 0) {\n                isUnique = false;\n                break;\n          \
    \  }\n        }\n        if (isUnique) {\n            result.push(x[i]);\n   \
    \     }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326110
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let isEven = false;\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (num[j] % 2 ===\
    \ 0) {\n                isEven = true;\n                break;\n            }\n\
    \        }\n        if (!isEven) {\n            result.push(x[i]);\n        }\n\
    \    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326075
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let count: number = 0;\n        for (let\
    \ j = 0; j < x[i].toString().length; j++) {\n            if (x[i].toString()[j]\
    \ % 2 == 0) {\n                count++;\n            }\n        }\n        if\
    \ (count == 0) {\n            result.push(x[i]);\n        }\n    }\n    return\
    \ result.sort((a, b) => a - b);\n}\nconsole.log(unique_digits([15, 33, 1422, 1]));\n\
    console.log(unique_digits([152, 323, 1422, 10]));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326111
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let num = x[i].toString();\n        let flag\
    \ = true;\n        for (let j = 0; j < num.length; j++) {\n            if (num[j]\
    \ % 2 == 0) {\n                flag = false;\n                break;\n       \
    \     }\n        }\n        if (flag) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326093
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let even: boolean = false;\n  \
    \      let num: number = x[i];\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                even = true;\n                break;\n        \
    \    }\n            num = Math.floor(num / 10);\n        }\n        if (!even)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmp411n7por.js:33:12)\n\
    \    at Object.<anonymous> (/tmp/tmp411n7por.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326100
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let even_digits = [2, 4, 6, 8, 0];\n\
    \    let unique_digits = [];\n    for (let i = 0; i < x.length; i++) {\n     \
    \   let is_unique = true;\n        let num = x[i];\n        while (num > 0) {\n\
    \            let digit = num % 10;\n            if (even_digits.includes(digit))\
    \ {\n                is_unique = false;\n                break;\n            }\n\
    \            num = Math.floor(num / 10);\n        }\n        if (is_unique) {\n\
    \            unique_digits.push(x[i]);\n        }\n    }\n    return unique_digits.sort();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpbfm16o0c.ts(17,29): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1660326111
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let unique_digits = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let even = false;\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (num[j] % 2 ==\
    \ 0) {\n                even = true;\n            }\n        }\n        if (!even)\
    \ {\n            unique_digits.push(x[i]);\n        }\n    }\n    return unique_digits.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326111
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let even = false;\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (num[j] % 2 ===\
    \ 0) {\n                even = true;\n            }\n        }\n        if (!even)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort();\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmp_ugplw7g.js:31:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_ugplw7g.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326112
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n        let\
    \ num: number = x[i];\n        while (num > 0) {\n            let digit: number\
    \ = num % 10;\n            if (digit % 2 == 0) {\n                isEven = true;\n\
    \                break;\n            }\n            num = Math.floor(num / 10);\n\
    \        }\n        if (!isEven) {\n            result.push(x[i]);\n        }\n\
    \    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326112
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let isEven = false;\n        let num =\
    \ x[i].toString();\n        for (let j = 0; j < num.length; j++) {\n         \
    \   if (num[j] % 2 === 0) {\n                isEven = true;\n                break;\n\
    \            }\n        }\n        if (!isEven) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326112
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let arr = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        let str = x[i].toString();\n        let flag =\
    \ true;\n        for (let j = 0; j < str.length; j++) {\n            if (str[j]\
    \ % 2 == 0) {\n                flag = false;\n                break;\n       \
    \     }\n        }\n        if (flag) {\n            arr.push(x[i]);\n       \
    \ }\n    }\n    return arr.sort((a, b) => a - b);\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326113
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let str: string = x[i].toString();\n  \
    \      let flag: boolean = true;\n        for (let j = 0; j < str.length; j++)\
    \ {\n            if (str[j] % 2 == 0) {\n                flag = false;\n     \
    \           break;\n            }\n        }\n        if (flag) {\n          \
    \  result.push(x[i]);\n        }\n    }\n    return result.sort();\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpemaeje7s.ts(15,17): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    '
  timestamp: 1660326113
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let evenDigits = [2, 4, 6, 8, 0];\n\
    \    let result = [];\n    for (let i = 0; i < x.length; i++) {\n        let isEven\
    \ = false;\n        for (let j = 0; j < evenDigits.length; j++) {\n          \
    \  if (x[i].toString().includes(evenDigits[j])) {\n                isEven = true;\n\
    \                break;\n            }\n        }\n        if (!isEven) {\n  \
    \          result.push(x[i]);\n        }\n    }\n    return result.sort((a, b)\
    \ => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326114
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n\
    \        let num: number = x[i];\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                isEven = true;\n                break;\n      \
    \      }\n            num = Math.floor(num / 10);\n        }\n        if (!isEven)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326088
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let isEven = false;\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (num[j] % 2 ===\
    \ 0) {\n                isEven = true;\n                break;\n            }\n\
    \        }\n        if (!isEven) {\n            result.push(x[i]);\n        }\n\
    \    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326075
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j = 0; j < temp.length; j++)\
    \ {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n    \
    \            break;\n            }\n        }\n        if (flag) {\n         \
    \   result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) => a -\
    \ b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326082
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let isEven = false;\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (parseInt(num[j])\
    \ % 2 === 0) {\n                isEven = true;\n                break;\n     \
    \       }\n        }\n        if (!isEven) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326103
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j: number = 0; j < temp.length;\
    \ j++) {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n        }\n        if (flag) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) =>\
    \ a - b);\n}\nconsole.log(unique_digits([15, 33, 1422, 1]));\nconsole.log(unique_digits([152,\
    \ 323, 1422, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326114
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let even_digits = [2, 4, 6, 8, 0];\n\
    \    let even_digits_in_array = [];\n    let even_digits_in_array_index = [];\n\
    \    let unique_digits_array = [];\n    for (let i = 0; i < x.length; i++) {\n\
    \        for (let j = 0; j < even_digits.length; j++) {\n            if (x[i].toString().includes(even_digits[j]))\
    \ {\n                even_digits_in_array.push(x[i]);\n                even_digits_in_array_index.push(i);\n\
    \            }\n        }\n    }\n    for (let i = 0; i < x.length; i++) {\n \
    \       if (!even_digits_in_array_index.includes(i)) {\n            unique_digits_array.push(x[i]);\n\
    \        }\n    }\n    return unique_digits_array.sort((a, b) => a - b);\n}\n\
    console.log(unique_digits([15, 33, 1422, 1]));\nconsole.log(unique_digits([152,\
    \ 323, 1422, 10]));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpgm4gzy0a.ts(23,41): error TS2339: Property ''includes''
    does not exist on type ''any[]''.

    '
  timestamp: 1660326114
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j: number = 0; j < temp.length;\
    \ j++) {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n        }\n        if (flag) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort();\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmp322kpj2d.js:32:12)\n\
    \    at Object.<anonymous> (/tmp/tmp322kpj2d.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326085
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j: number = 0; j < temp.length;\
    \ j++) {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n        }\n        if (flag) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort();\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmp322kpj2d.js:32:12)\n\
    \    at Object.<anonymous> (/tmp/tmp322kpj2d.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326085
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let unique_digits_array: any = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let even_digit_flag: boolean\
    \ = false;\n        let number_string: string = x[i].toString();\n        for\
    \ (let j = 0; j < number_string.length; j++) {\n            if (number_string[j]\
    \ % 2 == 0) {\n                even_digit_flag = true;\n                break;\n\
    \            }\n        }\n        if (!even_digit_flag) {\n            unique_digits_array.push(x[i]);\n\
    \        }\n    }\n    return unique_digits_array.sort((a, b) => a - b);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmp0k7gde_r.ts(15,17): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    '
  timestamp: 1660326115
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        if (x[i].toString().length == 1) {\n  \
    \          result.push(x[i]);\n        } else {\n            let flag: boolean\
    \ = true;\n            for (let j = 0; j < x[i].toString().length; j++) {\n  \
    \              if (x[i].toString()[j] % 2 == 0) {\n                    flag =\
    \ false;\n                    break;\n                }\n            }\n     \
    \       if (flag) {\n                result.push(x[i]);\n            }\n     \
    \   }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326092
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let even_digits = [2, 4, 6, 8, 0];\n\
    \    let unique_digits = [];\n    for (let i = 0; i < x.length; i++) {\n     \
    \   let has_even_digit = false;\n        let number = x[i];\n        while (number\
    \ > 0) {\n            let digit = number % 10;\n            if (even_digits.includes(digit))\
    \ {\n                has_even_digit = true;\n                break;\n        \
    \    }\n            number = Math.floor(number / 10);\n        }\n        if (!has_even_digit)\
    \ {\n            unique_digits.push(x[i]);\n        }\n    }\n    return unique_digits.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmplleo9alc.ts(17,29): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1660326115
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let flag: boolean = true;\n        let\
    \ num: number = x[i];\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                flag = false;\n                break;\n            }\n  \
    \          num = Math.floor(num / 10);\n        }\n        if (flag) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) =>\
    \ a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326116
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let even: boolean = false;\n        let\
    \ num: number = x[i];\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even = true;\n                break;\n            }\n   \
    \         num = Math.floor(num / 10);\n        }\n        if (!even) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort();\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmp5tssw2fv.js:33:12)\n\
    \    at Object.<anonymous> (/tmp/tmp5tssw2fv.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326116
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let even: boolean = false;\n        let\
    \ num: number = x[i];\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                even = true;\n                break;\n            }\n   \
    \         num = Math.floor(num / 10);\n        }\n        if (!even) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort();\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmp5tssw2fv.js:33:12)\n\
    \    at Object.<anonymous> (/tmp/tmp5tssw2fv.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326116
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let arr: any = [];\n    for (let i\
    \ = 0; i < x.length; i++) {\n        let str: string = x[i].toString();\n    \
    \    let flag: boolean = true;\n        for (let j = 0; j < str.length; j++) {\n\
    \            if (parseInt(str[j]) % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n        }\n        if (flag) {\n     \
    \       arr.push(x[i]);\n        }\n    }\n    return arr.sort((a, b) => a - b);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326116
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let even_digits: any = [];\n    let\
    \ odd_digits: any = [];\n    for (let i = 0; i < x.length; i++) {\n        let\
    \ number: any = x[i];\n        let digits: any = number.toString().split('');\n\
    \        let even: any = [];\n        let odd: any = [];\n        for (let j =\
    \ 0; j < digits.length; j++) {\n            if (digits[j] % 2 == 0) {\n      \
    \          even.push(digits[j]);\n            } else {\n                odd.push(digits[j]);\n\
    \            }\n        }\n        if (even.length == 0) {\n            even_digits.push(number);\n\
    \        } else {\n            odd_digits.push(number);\n        }\n    }\n  \
    \  return even_digits.sort();\n}\nconsole.log(unique_digits([15, 33, 1422, 1]));\n\
    console.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmp38y7iyy1.js:42:12)\n\
    \    at Object.<anonymous> (/tmp/tmp38y7iyy1.js:44:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326117
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let arr: any = [];\n    for (let i\
    \ = 0; i < x.length; i++) {\n        let str: string = x[i].toString();\n    \
    \    let flag: boolean = true;\n        for (let j = 0; j < str.length; j++) {\n\
    \            if (str[j] % 2 == 0) {\n                flag = false;\n         \
    \       break;\n            }\n        }\n        if (flag) {\n            arr.push(x[i]);\n\
    \        }\n    }\n    return arr.sort((a, b) => a - b);\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmplnk648df.ts(15,17): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    '
  timestamp: 1660326117
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n        let\
    \ num: number = x[i];\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                isEven = true;\n                break;\n            }\n \
    \           num = Math.floor(num / 10);\n        }\n        if (!isEven) {\n \
    \           result.push(x[i]);\n        }\n    }\n    return result.sort((a, b)\
    \ => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326092
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let arr = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        let num = x[i];\n        let flag = true;\n  \
    \      while (num > 0) {\n            let digit = num % 10;\n            if (digit\
    \ % 2 == 0) {\n                flag = false;\n                break;\n       \
    \     }\n            num = Math.floor(num / 10);\n        }\n        if (flag)\
    \ {\n            arr.push(x[i]);\n        }\n    }\n    return arr.sort((a, b)\
    \ => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326091
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let unique_digits_array: any = [];\n\
    \    for (let i = 0; i < x.length; i++) {\n        let even_digit_flag: boolean\
    \ = false;\n        let number_string: string = x[i].toString();\n        for\
    \ (let j = 0; j < number_string.length; j++) {\n            if (parseInt(number_string[j])\
    \ % 2 == 0) {\n                even_digit_flag = true;\n                break;\n\
    \            }\n        }\n        if (!even_digit_flag) {\n            unique_digits_array.push(x[i]);\n\
    \        }\n    }\n    return unique_digits_array.sort();\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmp6xn3f6nx.js:32:12)\n\
    \    at Object.<anonymous> (/tmp/tmp6xn3f6nx.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326117
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let num = x[i].toString();\n        let flag\
    \ = false;\n        for (let j = 0; j < num.length; j++) {\n            if (num[j]\
    \ % 2 == 0) {\n                flag = true;\n                break;\n        \
    \    }\n        }\n        if (!flag) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326118
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let arr: any = [];\n    for (let i\
    \ = 0; i < x.length; i++) {\n        let num: number = x[i];\n        let str:\
    \ string = num.toString();\n        let flag: boolean = true;\n        for (let\
    \ j = 0; j < str.length; j++) {\n            if (parseInt(str[j]) % 2 == 0) {\n\
    \                flag = false;\n                break;\n            }\n      \
    \  }\n        if (flag) {\n            arr.push(num);\n        }\n    }\n    arr.sort(function\
    \ (a, b) { return a - b });\n    return arr;\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326119
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let even_digits = [2, 4, 6, 8, 0];\n\
    \    let result = [];\n    for (let i = 0; i < x.length; i++) {\n        let is_even\
    \ = false;\n        let num = x[i];\n        while (num > 0) {\n            let\
    \ digit = num % 10;\n            if (even_digits.includes(digit)) {\n        \
    \        is_even = true;\n                break;\n            }\n            num\
    \ = Math.floor(num / 10);\n        }\n        if (!is_even) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpma3vf6yb.ts(17,29): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1660326091
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let num = x[i].toString();\n        let flag\
    \ = true;\n        for (let j = 0; j < num.length; j++) {\n            if (num[j]\
    \ % 2 == 0) {\n                flag = false;\n                break;\n       \
    \     }\n        }\n        if (flag) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326093
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let evenDigits = [2, 4, 6, 8, 0];\n\
    \    let uniqueDigits = [];\n    for (let i = 0; i < x.length; i++) {\n      \
    \  let isUnique = true;\n        let num = x[i];\n        while (num > 0) {\n\
    \            let digit = num % 10;\n            if (evenDigits.includes(digit))\
    \ {\n                isUnique = false;\n                break;\n            }\n\
    \            num = Math.floor(num / 10);\n        }\n        if (isUnique) {\n\
    \            uniqueDigits.push(x[i]);\n        }\n    }\n    return uniqueDigits.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmppd6f4qos.ts(17,28): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1660326118
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let evenDigits: number[] = [0, 2, 4,\
    \ 6, 8];\n    let uniqueDigits: number[] = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let isUnique: boolean = true;\n        let num: number = x[i];\n\
    \        while (num > 0) {\n            let digit: number = num % 10;\n      \
    \      if (evenDigits.includes(digit)) {\n                isUnique = false;\n\
    \                break;\n            }\n            num = Math.floor(num / 10);\n\
    \        }\n        if (isUnique) {\n            uniqueDigits.push(x[i]);\n  \
    \      }\n    }\n    return uniqueDigits.sort((a, b) => a - b);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmp6d41xwwp.ts(17,28): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1660326119
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j = 0; j < temp.length; j++)\
    \ {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n    \
    \            break;\n            }\n        }\n        if (flag) {\n         \
    \   result.push(x[i]);\n        }\n    }\n    return result.sort();\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmpbx5zxpaw.js:32:12)\n\
    \    at Object.<anonymous> (/tmp/tmpbx5zxpaw.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660326120
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let res: any = [];\n    for (let i\
    \ = 0; i < x.length; i++) {\n        let temp = x[i].toString().split('');\n \
    \       let flag = true;\n        for (let j = 0; j < temp.length; j++) {\n  \
    \          if (temp[j] % 2 == 0) {\n                flag = false;\n          \
    \      break;\n            }\n        }\n        if (flag) {\n            res.push(x[i]);\n\
    \        }\n    }\n    return res.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326120
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let arr = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        let num = x[i].toString();\n        let flag =\
    \ true;\n        for (let j = 0; j < num.length; j++) {\n            if (num[j]\
    \ % 2 == 0) {\n                flag = false;\n                break;\n       \
    \     }\n        }\n        if (flag) {\n            arr.push(x[i]);\n       \
    \ }\n    }\n    return arr.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326120
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n        let\
    \ num: number = x[i];\n        while (num > 0) {\n            if (num % 2 == 0)\
    \ {\n                isEven = true;\n                break;\n            }\n \
    \           num = Math.floor(num / 10);\n        }\n        if (!isEven) {\n \
    \           result.push(x[i]);\n        }\n    }\n    return result.sort((a, b)\
    \ => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326092
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let isEven = false;\n        let num = x[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            if (num[j] % 2 ===\
    \ 0) {\n                isEven = true;\n                break;\n            }\n\
    \        }\n        if (!isEven) {\n            result.push(x[i]);\n        }\n\
    \    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326075
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let even_digits = [0, 2, 4, 6, 8];\n\
    \    let even_digits_set = new Set(even_digits);\n    let result = [];\n    for\
    \ (let i = 0; i < x.length; i++) {\n        let digits = x[i].toString().split('');\n\
    \        let has_even_digit = false;\n        for (let j = 0; j < digits.length;\
    \ j++) {\n            if (even_digits_set.has(parseInt(digits[j]))) {\n      \
    \          has_even_digit = true;\n                break;\n            }\n   \
    \     }\n        if (!has_even_digit) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpze9txtkv.ts(11,31): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1660326120
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let num: number = x[i];\n     \
    \   let isEven: boolean = false;\n        while (num > 0) {\n            if (num\
    \ % 2 === 0) {\n                isEven = true;\n                break;\n     \
    \       }\n            num = Math.floor(num / 10);\n        }\n        if (!isEven)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326092
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j: number = 0; j < temp.length;\
    \ j++) {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n        }\n        if (flag) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) =>\
    \ a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326098
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let hasEvenDigit: boolean = false;\n  \
    \      let num: number = x[i];\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                hasEvenDigit = true;\n                break;\n\
    \            }\n            num = Math.floor(num / 10);\n        }\n        if\
    \ (!hasEvenDigit) {\n            result.push(x[i]);\n        }\n    }\n    return\
    \ result.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326121
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let temp = x[i].toString().split('');\n   \
    \     let flag = true;\n        for (let j = 0; j < temp.length; j++) {\n    \
    \        if (temp[j] % 2 == 0) {\n                flag = false;\n            \
    \    break;\n            }\n        }\n        if (flag) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326097
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n\
    \        let num: number = x[i];\n        while (num > 0) {\n            if (num\
    \ % 2 === 0) {\n                isEven = true;\n                break;\n     \
    \       }\n            num = Math.floor(num / 10);\n        }\n        if (!isEven)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326122
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let str: string = x[i].toString();\n  \
    \      let flag: boolean = true;\n        for (let j = 0; j < str.length; j++)\
    \ {\n            if (parseInt(str[j]) % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n        }\n        if (flag) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) =>\
    \ a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326122
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let evenDigits = [2, 4, 6, 8, 0];\n\
    \    let result = [];\n    for (let i = 0; i < x.length; i++) {\n        let isEven\
    \ = false;\n        let num = x[i];\n        while (num > 0) {\n            let\
    \ digit = num % 10;\n            if (evenDigits.includes(digit)) {\n         \
    \       isEven = true;\n                break;\n            }\n            num\
    \ = Math.floor(num / 10);\n        }\n        if (!isEven) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpa6_do5vj.ts(17,28): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1660326078
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j: number = 0; j < temp.length;\
    \ j++) {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n\
    \                break;\n            }\n        }\n        if (flag) {\n     \
    \       result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) =>\
    \ a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326098
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i = 0; i < x.length; i++) {\n        let temp: any = x[i].toString().split('');\n\
    \        let flag: boolean = true;\n        for (let j = 0; j < temp.length; j++)\
    \ {\n            if (temp[j] % 2 == 0) {\n                flag = false;\n    \
    \            break;\n            }\n        }\n        if (flag) {\n         \
    \   result.push(x[i]);\n        }\n    }\n    return result.sort((a, b) => a -\
    \ b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326082
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n\
    \        let num: number = x[i];\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                isEven = true;\n                break;\n      \
    \      }\n            num = Math.floor(num / 10);\n        }\n        if (!isEven)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326088
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n\
    \        let num: number = x[i];\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                isEven = true;\n                break;\n      \
    \      }\n            num = Math.floor(num / 10);\n        }\n        if (!isEven)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326088
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let arr: any = [];\n    for (let i\
    \ = 0; i < x.length; i++) {\n        let str: string = x[i].toString();\n    \
    \    let flag: boolean = true;\n        for (let j = 0; j < str.length; j++) {\n\
    \            if (str[j] % 2 == 0) {\n                flag = false;\n         \
    \       break;\n            }\n        }\n        if (flag) {\n            arr.push(x[i]);\n\
    \        }\n    }\n    return arr.sort((a, b) => a - b);\n}\nconsole.log(unique_digits([15,\
    \ 33, 1422, 1]));\nconsole.log(unique_digits([152, 323, 1422, 10]));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmplnk648df.ts(15,17): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    '
  timestamp: 1660326117
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let str = x[i].toString();\n        let flag\
    \ = true;\n        for (let j = 0; j < str.length; j++) {\n            if (str[j]\
    \ % 2 == 0) {\n                flag = false;\n                break;\n       \
    \     }\n        }\n        if (flag) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326122
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let num = x[i].toString();\n        let flag\
    \ = true;\n        for (let j = 0; j < num.length; j++) {\n            if (num[j]\
    \ % 2 == 0) {\n                flag = false;\n                break;\n       \
    \     }\n        }\n        if (flag) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326093
- exit_code: 1
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let y: any = [];\n    for (let i =\
    \ 0; i < x.length; i++) {\n        let z: any = x[i].toString().split('');\n \
    \       let count: number = 0;\n        for (let j = 0; j < z.length; j++) {\n\
    \            if (z[j] % 2 == 0) {\n                count++;\n            }\n \
    \       }\n        if (count == 0) {\n            y.push(x[i]);\n        }\n \
    \   }\n    return y.sort();\n}\nconsole.log(unique_digits([15, 33, 1422, 1]));\n\
    console.log(unique_digits([152, 323, 1422, 10]));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  135,\n  31\n\
    ]\n\nshould loosely deep-equal\n\n[\n  31,\n  135\n]\n    at test (/tmp/tmpk4zl7z3z.js:33:12)\n\
    \    at Object.<anonymous> (/tmp/tmpk4zl7z3z.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 135, 31\
    \ ],\n  expected: [ 31, 135 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '[ 1, 15, 33 ]

    []

    '
  timestamp: 1660326123
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n\
    \        let num: number = x[i];\n        while (num > 0) {\n            let digit:\
    \ number = num % 10;\n            if (digit % 2 == 0) {\n                isEven\
    \ = true;\n                break;\n            }\n            num = Math.floor(num\
    \ / 10);\n        }\n        if (!isEven) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326123
- exit_code: 2
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let evenDigits = [2, 4, 6, 8, 0];\n\
    \    let result = [];\n    for (let i = 0; i < x.length; i++) {\n        let isEven\
    \ = false;\n        let num = x[i];\n        while (num > 0) {\n            let\
    \ digit = num % 10;\n            if (evenDigits.includes(digit)) {\n         \
    \       isEven = true;\n                break;\n            }\n            num\
    \ = Math.floor(num / 10);\n        }\n        if (!isEven) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpa6_do5vj.ts(17,28): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1660326078
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let evenDigits: number[] = [2, 4, 6,\
    \ 8, 0];\n    let result: number[] = [];\n    for (let i: number = 0; i < x.length;\
    \ i++) {\n        let isEven: boolean = false;\n        let num: number = x[i];\n\
    \        while (num > 0) {\n            let digit: number = num % 10;\n      \
    \      if (evenDigits.indexOf(digit) >= 0) {\n                isEven = true;\n\
    \                break;\n            }\n            num = Math.floor(num / 10);\n\
    \        }\n        if (!isEven) {\n            result.push(x[i]);\n        }\n\
    \    }\n    return result.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326123
- exit_code: 0
  program: "//Given an array of positive integers x. return a sorted array of all\
    \ \n// elements that hasn't any even digit.\n// Note: Returned array should be\
    \ sorted in increasing order.\n// For example:\n// >>> unique_digits([15, 33,\
    \ 1422, 1])\n// [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\n\
    function unique_digits(x: any): any {\n    let result: any = [];\n    for (let\
    \ i: number = 0; i < x.length; i++) {\n        let isEven: boolean = false;\n\
    \        let num: number = x[i];\n        while (num > 0) {\n            if (num\
    \ % 2 == 0) {\n                isEven = true;\n                break;\n      \
    \      }\n            num = Math.floor(num / 10);\n        }\n        if (!isEven)\
    \ {\n            result.push(x[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660326088

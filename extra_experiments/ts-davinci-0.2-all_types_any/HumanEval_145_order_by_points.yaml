name: HumanEval_145_order_by_points
language: ts
prompt: "//Write a function which sorts the given array of integers\n// in ascending\
  \ order according to the sum of their digits.\n// Note: if there are several items\
  \ with similar sum of their digits,\n// order them based on their index in original\
  \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
  \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
  \ any): any {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
  \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
  \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
  \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
  \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
  \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9,\
  \ 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
  \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
completions: ["    let result: any = [];\n    let sum: any = [];\n    for (let i =\
    \ 0; i < nums.length; i++) {\n        sum.push(nums[i].toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b)));\n    }\n    let sortedSum = sum.slice().sort((a,\
    \ b) => a - b);\n    for (let i = 0; i < sortedSum.length; i++) {\n        result.push(nums[sum.indexOf(sortedSum[i])]);\n\
    \        sum[sum.indexOf(sortedSum[i])] = -1;\n    }\n    return result;\n}\n",
  "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let sum = 0;\n    let arr = [];\n    for (let i = 0; i < nums.length; i++)\
    \ {\n        let num = nums[i];\n        let numStr = num.toString();\n      \
    \  for (let j = 0; j < numStr.length; j++) {\n            sum += parseInt(numStr[j]);\n\
    \        }\n        arr.push(sum);\n        sum = 0;\n    }\n    let sortedArr\
    \ = arr.slice().sort();\n    let result = [];\n    for (let i = 0; i < sortedArr.length;\
    \ i++) {\n        let index = arr.indexOf(sortedArr[i]);\n        result.push(nums[index]);\n\
    \        arr[index] = -1;\n    }\n    return result;\n}\n", "  return nums.sort((a,\
    \ b) => {\n    let aSum = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n    let bSum = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n    return aSum - bSum;\n  });\n}\n", "    let sum = 0;\n    let result\
    \ = [];\n    let sumArr = [];\n    let indexArr = [];\n    let index = 0;\n  \
    \  for (let i = 0; i < nums.length; i++) {\n        for (let j = 0; j < nums[i].toString().length;\
    \ j++) {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n   \
    \     sumArr.push(sum);\n        sum = 0;\n    }\n    for (let i = 0; i < sumArr.length;\
    \ i++) {\n        for (let j = 0; j < sumArr.length; j++) {\n            if (sumArr[i]\
    \ < sumArr[j]) {\n                index = sumArr[i];\n                sumArr[i]\
    \ = sumArr[j];\n                sumArr[j] = index;\n                index = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = index;\n      \
    \      }\n        }\n    }\n    return nums;\n}\n", "    let sum: number = 0;\n\
    \    let arr: number[] = [];\n    let arr2: number[] = [];\n    let arr3: number[]\
    \ = [];\n    let arr4: number[] = [];\n    let arr5: number[] = [];\n    let arr6:\
    \ number[] = [];\n    let arr7: number[] = [];\n    let arr8: number[] = [];\n\
    \    let arr9: number[] = [];\n    let arr10: number[] = [];\n    let arr11: number[]\
    \ = [];\n    let arr12: number[] = [];\n    let arr13: number[] = [];\n    let\
    \ arr14: number[] = [];\n    let arr15: number[] = [];\n    let arr16: number[]\
    \ = [];\n    let arr17: number[] = [];\n    let arr18: number[] = [];\n    let\
    \ arr19: number[] = [];\n    let arr20: number[] = [];\n    let arr21: number[]\
    \ = [];\n    let arr22: number[] = [];\n    let arr23: number[] = [];\n    let\
    \ arr24: number[] = [];\n    let arr25: number[] = [];\n    let arr26: number[]\
    \ = [];\n    let arr27: number[] = [];\n    let arr28: number[] = [];\n    let\
    \ arr29: number[] = [];\n    let arr30: number[] = [];\n    let arr31: number[]\
    \ = [];\n    let arr32: number[] = [];\n    let arr33: number[] = [];\n    let\
    \ arr34: number[] = [];\n    let arr35: number[] = [];\n    let arr36: number[]\
    \ = [];\n    let arr37: number[] = [];\n    let arr38: number[] = [];\n    let\
    \ arr39: number[] = [];\n    let arr40: number[] = [];\n    let arr41: number[]\
    \ = [];\n    let arr42: number[] = [];\n    let arr43: number[] = [];\n    let\
    \ arr44: number[] = [];\n    let arr45: number[] = [];\n    let arr46: number[]\
    \ = [];\n    let arr47: number[] = [];\n    let arr48: number[] = [];\n    let\
    \ arr49: number[] = [];\n    let arr50: number[] = [];\n    let arr", "    if\
    \ (nums.length === 0) {\n        return [];\n    }\n    let sum = 0;\n    let\
    \ sumArr = [];\n    for (let i = 0; i < nums.length; i++) {\n        sum = 0;\n\
    \        for (let j = 0; j < nums[i].toString().length; j++) {\n            sum\
    \ += parseInt(nums[i].toString()[j]);\n        }\n        sumArr.push(sum);\n\
    \    }\n    let temp;\n    for (let i = 0; i < sumArr.length; i++) {\n       \
    \ for (let j = i + 1; j < sumArr.length; j++) {\n            if (sumArr[i] > sumArr[j])\
    \ {\n                temp = sumArr[i];\n                sumArr[i] = sumArr[j];\n\
    \                sumArr[j] = temp;\n                temp = nums[i];\n        \
    \        nums[i] = nums[j];\n                nums[j] = temp;\n            }\n\
    \        }\n    }\n    return nums;\n}\n", "    let sum = 0;\n    let sumArr =\
    \ [];\n    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n   \
    \     sum = 0;\n        for (let j = 0; j < nums[i].toString().length; j++) {\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        sumArr.push(sum);\n\
    \    }\n    let sortedSumArr = sumArr.sort((a, b) => a - b);\n    for (let i =\
    \ 0; i < sortedSumArr.length; i++) {\n        for (let j = 0; j < sumArr.length;\
    \ j++) {\n            if (sortedSumArr[i] === sumArr[j]) {\n                result.push(nums[j]);\n\
    \                sumArr[j] = -1;\n                break;\n            }\n    \
    \    }\n    }\n    return result;\n}\n", "    let result: any = [];\n    let sum:\
    \ any = [];\n    for (let i: number = 0; i < nums.length; i++) {\n        sum.push(nums[i].toString().split('').reduce((a:\
    \ number, b: number) => a + +b, 0));\n    }\n    for (let i: number = 0; i < nums.length;\
    \ i++) {\n        let min: number = Math.min(...sum);\n        let index: number\
    \ = sum.indexOf(min);\n        result.push(nums[index]);\n        sum.splice(index,\
    \ 1);\n        nums.splice(index, 1);\n    }\n    return result;\n}\n", "    let\
    \ result = [];\n    let sum = 0;\n    let sumArr = [];\n    let sumObj = {};\n\
    \    for (let i = 0; i < nums.length; i++) {\n        sum = 0;\n        for (let\
    \ j = 0; j < nums[i].toString().length; j++) {\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sumObj[sum] = nums[i];\n        sumArr.push(sum);\n    }\n\
    \    sumArr.sort((a, b) => a - b);\n    for (let i = 0; i < sumArr.length; i++)\
    \ {\n        result.push(sumObj[sumArr[i]]);\n    }\n    return result;\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n        let bSum = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n        return aSum - bSum;\n    });\n}\n",
  "  let result = [];\n  let sum = 0;\n  let sumArr = [];\n  for (let i = 0; i < nums.length;\
    \ i++) {\n    sum = 0;\n    for (let j = 0; j < nums[i].toString().length; j++)\
    \ {\n      sum += parseInt(nums[i].toString()[j]);\n    }\n    sumArr.push(sum);\n\
    \  }\n  for (let i = 0; i < sumArr.length; i++) {\n    let min = Math.min(...sumArr);\n\
    \    let index = sumArr.indexOf(min);\n    result.push(nums[index]);\n    sumArr.splice(index,\
    \ 1);\n    nums.splice(index, 1);\n  }\n  return result;\n}\n", "    let sum =\
    \ 0;\n    let arr = [];\n    for (let i = 0; i < nums.length; i++) {\n       \
    \ sum = 0;\n        for (let j = 0; j < nums[i].toString().length; j++) {\n  \
    \          sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n\
    \    }\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j\
    \ < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                let\
    \ temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n\
    \                temp = nums[i];\n                nums[i] = nums[j];\n       \
    \         nums[j] = temp;\n            }\n        }\n    }\n    return nums;\n\
    }\n", "    let result = [];\n    let sum = 0;\n    let sum_arr = [];\n    let\
    \ index_arr = [];\n    for (let i = 0; i < nums.length; i++) {\n        sum =\
    \ 0;\n        for (let j = 0; j < nums[i].toString().length; j++) {\n        \
    \    sum += parseInt(nums[i].toString()[j]);\n        }\n        sum_arr.push(sum);\n\
    \        index_arr.push(i);\n    }\n    for (let i = 0; i < sum_arr.length; i++)\
    \ {\n        for (let j = 0; j < sum_arr.length - 1; j++) {\n            if (sum_arr[j]\
    \ > sum_arr[j + 1]) {\n                let temp = sum_arr[j];\n              \
    \  sum_arr[j] = sum_arr[j + 1];\n                sum_arr[j + 1] = temp;\n    \
    \            temp = index_arr[j];\n                index_arr[j] = index_arr[j\
    \ + 1];\n                index_arr[j + 1] = temp;\n            }\n        }\n\
    \    }\n    for (let i = 0; i < index_arr.length; i++) {\n        result.push(nums[index_arr[i]]);\n\
    \    }\n    return result;\n}\n", "    return nums.sort((a, b) => {\n        let\
    \ aSum = a.toString().split('').reduce((sum, curr) => sum + parseInt(curr), 0);\n\
    \        let bSum = b.toString().split('').reduce((sum, curr) => sum + parseInt(curr),\
    \ 0);\n        return aSum - bSum;\n    });\n}\n", "    let sum = 0;\n    let\
    \ arr = [];\n    let arr2 = [];\n    for (let i = 0; i < nums.length; i++) {\n\
    \        let num = nums[i];\n        while (num > 0) {\n            sum += num\
    \ % 10;\n            num = Math.floor(num / 10);\n        }\n        arr.push(sum);\n\
    \        sum = 0;\n    }\n    for (let i = 0; i < arr.length; i++) {\n       \
    \ for (let j = 0; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n\
    \                let temp = arr[i];\n                arr[i] = arr[j];\n      \
    \          arr[j] = temp;\n                temp = nums[i];\n                nums[i]\
    \ = nums[j];\n                nums[j] = temp;\n            }\n        }\n    }\n\
    \    return nums;\n}\n", "    let result = [];\n    let sum = 0;\n    let sumArr\
    \ = [];\n    for (let i = 0; i < nums.length; i++) {\n        sum = 0;\n     \
    \   for (let j = 0; j < nums[i].toString().length; j++) {\n            sum +=\
    \ parseInt(nums[i].toString()[j]);\n        }\n        sumArr.push(sum);\n   \
    \ }\n    for (let i = 0; i < sumArr.length; i++) {\n        for (let j = 0; j\
    \ < sumArr.length; j++) {\n            if (sumArr[i] < sumArr[j]) {\n        \
    \        let temp = sumArr[i];\n                sumArr[i] = sumArr[j];\n     \
    \           sumArr[j] = temp;\n                temp = nums[i];\n             \
    \   nums[i] = nums[j];\n                nums[j] = temp;\n            }\n     \
    \   }\n    }\n    return nums;\n}\n", "    let result: any = [];\n    let sum:\
    \ any = [];\n    for (let i: number = 0; i < nums.length; i++) {\n        sum.push(nums[i].toString().split('').reduce((a:\
    \ number, b: number) => parseInt(a) + parseInt(b)));\n    }\n    let sorted: any\
    \ = sum.slice().sort((a: number, b: number) => a - b);\n    for (let i: number\
    \ = 0; i < sorted.length; i++) {\n        result.push(nums[sum.indexOf(sorted[i])]);\n\
    \    }\n    return result;\n}\n", "    let nums_sum = nums.map(x => x.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0));\n    let nums_index = nums.map((x, i)\
    \ => i);\n    let nums_sorted = nums_sum.map((x, i) => [x, nums_index[i]]).sort((a,\
    \ b) => a[0] - b[0]);\n    let nums_sorted_index = nums_sorted.map(x => x[1]);\n\
    \    return nums_sorted_index.map(x => nums[x]);\n}\n", "    let sum = 0;\n  \
    \  let result = [];\n    let result2 = [];\n    let result3 = [];\n    let result4\
    \ = [];\n    let result5 = [];\n    let result6 = [];\n    let result7 = [];\n\
    \    let result8 = [];\n    let result9 = [];\n    let result10 = [];\n    let\
    \ result11 = [];\n    let result12 = [];\n    let result13 = [];\n    let result14\
    \ = [];\n    let result15 = [];\n    let result16 = [];\n    let result17 = [];\n\
    \    let result18 = [];\n    let result19 = [];\n    let result20 = [];\n    let\
    \ result21 = [];\n    let result22 = [];\n    let result23 = [];\n    let result24\
    \ = [];\n    let result25 = [];\n    let result26 = [];\n    let result27 = [];\n\
    \    let result28 = [];\n    let result29 = [];\n    let result30 = [];\n    let\
    \ result31 = [];\n    let result32 = [];\n    let result33 = [];\n    let result34\
    \ = [];\n    let result35 = [];\n    let result36 = [];\n    let result37 = [];\n\
    \    let result38 = [];\n    let result39 = [];\n    let result40 = [];\n    let\
    \ result41 = [];\n    let result42 = [];\n    let result43 = [];\n    let result44\
    \ = [];\n    let result45 = [];\n    let result46 = [];\n    let result47 = [];\n\
    \    let result48 = [];\n    let result49 = [];\n    let result50 = [];\n    let\
    \ result51 = [];\n    let result52 = [];\n    let result53 = [];\n    let result54\
    \ = [];\n    let result55 = [];\n    let result56 = [];\n    let result57 = [];\n\
    \    let result58 = [];\n    let result59 = [];\n    let result60 = [];\n    let\
    \ result61 = [];\n    let result62 = [];\n    let result63 = [];\n    let result64\
    \ = [];\n    let result65 = [];\n    let result66 = [];\n    let result67 = [];\n\
    \    let result68 = [];\n    let result69 = [];\n    let result70 = [];\n    let\
    \ result71 = [];\n    let result72 = [];\n   ", "    return nums.sort((a, b) =>\
    \ {\n        let sumA = a.toString().split('').reduce((acc, cur) => acc + parseInt(cur),\
    \ 0);\n        let sumB = b.toString().split('').reduce((acc, cur) => acc + parseInt(cur),\
    \ 0);\n        return sumA - sumB;\n    });\n}\n", "    let sum = 0;\n    let\
    \ sum1 = 0;\n    let sum2 = 0;\n    let sum3 = 0;\n    let sum4 = 0;\n    let\
    \ sum5 = 0;\n    let sum6 = 0;\n    let sum7 = 0;\n    let sum8 = 0;\n    let\
    \ sum9 = 0;\n    let sum10 = 0;\n    let sum11 = 0;\n    let sum12 = 0;\n    let\
    \ sum13 = 0;\n    let sum14 = 0;\n    let sum15 = 0;\n    let sum16 = 0;\n   \
    \ let sum17 = 0;\n    let sum18 = 0;\n    let sum19 = 0;\n    let sum20 = 0;\n\
    \    let sum21 = 0;\n    let sum22 = 0;\n    let sum23 = 0;\n    let sum24 = 0;\n\
    \    let sum25 = 0;\n    let sum26 = 0;\n    let sum27 = 0;\n    let sum28 = 0;\n\
    \    let sum29 = 0;\n    let sum30 = 0;\n    let sum31 = 0;\n    let sum32 = 0;\n\
    \    let sum33 = 0;\n    let sum34 = 0;\n    let sum35 = 0;\n    let sum36 = 0;\n\
    \    let sum37 = 0;\n    let sum38 = 0;\n    let sum39 = 0;\n    let sum40 = 0;\n\
    \    let sum41 = 0;\n    let sum42 = 0;\n    let sum43 = 0;\n    let sum44 = 0;\n\
    \    let sum45 = 0;\n    let sum46 = 0;\n    let sum47 = 0;\n    let sum48 = 0;\n\
    \    let sum49 = 0;\n    let sum50 = 0;\n    let sum51 = 0;\n    let sum52 = 0;\n\
    \    let sum53 = 0;\n    let sum54 = 0;\n    let sum55 = 0;\n    let sum56 = 0;\n\
    \    let sum57 = 0;\n    let sum58 = 0;\n    let sum59 = 0;\n    let sum60 = 0;\n\
    \    let sum61 = 0;\n    let sum62 = 0;\n    let sum63 = 0;\n", "    let sum =\
    \ 0;\n    let result = [];\n    let sumArr = [];\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        for (let j = 0; j < nums[i].toString().length; j++) {\n    \
    \        sum += parseInt(nums[i].toString()[j]);\n        }\n        sumArr.push(sum);\n\
    \        sum = 0;\n    }\n    for (let i = 0; i < sumArr.length; i++) {\n    \
    \    for (let j = 0; j < sumArr.length; j++) {\n            if (sumArr[i] < sumArr[j])\
    \ {\n                let temp = sumArr[i];\n                sumArr[i] = sumArr[j];\n\
    \                sumArr[j] = temp;\n                temp = nums[i];\n        \
    \        nums[i] = nums[j];\n                nums[j] = temp;\n            }\n\
    \        }\n    }\n    return nums;\n}\n", "    let result = [];\n    let sum\
    \ = 0;\n    let sumArr = [];\n    for (let i = 0; i < nums.length; i++) {\n  \
    \      sum = 0;\n        let num = nums[i].toString();\n        for (let j = 0;\
    \ j < num.length; j++) {\n            sum += parseInt(num[j]);\n        }\n  \
    \      sumArr.push(sum);\n    }\n    for (let i = 0; i < sumArr.length; i++) {\n\
    \        let min = Math.min(...sumArr);\n        let index = sumArr.indexOf(min);\n\
    \        result.push(nums[index]);\n        sumArr.splice(index, 1);\n       \
    \ nums.splice(index, 1);\n    }\n    return result;\n}\nconsole.log(order_by_points([1,\
    \ 11, -1, -11, -12]));\n", "    let result = [];\n    let sum = 0;\n    let sumArr\
    \ = [];\n    for (let i = 0; i < nums.length; i++) {\n        sum = 0;\n     \
    \   for (let j = 0; j < nums[i].toString().length; j++) {\n            sum +=\
    \ parseInt(nums[i].toString()[j]);\n        }\n        sumArr.push(sum);\n   \
    \ }\n    for (let i = 0; i < sumArr.length; i++) {\n        for (let j = 0; j\
    \ < sumArr.length; j++) {\n            if (sumArr[i] < sumArr[j]) {\n        \
    \        let temp = sumArr[i];\n                sumArr[i] = sumArr[j];\n     \
    \           sumArr[j] = temp;\n                temp = nums[i];\n             \
    \   nums[i] = nums[j];\n                nums[j] = temp;\n            }\n     \
    \   }\n    }\n    return nums;\n}\n", "    let result = [];\n    let sum = 0;\n\
    \    let sumArr = [];\n    let indexArr = [];\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        sum = 0;\n        for (let j = 0; j < nums[i].toString().length;\
    \ j++) {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n   \
    \     sumArr.push(sum);\n        indexArr.push(i);\n    }\n    for (let i = 0;\
    \ i < sumArr.length; i++) {\n        for (let j = 0; j < sumArr.length - 1; j++)\
    \ {\n            if (sumArr[j] > sumArr[j + 1]) {\n                let temp =\
    \ sumArr[j];\n                sumArr[j] = sumArr[j + 1];\n                sumArr[j\
    \ + 1] = temp;\n                let tempIndex = indexArr[j];\n               \
    \ indexArr[j] = indexArr[j + 1];\n                indexArr[j + 1] = tempIndex;\n\
    \            }\n        }\n    }\n    for (let i = 0; i < indexArr.length; i++)\
    \ {\n        result.push(nums[indexArr[i]]);\n    }\n    return result;\n}\n",
  "    let sum = 0;\n    let nums2 = [];\n    let nums3 = [];\n    let nums4 = [];\n\
    \    for (let i = 0; i < nums.length; i++) {\n        for (let j = 0; j < nums[i].toString().length;\
    \ j++) {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n   \
    \     nums2.push(sum);\n        sum = 0;\n    }\n    for (let i = 0; i < nums2.length;\
    \ i++) {\n        nums3.push(nums2[i]);\n    }\n    nums3.sort(function (a, b)\
    \ { return a - b });\n    for (let i = 0; i < nums3.length; i++) {\n        for\
    \ (let j = 0; j < nums2.length; j++) {\n            if (nums3[i] == nums2[j])\
    \ {\n                nums4.push(nums[j]);\n                nums2[j] = -1;\n  \
    \          }\n        }\n    }\n    return nums4;\n}\nconsole.log(order_by_points([1,\
    \ 11, -1, -11, -12]));\nconsole.log(order_by_points([]));\n", "  let result =\
    \ [];\n  let sum = 0;\n  let sumArr = [];\n  let indexArr = [];\n  for (let i\
    \ = 0; i < nums.length; i++) {\n    sum = 0;\n    for (let j = 0; j < nums[i].toString().length;\
    \ j++) {\n      sum += parseInt(nums[i].toString()[j]);\n    }\n    sumArr.push(sum);\n\
    \    indexArr.push(i);\n  }\n  for (let i = 0; i < sumArr.length; i++) {\n   \
    \ for (let j = 0; j < sumArr.length; j++) {\n      if (sumArr[i] < sumArr[j])\
    \ {\n        let temp = sumArr[i];\n        sumArr[i] = sumArr[j];\n        sumArr[j]\
    \ = temp;\n        let temp2 = indexArr[i];\n        indexArr[i] = indexArr[j];\n\
    \        indexArr[j] = temp2;\n      }\n    }\n  }\n  for (let i = 0; i < indexArr.length;\
    \ i++) {\n    result.push(nums[indexArr[i]]);\n  }\n  return result;\n}\n", " \
    \   let sum = 0;\n    let nums_sum = [];\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        sum = 0;\n        for (let j = 0; j < nums[i].toString().length;\
    \ j++) {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n   \
    \     nums_sum.push(sum);\n    }\n    let nums_sorted = [];\n    for (let i =\
    \ 0; i < nums.length; i++) {\n        let min = Math.min(...nums_sum);\n     \
    \   let index = nums_sum.indexOf(min);\n        nums_sorted.push(nums[index]);\n\
    \        nums_sum.splice(index, 1);\n        nums.splice(index, 1);\n    }\n \
    \   return nums_sorted;\n}\n", "    let result: any = [];\n    let sum: any =\
    \ [];\n    for (let i = 0; i < nums.length; i++) {\n        let temp: any = 0;\n\
    \        for (let j = 0; j < nums[i].toString().length; j++) {\n            temp\
    \ += parseInt(nums[i].toString()[j]);\n        }\n        sum.push(temp);\n  \
    \  }\n    for (let i = 0; i < sum.length; i++) {\n        let min: any = sum[i];\n\
    \        let index: any = i;\n        for (let j = i + 1; j < sum.length; j++)\
    \ {\n            if (sum[j] < min) {\n                min = sum[j];\n        \
    \        index = j;\n            }\n        }\n        let temp: any = sum[i];\n\
    \        sum[i] = sum[index];\n        sum[index] = temp;\n        temp = nums[i];\n\
    \        nums[i] = nums[index];\n        nums[index] = temp;\n    }\n    return\
    \ nums;\n}\nconsole.log(order_by_points([1, 11, -1, -11, -12]));\nconsole.log(order_by_points([]));\n",
  "  let result = [];\n  let sum = 0;\n  for (let i = 0; i < nums.length; i++) {\n\
    \    sum = 0;\n    let num = nums[i].toString();\n    for (let j = 0; j < num.length;\
    \ j++) {\n      sum += parseInt(num[j]);\n    }\n    result.push([sum, i]);\n\
    \  }\n  result.sort(function (a, b) {\n    if (a[0] === b[0]) {\n      return\
    \ a[1] - b[1];\n    }\n    return a[0] - b[0];\n  });\n  let final = [];\n  for\
    \ (let i = 0; i < result.length; i++) {\n    final.push(nums[result[i][1]]);\n\
    \  }\n  return final;\n}\n", "    let result: any = [];\n    let sum: any = [];\n\
    \    let index: any = [];\n    let sum_index: any = [];\n    let temp: any = [];\n\
    \    let temp_index: any = [];\n    let temp_sum: any = [];\n    let temp_sum_index:\
    \ any = [];\n    let temp_sum_index_index: any = [];\n    let temp_sum_index_index_index:\
    \ any = [];\n    let temp_sum_index_index_index_index: any = [];\n    let temp_sum_index_index_index_index_index:\
    \ any = [];\n    let temp_sum_index_index_index_index_index_index: any = [];\n\
    \    let temp_sum_index_index_index_index_index_index_index: any = [];\n    let\
    \ temp_sum_index_index_index_index_index_index_index_index: any = [];\n    let\
    \ temp_sum_index_index_index_index_index_index_index_index_index: any = [];\n\
    \    let temp_sum_index_index_index_index_index_index_index_index_index_index:\
    \ any = [];\n    let temp_sum_index_index_index_index_index_index_index_index_index_index_index:\
    \ any = [];\n    let temp_sum_index_index_index_index_index_index_index_index_index_index_index_index:\
    \ any = [];\n    let temp_sum_index_index_index_index_index_index_index_index_index_index_index_index_index:\
    \ any = [];\n    let temp_sum_index_index_index_index_index_index_index_index_index_index_index_index_index_index:\
    \ any = [];\n    let temp_sum_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index:\
    \ any = [];\n    let temp_sum_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index:\
    \ any = [];\n    let temp_sum_index_index_index_index_index_index", "    let sum\
    \ = 0;\n    let result = [];\n    let nums_sum = [];\n    for (let i = 0; i <\
    \ nums.length; i++) {\n        sum = 0;\n        for (let j = 0; j < nums[i].toString().length;\
    \ j++) {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n   \
    \     nums_sum.push(sum);\n    }\n    for (let i = 0; i < nums.length; i++) {\n\
    \        let min = Math.min(...nums_sum);\n        let min_index = nums_sum.indexOf(min);\n\
    \        result.push(nums[min_index]);\n        nums_sum.splice(min_index, 1);\n\
    \        nums.splice(min_index, 1);\n    }\n    return result;\n}\n", "    if\
    \ (nums.length === 0) {\n        return [];\n    }\n    let result = nums.map((num,\
    \ index) => {\n        return {\n            num: num,\n            index: index,\n\
    \            sum: num.toString().split('').reduce((acc, cur) => {\n          \
    \      return acc + parseInt(cur);\n            }, 0)\n        }\n    }).sort((a,\
    \ b) => {\n        if (a.sum === b.sum) {\n            return a.index - b.index;\n\
    \        }\n        return a.sum - b.sum;\n    });\n    return result.map(item\
    \ => item.num);\n}\n", "    let nums_sorted = nums.sort((a, b) => {\n        let\
    \ sum_a = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr), 0);\n\
    \        let sum_b = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n        return sum_a - sum_b;\n    });\n    return nums_sorted;\n}\n",
  "    let result: any = [];\n    let sum: any = [];\n    let index: any = [];\n \
    \   let temp: any = [];\n    let temp2: any = [];\n    for (let i: number = 0;\
    \ i < nums.length; i++) {\n        temp = nums[i].toString().split('');\n    \
    \    for (let j: number = 0; j < temp.length; j++) {\n            temp2.push(parseInt(temp[j]));\n\
    \        }\n        sum.push(temp2.reduce((a, b) => a + b, 0));\n        temp2\
    \ = [];\n    }\n    for (let i: number = 0; i < sum.length; i++) {\n        index.push(i);\n\
    \    }\n    for (let i: number = 0; i < sum.length; i++) {\n        for (let j:\
    \ number = i + 1; j < sum.length; j++) {\n            if (sum[i] > sum[j]) {\n\
    \                let temp: number = sum[i];\n                sum[i] = sum[j];\n\
    \                sum[j] = temp;\n                let temp2: number = index[i];\n\
    \                index[i] = index[j];\n                index[j] = temp2;\n   \
    \         }\n        }\n    }\n    for (let i: number = 0; i < index.length; i++)\
    \ {\n        result.push(nums[index[i]]);\n    }\n    return result;\n}\n", " \
    \   let result: any = [];\n    let sum: any = 0;\n    let sum_arr: any = [];\n\
    \    let index: any = 0;\n    let index_arr: any = [];\n    for (let i: number\
    \ = 0; i < nums.length; i++) {\n        sum = 0;\n        for (let j: number =\
    \ 0; j < nums[i].toString().length; j++) {\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sum_arr.push(sum);\n        index_arr.push(i);\n    }\n  \
    \  for (let i: number = 0; i < sum_arr.length; i++) {\n        for (let j: number\
    \ = 0; j < sum_arr.length; j++) {\n            if (sum_arr[i] < sum_arr[j]) {\n\
    \                let temp: any = sum_arr[i];\n                sum_arr[i] = sum_arr[j];\n\
    \                sum_arr[j] = temp;\n                let temp_index: any = index_arr[i];\n\
    \                index_arr[i] = index_arr[j];\n                index_arr[j] =\
    \ temp_index;\n            }\n        }\n    }\n    for (let i: number = 0; i\
    \ < index_arr.length; i++) {\n        result.push(nums[index_arr[i]]);\n    }\n\
    \    return result;\n}\n", "    let result: any = [];\n    let sum: any = [];\n\
    \    let index: any = [];\n    for (let i: number = 0; i < nums.length; i++) {\n\
    \        let sum_of_digits: number = 0;\n        let num: number = nums[i];\n\
    \        while (num > 0) {\n            sum_of_digits += num % 10;\n         \
    \   num = Math.floor(num / 10);\n        }\n        sum.push(sum_of_digits);\n\
    \        index.push(i);\n    }\n    for (let i: number = 0; i < nums.length; i++)\
    \ {\n        let min: number = sum[i];\n        let min_index: number = i;\n \
    \       for (let j: number = i + 1; j < nums.length; j++) {\n            if (sum[j]\
    \ < min) {\n                min = sum[j];\n                min_index = j;\n  \
    \          }\n        }\n        let temp: number = sum[i];\n        sum[i] =\
    \ sum[min_index];\n        sum[min_index] = temp;\n        temp = index[i];\n\
    \        index[i] = index[min_index];\n        index[min_index] = temp;\n    }\n\
    \    for (let i: number = 0; i < nums.length; i++) {\n        result.push(nums[index[i]]);\n\
    \    }\n    return result;\n}\n", "    let result = [];\n    let sum = 0;\n  \
    \  let num = 0;\n    let index = 0;\n    let i = 0;\n    let j = 0;\n    let temp\
    \ = 0;\n    for (i = 0; i < nums.length; i++) {\n        num = nums[i];\n    \
    \    sum = 0;\n        while (num > 0) {\n            sum += num % 10;\n     \
    \       num = Math.floor(num / 10);\n        }\n        result.push({\n      \
    \      index: i,\n            sum: sum,\n            num: nums[i]\n        });\n\
    \    }\n    for (i = 0; i < result.length; i++) {\n        for (j = i + 1; j <\
    \ result.length; j++) {\n            if (result[i].sum > result[j].sum) {\n  \
    \              temp = result[i];\n                result[i] = result[j];\n   \
    \             result[j] = temp;\n            }\n        }\n    }\n    for (i =\
    \ 0; i < result.length; i++) {\n        nums[i] = result[i].num;\n    }\n    return\
    \ nums;\n}\n", "    let sum = 0;\n    let result = [];\n    let sumArray = [];\n\
    \    for (let i = 0; i < nums.length; i++) {\n        sum = 0;\n        for (let\
    \ j = 0; j < nums[i].toString().length; j++) {\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sumArray.push(sum);\n    }\n    let min = Math.min(...sumArray);\n\
    \    let minIndex = sumArray.indexOf(min);\n    result.push(nums[minIndex]);\n\
    \    sumArray.splice(minIndex, 1);\n    nums.splice(minIndex, 1);\n    while (sumArray.length\
    \ > 0) {\n        min = Math.min(...sumArray);\n        minIndex = sumArray.indexOf(min);\n\
    \        result.push(nums[minIndex]);\n        sumArray.splice(minIndex, 1);\n\
    \        nums.splice(minIndex, 1);\n    }\n    return result;\n}\n", "  let result\
    \ = [];\n  let sum = 0;\n  let sumArr = [];\n  let sortedArr = [];\n  let sortedSumArr\
    \ = [];\n  let sortedResult = [];\n  let sortedSum = 0;\n  let sortedSumArr2 =\
    \ [];\n  let sortedResult2 = [];\n  let sortedResult3 = [];\n  let sortedResult4\
    \ = [];\n  let sortedResult5 = [];\n  let sortedResult6 = [];\n  let sortedResult7\
    \ = [];\n  let sortedResult8 = [];\n  let sortedResult9 = [];\n  let sortedResult10\
    \ = [];\n  let sortedResult11 = [];\n  let sortedResult12 = [];\n  let sortedResult13\
    \ = [];\n  let sortedResult14 = [];\n  let sortedResult15 = [];\n  let sortedResult16\
    \ = [];\n  let sortedResult17 = [];\n  let sortedResult18 = [];\n  let sortedResult19\
    \ = [];\n  let sortedResult20 = [];\n  let sortedResult21 = [];\n  let sortedResult22\
    \ = [];\n  let sortedResult23 = [];\n  let sortedResult24 = [];\n  let sortedResult25\
    \ = [];\n  let sortedResult26 = [];\n  let sortedResult27 = [];\n  let sortedResult28\
    \ = [];\n  let sortedResult29 = [];\n  let sortedResult30 = [];\n  let sortedResult31\
    \ = [];\n  let sortedResult32 = [];\n  let sortedResult33 = [];\n  let sortedResult34\
    \ = [];\n  let sortedResult35 = [];\n  let sortedResult36 = [];\n  let sortedResult37\
    \ = [];\n  let sortedResult38 = [];\n  let sortedResult39 = [];\n  let sortedResult40\
    \ = [];\n  let sortedResult41 = [];\n  let sortedResult42 = [];\n  let sortedResult43\
    \ = [];\n  let sortedResult44 = [];\n  let sortedResult45 = [];\n  let sortedResult46\
    \ = [];\n  let sortedResult47 = [];\n  let sortedResult48 = [];\n  let sortedResult49\
    \ = [];\n  let sortedResult50 = [];\n  let sortedResult51 = [];\n  let sortedResult52\
    \ = [];\n  let sortedResult53 = [];\n  let sortedResult54 = [];\n  let sortedResult55\
    \ = [];\n  let sortedResult56 = [];\n  let sortedResult57 = [];\n", "    let sum:\
    \ number = 0;\n    let sumArr: number[] = [];\n    let result: number[] = [];\n\
    \    for (let i: number = 0; i < nums.length; i++) {\n        let num: number\
    \ = nums[i];\n        while (num > 0) {\n            sum += num % 10;\n      \
    \      num = Math.floor(num / 10);\n        }\n        sumArr.push(sum);\n   \
    \     sum = 0;\n    }\n    let min: number = Math.min(...sumArr);\n    while (sumArr.length\
    \ > 0) {\n        let index: number = sumArr.indexOf(min);\n        result.push(nums[index]);\n\
    \        sumArr.splice(index, 1);\n        nums.splice(index, 1);\n        min\
    \ = Math.min(...sumArr);\n    }\n    return result;\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let sumA = a.toString().split('').reduce((acc, cur) => acc\
    \ + parseInt(cur), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n        return sumA - sumB;\n    });\n}\n",
  "  return nums.sort((a, b) => {\n    let aSum = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n    let bSum = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n    return aSum - bSum;\n  });\n}\n", " \
    \ return nums.sort((a, b) => {\n    const sumA = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n    const sumB = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n    return sumA - sumB;\n  });\n}\n", " \
    \   let nums_sum = nums.map(num => {\n        let sum = 0;\n        let num_str\
    \ = num.toString();\n        for (let i = 0; i < num_str.length; i++) {\n    \
    \        sum += parseInt(num_str[i]);\n        }\n        return sum;\n    });\n\
    \    let nums_sum_sorted = nums_sum.sort((a, b) => a - b);\n    let nums_sorted\
    \ = [];\n    for (let i = 0; i < nums_sum_sorted.length; i++) {\n        let index\
    \ = nums_sum.indexOf(nums_sum_sorted[i]);\n        nums_sorted.push(nums[index]);\n\
    \        nums_sum[index] = -1;\n    }\n    return nums_sorted;\n}\n", "    let\
    \ sum_of_digits = (num: number): number => {\n        let sum = 0;\n        while\
    \ (num > 0) {\n            sum += num % 10;\n            num = Math.floor(num\
    \ / 10);\n        }\n        return sum;\n    };\n    return nums.sort((a, b)\
    \ => {\n        if (sum_of_digits(a) == sum_of_digits(b)) {\n            return\
    \ nums.indexOf(a) - nums.indexOf(b);\n        }\n        return sum_of_digits(a)\
    \ - sum_of_digits(b);\n    });\n}\n", "    let result: any = [];\n    let sum:\
    \ any = [];\n    let index: any = [];\n    for (let i = 0; i < nums.length; i++)\
    \ {\n        sum.push(nums[i].toString().split('').reduce((a, b) => parseInt(a)\
    \ + parseInt(b)));\n        index.push(i);\n    }\n    for (let i = 0; i < sum.length;\
    \ i++) {\n        for (let j = 0; j < sum.length; j++) {\n            if (sum[i]\
    \ < sum[j]) {\n                let temp = sum[i];\n                sum[i] = sum[j];\n\
    \                sum[j] = temp;\n                temp = index[i];\n          \
    \      index[i] = index[j];\n                index[j] = temp;\n            }\n\
    \        }\n    }\n    for (let i = 0; i < index.length; i++) {\n        result.push(nums[index[i]]);\n\
    \    }\n    return result;\n}\n", "    let result = nums.map((num, index) => {\n\
    \        return {\n            index: index,\n            num: num,\n        \
    \    sum: num.toString().split('').reduce((acc, cur) => acc + parseInt(cur), 0)\n\
    \        }\n    }).sort((a, b) => {\n        if (a.sum > b.sum) {\n          \
    \  return 1;\n        } else if (a.sum < b.sum) {\n            return -1;\n  \
    \      } else {\n            return a.index - b.index;\n        }\n    });\n \
    \   return result.map(item => item.num);\n}\n", "    let result: any = [];\n \
    \   let sum: any = [];\n    for (let i: number = 0; i < nums.length; i++) {\n\
    \        sum.push(sum_of_digits(nums[i]));\n    }\n    for (let i: number = 0;\
    \ i < nums.length; i++) {\n        for (let j: number = 0; j < nums.length; j++)\
    \ {\n            if (sum[i] < sum[j]) {\n                let temp: any = sum[i];\n\
    \                sum[i] = sum[j];\n                sum[j] = temp;\n          \
    \      temp = nums[i];\n                nums[i] = nums[j];\n                nums[j]\
    \ = temp;\n            }\n        }\n    }\n    return nums;\n}\n", "    let sum\
    \ = 0;\n    let arr = [];\n    for (let i = 0; i < nums.length; i++) {\n     \
    \   sum = 0;\n        for (let j = 0; j < nums[i].toString().length; j++) {\n\
    \            sum += +nums[i].toString()[j];\n        }\n        arr.push(sum);\n\
    \    }\n    let arr2 = [];\n    for (let i = 0; i < arr.length; i++) {\n     \
    \   for (let j = 0; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n\
    \                let temp = arr[i];\n                arr[i] = arr[j];\n      \
    \          arr[j] = temp;\n                temp = nums[i];\n                nums[i]\
    \ = nums[j];\n                nums[j] = temp;\n            }\n        }\n    }\n\
    \    return nums;\n}\n", "    let result: any = [];\n    let sum: any = [];\n\
    \    let index: any = [];\n    for (let i = 0; i < nums.length; i++) {\n     \
    \   sum.push(nums[i].toString().split('').reduce((a, b) => parseInt(a) + parseInt(b)));\n\
    \        index.push(i);\n    }\n    for (let i = 0; i < sum.length; i++) {\n \
    \       for (let j = 0; j < sum.length; j++) {\n            if (sum[i] < sum[j])\
    \ {\n                let temp = sum[i];\n                sum[i] = sum[j];\n  \
    \              sum[j] = temp;\n                temp = index[i];\n            \
    \    index[i] = index[j];\n                index[j] = temp;\n            }\n \
    \       }\n    }\n    for (let i = 0; i < index.length; i++) {\n        result.push(nums[index[i]]);\n\
    \    }\n    return result;\n}\n", "    return nums.sort((a, b) => {\n        return\
    \ sum_of_digits(a) - sum_of_digits(b)\n    })\n}\n", "  return nums.sort((a, b)\
    \ => {\n    let aSum = a.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b));\n\
    \    let bSum = b.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b));\n\
    \    return aSum - bSum;\n  });\n}\n", "    let result = [];\n    let sum = 0;\n\
    \    let obj = {};\n    for (let i = 0; i < nums.length; i++) {\n        sum =\
    \ 0;\n        for (let j = 0; j < nums[i].toString().length; j++) {\n        \
    \    sum += parseInt(nums[i].toString()[j]);\n        }\n        obj[nums[i]]\
    \ = sum;\n    }\n    let sorted = Object.keys(obj).sort((a, b) => obj[a] - obj[b]);\n\
    \    for (let i = 0; i < sorted.length; i++) {\n        result.push(parseInt(sorted[i]));\n\
    \    }\n    return result;\n}\n", "    let sum = 0;\n    let result = [];\n  \
    \  let temp = [];\n    for (let i = 0; i < nums.length; i++) {\n        sum =\
    \ 0;\n        for (let j = 0; j < nums[i].toString().length; j++) {\n        \
    \    sum += parseInt(nums[i].toString()[j]);\n        }\n        temp.push(sum);\n\
    \    }\n    for (let i = 0; i < temp.length; i++) {\n        for (let j = 0; j\
    \ < temp.length; j++) {\n            if (temp[i] < temp[j]) {\n              \
    \  let temp2 = temp[i];\n                temp[i] = temp[j];\n                temp[j]\
    \ = temp2;\n                let temp3 = nums[i];\n                nums[i] = nums[j];\n\
    \                nums[j] = temp3;\n            }\n        }\n    }\n    return\
    \ nums;\n}\nconsole.log(order_by_points([1, 11, -1, -11, -12]));\n", "    let\
    \ sum = 0;\n    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n\
    \        sum = 0;\n        for (let j = 0; j < nums[i].toString().length; j++)\
    \ {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n        result.push(sum);\n\
    \    }\n    return result;\n}\n\nconsole.log(order_by_points([1, 11, -1, -11,\
    \ -12]));\n", "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((a,\
    \ b) => a + parseInt(b), 0);\n        let bSum = b.toString().split('').reduce((a,\
    \ b) => a + parseInt(b), 0);\n        return aSum - bSum;\n    });\n}\n", "  \
    \  let sum = 0;\n    let sum_arr = [];\n    let result = [];\n    for (let i =\
    \ 0; i < nums.length; i++) {\n        sum = 0;\n        for (let j = 0; j < nums[i].toString().length;\
    \ j++) {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n   \
    \     sum_arr.push(sum);\n    }\n    for (let i = 0; i < sum_arr.length; i++)\
    \ {\n        for (let j = 0; j < sum_arr.length; j++) {\n            if (sum_arr[i]\
    \ < sum_arr[j]) {\n                let temp = sum_arr[i];\n                sum_arr[i]\
    \ = sum_arr[j];\n                sum_arr[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n", "  return nums.sort((a, b)\
    \ => {\n    let sumA = a.toString().split('').reduce((a, b) => +a + +b);\n   \
    \ let sumB = b.toString().split('').reduce((a, b) => +a + +b);\n    return sumA\
    \ - sumB;\n  });\n}\n", "    let sum = 0;\n    let result = [];\n    for (let\
    \ i = 0; i < nums.length; i++) {\n        for (let j = 0; j < nums[i].toString().length;\
    \ j++) {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n   \
    \     result.push(sum);\n        sum = 0;\n    }\n    for (let i = 0; i < result.length;\
    \ i++) {\n        for (let j = i + 1; j < result.length; j++) {\n            if\
    \ (result[i] > result[j]) {\n                let temp = result[i];\n         \
    \       result[i] = result[j];\n                result[j] = temp;\n          \
    \      temp = nums[i];\n                nums[i] = nums[j];\n                nums[j]\
    \ = temp;\n            }\n        }\n    }\n    return nums;\n}\n", "    let result\
    \ = [];\n    let sum = 0;\n    for (let i = 0; i < nums.length; i++) {\n     \
    \   sum = 0;\n        for (let j = 0; j < nums[i].toString().length; j++) {\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        result.push(sum);\n\
    \    }\n    let temp = 0;\n    for (let i = 0; i < result.length; i++) {\n   \
    \     for (let j = i + 1; j < result.length; j++) {\n            if (result[i]\
    \ > result[j]) {\n                temp = result[i];\n                result[i]\
    \ = result[j];\n                result[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n", "    let result = [];\n   \
    \ let sum = 0;\n    let sumArr = [];\n    let indexArr = [];\n    for (let i =\
    \ 0; i < nums.length; i++) {\n        sum = 0;\n        for (let j = 0; j < nums[i].toString().length;\
    \ j++) {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n   \
    \     sumArr.push(sum);\n        indexArr.push(i);\n    }\n    for (let i = 0;\
    \ i < sumArr.length; i++) {\n        for (let j = i + 1; j < sumArr.length; j++)\
    \ {\n            if (sumArr[i] > sumArr[j]) {\n                let temp = sumArr[i];\n\
    \                sumArr[i] = sumArr[j];\n                sumArr[j] = temp;\n \
    \               temp = indexArr[i];\n                indexArr[i] = indexArr[j];\n\
    \                indexArr[j] = temp;\n            }\n        }\n    }\n    for\
    \ (let i = 0; i < indexArr.length; i++) {\n        result.push(nums[indexArr[i]]);\n\
    \    }\n    return result;\n}\n", "    return nums.sort((a, b) => {\n        let\
    \ sumA = a.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b));\n\
    \        let sumB = b.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b));\n\
    \        return sumA - sumB;\n    });\n}\n", "    let sum = 0;\n    let sumArr\
    \ = [];\n    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n \
    \       sum = 0;\n        for (let j = 0; j < nums[i].toString().length; j++)\
    \ {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n        sumArr.push(sum);\n\
    \    }\n    for (let i = 0; i < sumArr.length; i++) {\n        for (let j = 0;\
    \ j < sumArr.length; j++) {\n            if (sumArr[i] < sumArr[j]) {\n      \
    \          let temp = sumArr[i];\n                sumArr[i] = sumArr[j];\n   \
    \             sumArr[j] = temp;\n                temp = nums[i];\n           \
    \     nums[i] = nums[j];\n                nums[j] = temp;\n            }\n   \
    \     }\n    }\n    return nums;\n}\n", "    let result = [];\n    let sum = 0;\n\
    \    let arr = [];\n    for (let i = 0; i < nums.length; i++) {\n        sum =\
    \ 0;\n        for (let j = 0; j < nums[i].toString().length; j++) {\n        \
    \    sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n\
    \    }\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j\
    \ < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                let\
    \ temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n\
    \                let temp2 = nums[i];\n                nums[i] = nums[j];\n  \
    \              nums[j] = temp2;\n            }\n        }\n    }\n    return nums;\n\
    }\n", "    return nums.sort((a, b) => {\n        let sumA = 0;\n        let sumB\
    \ = 0;\n        for (let i = 0; i < a.toString().length; i++) {\n            sumA\
    \ += parseInt(a.toString()[i]);\n        }\n        for (let i = 0; i < b.toString().length;\
    \ i++) {\n            sumB += parseInt(b.toString()[i]);\n        }\n        return\
    \ sumA - sumB;\n    });\n}\n", "    let nums_sum = nums.map(x => x.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b)));\n    let nums_sorted = nums.map((x, i) =>\
    \ [x, nums_sum[i]]).sort((a, b) => a[1] - b[1]);\n    return nums_sorted.map(x\
    \ => x[0]);\n}\n", "    let sum: number = 0;\n    let sum_arr: number[] = [];\n\
    \    let result: number[] = [];\n    for (let i: number = 0; i < nums.length;\
    \ i++) {\n        sum = 0;\n        for (let j: number = 0; j < nums[i].toString().length;\
    \ j++) {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n   \
    \     sum_arr.push(sum);\n    }\n    for (let i: number = 0; i < sum_arr.length;\
    \ i++) {\n        let min: number = Math.min(...sum_arr);\n        let index:\
    \ number = sum_arr.indexOf(min);\n        result.push(nums[index]);\n        sum_arr.splice(index,\
    \ 1);\n        nums.splice(index, 1);\n    }\n    return result;\n}\nconsole.log(order_by_points([1,\
    \ 11, -1, -11, -12]));\n", "    let sum = 0;\n    let result = [];\n    let sumArr\
    \ = [];\n    for (let i = 0; i < nums.length; i++) {\n        sum = 0;\n     \
    \   for (let j = 0; j < nums[i].toString().length; j++) {\n            sum +=\
    \ parseInt(nums[i].toString()[j]);\n        }\n        sumArr.push(sum);\n   \
    \ }\n    for (let i = 0; i < sumArr.length; i++) {\n        for (let j = 0; j\
    \ < sumArr.length; j++) {\n            if (sumArr[i] < sumArr[j]) {\n        \
    \        let temp = sumArr[i];\n                sumArr[i] = sumArr[j];\n     \
    \           sumArr[j] = temp;\n                temp = nums[i];\n             \
    \   nums[i] = nums[j];\n                nums[j] = temp;\n            }\n     \
    \   }\n    }\n    return nums;\n}\n", "    let result = [];\n    let sum = 0;\n\
    \    let sumArr = [];\n    for (let i = 0; i < nums.length; i++) {\n        for\
    \ (let j = 0; j < nums[i].toString().length; j++) {\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sumArr.push(sum);\n        sum = 0;\n    }\n    for (let i\
    \ = 0; i < sumArr.length; i++) {\n        for (let j = 0; j < sumArr.length; j++)\
    \ {\n            if (sumArr[i] < sumArr[j]) {\n                let temp = sumArr[i];\n\
    \                sumArr[i] = sumArr[j];\n                sumArr[j] = temp;\n \
    \               temp = nums[i];\n                nums[i] = nums[j];\n        \
    \        nums[j] = temp;\n            }\n        }\n    }\n    return nums;\n\
    }\n", "    let result: any = [];\n    let sumOfDigits: any = [];\n    let sum:\
    \ number = 0;\n    let index: number = 0;\n    let temp: number = 0;\n    let\
    \ tempIndex: number = 0;\n    let temp2: number = 0;\n    let tempIndex2: number\
    \ = 0;\n    for (let i: number = 0; i < nums.length; i++) {\n        temp = nums[i];\n\
    \        while (temp > 0) {\n            sum += temp % 10;\n            temp =\
    \ Math.floor(temp / 10);\n        }\n        sumOfDigits.push(sum);\n        sum\
    \ = 0;\n    }\n    for (let i: number = 0; i < sumOfDigits.length; i++) {\n  \
    \      temp = sumOfDigits[i];\n        tempIndex = i;\n        for (let j: number\
    \ = i + 1; j < sumOfDigits.length; j++) {\n            temp2 = sumOfDigits[j];\n\
    \            tempIndex2 = j;\n            if (temp > temp2) {\n              \
    \  temp = temp2;\n                tempIndex = tempIndex2;\n            }\n   \
    \     }\n        sumOfDigits[tempIndex] = sumOfDigits[i];\n        sumOfDigits[i]\
    \ = temp;\n        result.push(nums[tempIndex]);\n        nums[tempIndex] = nums[i];\n\
    \        nums[i] = temp;\n    }\n    return result;\n}\n", "    let sumOfDigits\
    \ = (num: number): number => {\n        let sum = 0;\n        while (num > 0)\
    \ {\n            sum += num % 10;\n            num = Math.floor(num / 10);\n \
    \       }\n        return sum;\n    };\n    let sums = nums.map(sumOfDigits);\n\
    \    let sorted = nums.slice().sort((a, b) => {\n        let sumA = sumOfDigits(a);\n\
    \        let sumB = sumOfDigits(b);\n        if (sumA < sumB) {\n            return\
    \ -1;\n        } else if (sumA > sumB) {\n            return 1;\n        } else\
    \ {\n            return nums.indexOf(a) - nums.indexOf(b);\n        }\n    });\n\
    \    return sorted;\n}\n", "    return nums.sort((a, b) => {\n        let aSum\
    \ = a.toString().split('').reduce((a, b) => +a + +b, 0);\n        let bSum = b.toString().split('').reduce((a,\
    \ b) => +a + +b, 0);\n        return aSum - bSum;\n    });\n}\n", "    return\
    \ nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let result: any = [];\n    let sum: any = [];\n    let index: any = [];\n \
    \   for (let i: number = 0; i < nums.length; i++) {\n        let temp: number\
    \ = 0;\n        for (let j: number = 0; j < nums[i].toString().length; j++) {\n\
    \            temp += parseInt(nums[i].toString()[j]);\n        }\n        sum.push(temp);\n\
    \        index.push(i);\n    }\n    for (let i: number = 0; i < sum.length; i++)\
    \ {\n        for (let j: number = i + 1; j < sum.length; j++) {\n            if\
    \ (sum[i] > sum[j]) {\n                let temp: number = sum[i];\n          \
    \      sum[i] = sum[j];\n                sum[j] = temp;\n                temp\
    \ = index[i];\n                index[i] = index[j];\n                index[j]\
    \ = temp;\n            }\n        }\n    }\n    for (let i: number = 0; i < index.length;\
    \ i++) {\n        result.push(nums[index[i]]);\n    }\n    return result;\n}\n",
  "    let result = [];\n    let sum = 0;\n    let sumArr = [];\n    for (let i =\
    \ 0; i < nums.length; i++) {\n        sum = 0;\n        for (let j = 0; j < nums[i].toString().length;\
    \ j++) {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n   \
    \     sumArr.push(sum);\n    }\n    for (let i = 0; i < sumArr.length; i++) {\n\
    \        let min = Math.min(...sumArr);\n        let minIndex = sumArr.indexOf(min);\n\
    \        result.push(nums[minIndex]);\n        sumArr.splice(minIndex, 1);\n \
    \       nums.splice(minIndex, 1);\n    }\n    return result;\n}\n", "    let nums_sorted\
    \ = nums.sort((a, b) => {\n        let sum_a = a.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        let sum_b = b.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n        if (sum_a === sum_b) {\n       \
    \     return nums.indexOf(a) - nums.indexOf(b);\n        }\n        return sum_a\
    \ - sum_b;\n    });\n    return nums_sorted;\n}\n", "    let sum = 0;\n    let\
    \ sum_arr = [];\n    for (let i = 0; i < nums.length; i++) {\n        sum = 0;\n\
    \        for (let j = 0; j < nums[i].toString().length; j++) {\n            sum\
    \ += parseInt(nums[i].toString()[j]);\n        }\n        sum_arr.push(sum);\n\
    \    }\n    let temp = 0;\n    for (let i = 0; i < sum_arr.length; i++) {\n  \
    \      for (let j = i + 1; j < sum_arr.length; j++) {\n            if (sum_arr[i]\
    \ > sum_arr[j]) {\n                temp = sum_arr[i];\n                sum_arr[i]\
    \ = sum_arr[j];\n                sum_arr[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n", "    let result: any = [];\n\
    \    let sum: any = [];\n    for (let i: number = 0; i < nums.length; i++) {\n\
    \        sum.push(nums[i].toString().split('').reduce((a: any, b: any) => parseInt(a)\
    \ + parseInt(b)));\n    }\n    for (let i: number = 0; i < nums.length; i++) {\n\
    \        result.push(nums[sum.indexOf(Math.min(...sum))]);\n        sum[sum.indexOf(Math.min(...sum))]\
    \ = Math.max(...sum) + 1;\n    }\n    return result;\n}\n", "    let result: any\
    \ = [];\n    let sum: any = [];\n    for (let i = 0; i < nums.length; i++) {\n\
    \        let temp: any = 0;\n        for (let j = 0; j < nums[i].toString().length;\
    \ j++) {\n            temp += parseInt(nums[i].toString()[j]);\n        }\n  \
    \      sum.push(temp);\n    }\n    for (let i = 0; i < sum.length; i++) {\n  \
    \      let min: any = sum[i];\n        let index: any = i;\n        for (let j\
    \ = i + 1; j < sum.length; j++) {\n            if (sum[j] < min) {\n         \
    \       min = sum[j];\n                index = j;\n            }\n        }\n\
    \        let temp: any = sum[i];\n        sum[i] = sum[index];\n        sum[index]\
    \ = temp;\n        temp = nums[i];\n        nums[i] = nums[index];\n        nums[index]\
    \ = temp;\n    }\n    return nums;\n}\n", "    let sum: number = 0;\n    let result:\
    \ any = [];\n    for (let i: number = 0; i < nums.length; i++) {\n        sum\
    \ = 0;\n        for (let j: number = 0; j < nums[i].toString().length; j++) {\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        result.push(sum);\n\
    \    }\n    return result;\n}\n", "    let result = [];\n    let sum = 0;\n  \
    \  let sum_arr = [];\n    for (let i = 0; i < nums.length; i++) {\n        sum\
    \ = 0;\n        for (let j = 0; j < nums[i].toString().length; j++) {\n      \
    \      sum += parseInt(nums[i].toString()[j]);\n        }\n        sum_arr.push(sum);\n\
    \    }\n    for (let i = 0; i < sum_arr.length; i++) {\n        for (let j = 0;\
    \ j < sum_arr.length; j++) {\n            if (sum_arr[i] < sum_arr[j]) {\n   \
    \             let temp = sum_arr[i];\n                sum_arr[i] = sum_arr[j];\n\
    \                sum_arr[j] = temp;\n                temp = nums[i];\n       \
    \         nums[i] = nums[j];\n                nums[j] = temp;\n            }\n\
    \        }\n    }\n    return nums;\n}\n", "    let sum = 0;\n    let nums_sum\
    \ = [];\n    for (let i = 0; i < nums.length; i++) {\n        sum = 0;\n     \
    \   for (let j = 0; j < nums[i].toString().length; j++) {\n            sum +=\
    \ parseInt(nums[i].toString()[j]);\n        }\n        nums_sum.push(sum);\n \
    \   }\n    let temp = 0;\n    for (let i = 0; i < nums_sum.length; i++) {\n  \
    \      for (let j = i + 1; j < nums_sum.length; j++) {\n            if (nums_sum[i]\
    \ > nums_sum[j]) {\n                temp = nums_sum[i];\n                nums_sum[i]\
    \ = nums_sum[j];\n                nums_sum[j] = temp;\n                temp =\
    \ nums[i];\n                nums[i] = nums[j];\n                nums[j] = temp;\n\
    \            }\n        }\n    }\n    return nums;\n}\n", "    let result: any\
    \ = [];\n    let sum: any = [];\n    let index: any = [];\n    for (let i = 0;\
    \ i < nums.length; i++) {\n        sum.push(sum_of_digits(nums[i]));\n       \
    \ index.push(i);\n    }\n    for (let i = 0; i < sum.length; i++) {\n        for\
    \ (let j = 0; j < sum.length; j++) {\n            if (sum[i] < sum[j]) {\n   \
    \             let temp: any = sum[i];\n                sum[i] = sum[j];\n    \
    \            sum[j] = temp;\n                temp = nums[i];\n               \
    \ nums[i] = nums[j];\n                nums[j] = temp;\n                temp =\
    \ index[i];\n                index[i] = index[j];\n                index[j] =\
    \ temp;\n            }\n        }\n    }\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        result.push(nums[index[i]]);\n    }\n    return result;\n}\n",
  "    let result: any = [];\n    let sum: any = [];\n    let sum_of_digits: any =\
    \ [];\n    let index: any = [];\n    let sorted_index: any = [];\n    let sorted_sum:\
    \ any = [];\n    let sorted_nums: any = [];\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        sum_of_digits.push(nums[i].toString().split('').reduce((a, b)\
    \ => parseInt(a) + parseInt(b)));\n        index.push(i);\n    }\n    sorted_sum\
    \ = sum_of_digits.slice().sort();\n    for (let i = 0; i < sorted_sum.length;\
    \ i++) {\n        sorted_index.push(index[sum_of_digits.indexOf(sorted_sum[i])]);\n\
    \        sorted_nums.push(nums[index[sum_of_digits.indexOf(sorted_sum[i])]]);\n\
    \    }\n    return sorted_nums;\n}\n", "    return nums.sort((a, b) => {\n   \
    \     let aSum = a.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b),\
    \ 0);\n        let bSum = b.toString().split('').reduce((a, b) => parseInt(a)\
    \ + parseInt(b), 0);\n        return aSum - bSum;\n    });\n}\n", "  return nums.sort((a,\
    \ b) => {\n    let sumA = a.toString().split('').reduce((acc, cur) => acc + parseInt(cur),\
    \ 0);\n    let sumB = b.toString().split('').reduce((acc, cur) => acc + parseInt(cur),\
    \ 0);\n    return sumA - sumB;\n  });\n}\n", "    let sum = 0;\n    let sumArr\
    \ = [];\n    let sortedArr = [];\n    let sortedSumArr = [];\n    let result =\
    \ [];\n    for (let i = 0; i < nums.length; i++) {\n        sum = 0;\n       \
    \ let str = nums[i].toString();\n        for (let j = 0; j < str.length; j++)\
    \ {\n            sum += parseInt(str[j]);\n        }\n        sumArr.push(sum);\n\
    \    }\n    sortedArr = nums.sort((a, b) => a - b);\n    sortedSumArr = sumArr.sort((a,\
    \ b) => a - b);\n    for (let i = 0; i < sortedSumArr.length; i++) {\n       \
    \ for (let j = 0; j < sumArr.length; j++) {\n            if (sortedSumArr[i] ===\
    \ sumArr[j]) {\n                result.push(sortedArr[j]);\n                sumArr[j]\
    \ = -1;\n                break;\n            }\n        }\n    }\n    return result;\n\
    }\n", "    return nums.sort((a, b) => {\n        return (sum_of_digits(a) - sum_of_digits(b))\
    \ || (nums.indexOf(a) - nums.indexOf(b));\n    });\n}\n", "  return nums.sort((a,\
    \ b) => {\n    let sumA = 0;\n    let sumB = 0;\n    for (let i = 0; i < a.toString().length;\
    \ i++) {\n      sumA += parseInt(a.toString()[i]);\n    }\n    for (let i = 0;\
    \ i < b.toString().length; i++) {\n      sumB += parseInt(b.toString()[i]);\n\
    \    }\n    return sumA - sumB;\n  });\n}\n", "    let sum = 0;\n    let result\
    \ = [];\n    for (let i = 0; i < nums.length; i++) {\n        let num = nums[i];\n\
    \        while (num > 0) {\n            sum += num % 10;\n            num = Math.floor(num\
    \ / 10);\n        }\n        result.push([sum, i]);\n        sum = 0;\n    }\n\
    \    result.sort((a, b) => a[0] - b[0]);\n    for (let i = 0; i < result.length;\
    \ i++) {\n        result[i] = nums[result[i][1]];\n    }\n    return result;\n\
    }\n", "    let sum = 0;\n    let sumArr = [];\n    let result = [];\n    for (let\
    \ i = 0; i < nums.length; i++) {\n        sum = 0;\n        for (let j = 0; j\
    \ < nums[i].toString().length; j++) {\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sumArr.push(sum);\n    }\n    for (let i = 0; i < sumArr.length;\
    \ i++) {\n        for (let j = 0; j < sumArr.length; j++) {\n            if (sumArr[i]\
    \ < sumArr[j]) {\n                let temp = sumArr[i];\n                sumArr[i]\
    \ = sumArr[j];\n                sumArr[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n", "    let sum = 0;\n    let\
    \ sumArray = [];\n    let result = [];\n    for (let i = 0; i < nums.length; i++)\
    \ {\n        let num = nums[i];\n        while (num > 0) {\n            sum +=\
    \ num % 10;\n            num = Math.floor(num / 10);\n        }\n        sumArray.push(sum);\n\
    \        sum = 0;\n    }\n    for (let i = 0; i < sumArray.length; i++) {\n  \
    \      let min = Math.min(...sumArray);\n        let index = sumArray.indexOf(min);\n\
    \        result.push(nums[index]);\n        sumArray.splice(index, 1);\n     \
    \   nums.splice(index, 1);\n    }\n    return result;\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let sumA = a.toString().split('').reduce((acc, cur) => acc\
    \ + parseInt(cur), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n        return sumA - sumB;\n    });\n}\n",
  "    let result: any = [];\n    let sum: any = [];\n    let index: any = [];\n \
    \   for (let i = 0; i < nums.length; i++) {\n        sum.push(nums[i].toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b)));\n        index.push(i);\n    }\n    for (let\
    \ i = 0; i < sum.length; i++) {\n        for (let j = 0; j < sum.length; j++)\
    \ {\n            if (sum[i] < sum[j]) {\n                let temp = sum[i];\n\
    \                sum[i] = sum[j];\n                sum[j] = temp;\n          \
    \      temp = index[i];\n                index[i] = index[j];\n              \
    \  index[j] = temp;\n            }\n        }\n    }\n    for (let i = 0; i <\
    \ index.length; i++) {\n        result.push(nums[index[i]]);\n    }\n    return\
    \ result;\n}\n", "    let nums_sorted = nums.sort(function (a, b) {\n        let\
    \ sum_a = 0;\n        let sum_b = 0;\n        for (let i = 0; i < a.toString().length;\
    \ i++) {\n            sum_a += parseInt(a.toString()[i]);\n        }\n       \
    \ for (let i = 0; i < b.toString().length; i++) {\n            sum_b += parseInt(b.toString()[i]);\n\
    \        }\n        if (sum_a == sum_b) {\n            return a - b;\n       \
    \ }\n        return sum_a - sum_b;\n    });\n    return nums_sorted;\n}\n", " \
    \   let sum = 0;\n    let result = [];\n    let sumArray = [];\n    let indexArray\
    \ = [];\n    let index = 0;\n    for (let i = 0; i < nums.length; i++) {\n   \
    \     let num = nums[i];\n        let numString = num.toString();\n        for\
    \ (let j = 0; j < numString.length; j++) {\n            sum += Number(numString[j]);\n\
    \        }\n        sumArray.push(sum);\n        indexArray.push(index);\n   \
    \     index++;\n        sum = 0;\n    }\n    for (let i = 0; i < sumArray.length;\
    \ i++) {\n        let min = Math.min(...sumArray);\n        let index = sumArray.indexOf(min);\n\
    \        let num = nums[indexArray[index]];\n        result.push(num);\n     \
    \   sumArray.splice(index, 1);\n        indexArray.splice(index, 1);\n    }\n\
    \    return result;\n}\n", "    let arr = [];\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        let sum = 0;\n        let num = nums[i];\n        while (num\
    \ > 0) {\n            sum += num % 10;\n            num = Math.floor(num / 10);\n\
    \        }\n        arr.push({\n            sum: sum,\n            index: i,\n\
    \            value: nums[i]\n        });\n    }\n    arr.sort((a, b) => {\n  \
    \      if (a.sum === b.sum) {\n            return a.index - b.index;\n       \
    \ }\n        return a.sum - b.sum;\n    });\n    return arr.map(item => item.value);\n\
    }\n", "    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        return sumA - sumB;\n    });\n\
    }\n", "    let result: any = [];\n    let sum: any = [];\n    let index: any =\
    \ [];\n    for (let i = 0; i < nums.length; i++) {\n        sum.push(nums[i].toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b)));\n        index.push(i);\n    }\n    for (let\
    \ i = 0; i < sum.length; i++) {\n        for (let j = 0; j < sum.length; j++)\
    \ {\n            if (sum[i] < sum[j]) {\n                let temp = sum[i];\n\
    \                sum[i] = sum[j];\n                sum[j] = temp;\n          \
    \      temp = index[i];\n                index[i] = index[j];\n              \
    \  index[j] = temp;\n            }\n        }\n    }\n    for (let i = 0; i <\
    \ index.length; i++) {\n        result.push(nums[index[i]]);\n    }\n    return\
    \ result;\n}\n", "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    return sumA - sumB;\n  });\n}\n", "  \
    \  let result: any = [];\n    let sum: any = [];\n    let sum_index: any = [];\n\
    \    let index: any = 0;\n    for (let i: number = 0; i < nums.length; i++) {\n\
    \        let num: any = nums[i];\n        let sum_num: number = 0;\n        for\
    \ (let j: number = 0; j < num.toString().length; j++) {\n            sum_num +=\
    \ parseInt(num.toString()[j]);\n        }\n        sum.push(sum_num);\n      \
    \  sum_index.push(index);\n        index++;\n    }\n    for (let i: number = 0;\
    \ i < sum.length; i++) {\n        for (let j: number = 0; j < sum.length; j++)\
    \ {\n            if (sum[i] < sum[j]) {\n                let temp: any = sum[i];\n\
    \                sum[i] = sum[j];\n                sum[j] = temp;\n          \
    \      let temp_index: any = sum_index[i];\n                sum_index[i] = sum_index[j];\n\
    \                sum_index[j] = temp_index;\n            }\n        }\n    }\n\
    \    for (let i: number = 0; i < sum_index.length; i++) {\n        result.push(nums[sum_index[i]]);\n\
    \    }\n    return result;\n}\n", "    if (nums.length === 0) {\n        return\
    \ [];\n    }\n    let nums_with_points = [];\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        let num = nums[i];\n        let points = 0;\n        while (num\
    \ > 0) {\n            points += num % 10;\n            num = Math.floor(num /\
    \ 10);\n        }\n        nums_with_points.push([nums[i], points]);\n    }\n\
    \    nums_with_points.sort(function (a, b) {\n        if (a[1] === b[1]) {\n \
    \           return a[0] - b[0];\n        }\n        return a[1] - b[1];\n    });\n\
    \    let result = [];\n    for (let i = 0; i < nums_with_points.length; i++) {\n\
    \        result.push(nums_with_points[i][0]);\n    }\n    return result;\n}\n",
  "    let result: any = [];\n    let sum: any = [];\n    let sum_result: any = [];\n\
    \    let index: any = [];\n    let index_result: any = [];\n    let nums_result:\
    \ any = [];\n    for (let i = 0; i < nums.length; i++) {\n        let temp: any\
    \ = nums[i].toString();\n        let temp_sum: any = 0;\n        for (let j =\
    \ 0; j < temp.length; j++) {\n            temp_sum += parseInt(temp[j]);\n   \
    \     }\n        sum.push(temp_sum);\n        index.push(i);\n    }\n    for (let\
    \ i = 0; i < sum.length; i++) {\n        if (sum_result.indexOf(sum[i]) === -1)\
    \ {\n            sum_result.push(sum[i]);\n        }\n    }\n    for (let i =\
    \ 0; i < sum_result.length; i++) {\n        for (let j = 0; j < sum.length; j++)\
    \ {\n            if (sum_result[i] === sum[j]) {\n                index_result.push(index[j]);\n\
    \            }\n        }\n    }\n    for (let i = 0; i < index_result.length;\
    \ i++) {\n        nums_result.push(nums[index_result[i]]);\n    }\n    return\
    \ nums_result;\n}\n", "    let sum = 0;\n    let result = [];\n    for (let i\
    \ = 0; i < nums.length; i++) {\n        sum = 0;\n        for (let j = 0; j <\
    \ nums[i].toString().length; j++) {\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        result.push(sum);\n    }\n    let sorted = result.slice().sort();\n\
    \    let result2 = [];\n    for (let i = 0; i < sorted.length; i++) {\n      \
    \  for (let j = 0; j < result.length; j++) {\n            if (sorted[i] === result[j])\
    \ {\n                result2.push(nums[j]);\n                result[j] = -1;\n\
    \                break;\n            }\n        }\n    }\n    return result2;\n\
    }\n", "  return nums.sort((a, b) => {\n    let sumA = 0;\n    let sumB = 0;\n\
    \    for (let i = 0; i < a.toString().length; i++) {\n      sumA += parseInt(a.toString()[i]);\n\
    \    }\n    for (let i = 0; i < b.toString().length; i++) {\n      sumB += parseInt(b.toString()[i]);\n\
    \    }\n    return sumA - sumB;\n  });\n}\n", "    let result = [];\n    let nums_copy\
    \ = nums.slice();\n    let nums_copy_length = nums_copy.length;\n    let nums_copy_length_copy\
    \ = nums_copy_length;\n    let nums_copy_length_copy_copy = nums_copy_length_copy;\n\
    \    let nums_copy_length_copy_copy_copy = nums_copy_length_copy_copy;\n    let\
    \ nums_copy_length_copy_copy_copy_copy = nums_copy_length_copy_copy_copy;\n  \
    \  let nums_copy_length_copy_copy_copy_copy_copy = nums_copy_length_copy_copy_copy_copy;\n\
    \    let nums_copy_length_copy_copy_copy_copy_copy_copy = nums_copy_length_copy_copy_copy_copy_copy;\n\
    \    let nums_copy_length_copy_copy_copy_copy_copy_copy_copy = nums_copy_length_copy_copy_copy_copy_copy_copy;\n\
    \    let nums_copy_length_copy_copy_copy_copy_copy_copy_copy_copy = nums_copy_length_copy_copy_copy_copy_copy_copy_copy;\n\
    \    let nums_copy_length_copy_copy_copy_copy_copy_copy_copy_copy_copy = nums_copy_length_copy_copy_copy_copy_copy_copy_copy_copy;\n\
    \    let nums_copy_length_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy =\
    \ nums_copy_length_copy_copy_copy_copy_copy_copy_copy_copy_copy;\n    let nums_copy_length_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = nums_copy_length_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy;\n    let\
    \ nums_copy_length_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = nums_copy_length_copy_copy_copy_", "    let result: any = [];\n    let sum:\
    \ any = [];\n    for (let i = 0; i < nums.length; i++) {\n        sum.push(nums[i].toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b)));\n    }\n    let sortedSum = sum.slice().sort((a,\
    \ b) => a - b);\n    for (let i = 0; i < sortedSum.length; i++) {\n        for\
    \ (let j = 0; j < sum.length; j++) {\n            if (sortedSum[i] === sum[j])\
    \ {\n                result.push(nums[j]);\n                sum[j] = null;\n \
    \           }\n        }\n    }\n    return result;\n}\n", "    let result = [];\n\
    \    let sum = 0;\n    let sum_arr = [];\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        sum = 0;\n        for (let j = 0; j < nums[i].toString().length;\
    \ j++) {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n   \
    \     sum_arr.push(sum);\n    }\n    for (let i = 0; i < sum_arr.length; i++)\
    \ {\n        for (let j = 0; j < sum_arr.length; j++) {\n            if (sum_arr[i]\
    \ < sum_arr[j]) {\n                let temp = sum_arr[i];\n                sum_arr[i]\
    \ = sum_arr[j];\n                sum_arr[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n", "    let sumOfDigits = (num:\
    \ number): number => {\n        let sum = 0;\n        while (num > 0) {\n    \
    \        sum += num % 10;\n            num = Math.floor(num / 10);\n        }\n\
    \        return sum;\n    };\n    let sums = nums.map(sumOfDigits);\n    let sorted\
    \ = nums.slice().sort((a, b) => {\n        let sumA = sumOfDigits(a);\n      \
    \  let sumB = sumOfDigits(b);\n        if (sumA === sumB) {\n            return\
    \ nums.indexOf(a) - nums.indexOf(b);\n        }\n        return sumA - sumB;\n\
    \    });\n    return sorted;\n}\n", "    let result = [];\n    let sum = 0;\n\
    \    let sum_arr = [];\n    for (let i = 0; i < nums.length; i++) {\n        sum\
    \ = 0;\n        for (let j = 0; j < nums[i].toString().length; j++) {\n      \
    \      sum += parseInt(nums[i].toString()[j]);\n        }\n        sum_arr.push(sum);\n\
    \    }\n    for (let i = 0; i < sum_arr.length; i++) {\n        for (let j = 0;\
    \ j < sum_arr.length; j++) {\n            if (sum_arr[i] < sum_arr[j]) {\n   \
    \             let temp = sum_arr[i];\n                sum_arr[i] = sum_arr[j];\n\
    \                sum_arr[j] = temp;\n                temp = nums[i];\n       \
    \         nums[i] = nums[j];\n                nums[j] = temp;\n            }\n\
    \        }\n    }\n    return nums;\n}\n", "    if (nums.length === 0) {\n   \
    \     return [];\n    }\n    let result = [];\n    let sum = 0;\n    for (let\
    \ i = 0; i < nums.length; i++) {\n        sum = 0;\n        for (let j = 0; j\
    \ < nums[i].toString().length; j++) {\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        result.push([nums[i], sum]);\n    }\n    result.sort(function\
    \ (a, b) {\n        if (a[1] === b[1]) {\n            return a[0] - b[0];\n  \
    \      }\n        return a[1] - b[1];\n    });\n    for (let i = 0; i < result.length;\
    \ i++) {\n        result[i] = result[i][0];\n    }\n    return result;\n}\n",
  "    let result = [];\n    let sum = 0;\n    let sumArr = [];\n    let index = 0;\n\
    \    for (let i = 0; i < nums.length; i++) {\n        let num = nums[i];\n   \
    \     while (num > 0) {\n            sum += num % 10;\n            num = Math.floor(num\
    \ / 10);\n        }\n        sumArr.push(sum);\n        sum = 0;\n    }\n    for\
    \ (let i = 0; i < sumArr.length; i++) {\n        let min = Math.min(...sumArr);\n\
    \        index = sumArr.indexOf(min);\n        result.push(nums[index]);\n   \
    \     sumArr.splice(index, 1);\n        nums.splice(index, 1);\n    }\n    return\
    \ result;\n}\n", "    let sum = 0;\n    let result = [];\n    let result2 = [];\n\
    \    let result3 = [];\n    let result4 = [];\n    let result5 = [];\n    let\
    \ result6 = [];\n    let result7 = [];\n    let result8 = [];\n    let result9\
    \ = [];\n    let result10 = [];\n    let result11 = [];\n    let result12 = [];\n\
    \    let result13 = [];\n    let result14 = [];\n    let result15 = [];\n    let\
    \ result16 = [];\n    let result17 = [];\n    let result18 = [];\n    let result19\
    \ = [];\n    let result20 = [];\n    let result21 = [];\n    let result22 = [];\n\
    \    let result23 = [];\n    let result24 = [];\n    let result25 = [];\n    let\
    \ result26 = [];\n    let result27 = [];\n    let result28 = [];\n    let result29\
    \ = [];\n    let result30 = [];\n    let result31 = [];\n    let result32 = [];\n\
    \    let result33 = [];\n    let result34 = [];\n    let result35 = [];\n    let\
    \ result36 = [];\n    let result37 = [];\n    let result38 = [];\n    let result39\
    \ = [];\n    let result40 = [];\n    let result41 = [];\n    let result42 = [];\n\
    \    let result43 = [];\n    let result44 = [];\n    let result45 = [];\n    let\
    \ result46 = [];\n    let result47 = [];\n    let result48 = [];\n    let result49\
    \ = [];\n    let result50 = [];\n    let result51 = [];\n    let result52 = [];\n\
    \    let result53 = [];\n    let result54 = [];\n    let result55 = [];\n    let\
    \ result56 = [];\n    let result57 = [];\n    let result58 = [];\n    let result59\
    \ = [];\n    let result60 = [];\n    let result61 = [];\n    let result62 = [];\n\
    \    let result63 = [];\n    let result64 = [];\n    let result65 = [];\n    let\
    \ result66 = [];\n    let result67 = [];\n    let result68 = [];\n    let result69\
    \ = [];\n    let result70 = [];\n    let result71 = [];\n    let result72 = [];\n\
    \   ", "    let nums_sum = nums.map(function (num) {\n        let sum = 0;\n \
    \       for (let i = 0; i < num.toString().length; i++) {\n            sum +=\
    \ parseInt(num.toString()[i]);\n        }\n        return sum;\n    });\n    let\
    \ nums_sum_sorted = nums_sum.slice().sort(function (a, b) {\n        return a\
    \ - b;\n    });\n    let nums_sorted = [];\n    for (let i = 0; i < nums_sum_sorted.length;\
    \ i++) {\n        let index = nums_sum.indexOf(nums_sum_sorted[i]);\n        nums_sorted.push(nums[index]);\n\
    \        nums_sum[index] = -1;\n    }\n    return nums_sorted;\n}\n", "  if (nums.length\
    \ === 0) {\n    return [];\n  }\n  let result = [];\n  let nums_with_sum = [];\n\
    \  for (let i = 0; i < nums.length; i++) {\n    let sum = 0;\n    let num = nums[i];\n\
    \    while (num > 0) {\n      sum += num % 10;\n      num = Math.floor(num / 10);\n\
    \    }\n    nums_with_sum.push([nums[i], sum]);\n  }\n  nums_with_sum.sort((a,\
    \ b) => a[1] - b[1]);\n  for (let i = 0; i < nums_with_sum.length; i++) {\n  \
    \  result.push(nums_with_sum[i][0]);\n  }\n  return result;\n}\n", "    let sum\
    \ = 0;\n    let result = [];\n    let result2 = [];\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        sum = 0;\n        for (let j = 0; j < nums[i].toString().length;\
    \ j++) {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n   \
    \     result.push(sum);\n    }\n    for (let i = 0; i < result.length; i++) {\n\
    \        for (let j = 0; j < result.length; j++) {\n            if (result[i]\
    \ < result[j]) {\n                let temp = result[i];\n                result[i]\
    \ = result[j];\n                result[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n", "    let sum = 0;\n    let\
    \ result = [];\n    let result2 = [];\n    let result3 = [];\n    let result4\
    \ = [];\n    let result5 = [];\n    let result6 = [];\n    let result7 = [];\n\
    \    let result8 = [];\n    let result9 = [];\n    let result10 = [];\n    let\
    \ result11 = [];\n    let result12 = [];\n    let result13 = [];\n    let result14\
    \ = [];\n    let result15 = [];\n    let result16 = [];\n    let result17 = [];\n\
    \    let result18 = [];\n    let result19 = [];\n    let result20 = [];\n    let\
    \ result21 = [];\n    let result22 = [];\n    let result23 = [];\n    let result24\
    \ = [];\n    let result25 = [];\n    let result26 = [];\n    let result27 = [];\n\
    \    let result28 = [];\n    let result29 = [];\n    let result30 = [];\n    let\
    \ result31 = [];\n    let result32 = [];\n    let result33 = [];\n    let result34\
    \ = [];\n    let result35 = [];\n    let result36 = [];\n    let result37 = [];\n\
    \    let result38 = [];\n    let result39 = [];\n    let result40 = [];\n    let\
    \ result41 = [];\n    let result42 = [];\n    let result43 = [];\n    let result44\
    \ = [];\n    let result45 = [];\n    let result46 = [];\n    let result47 = [];\n\
    \    let result48 = [];\n    let result49 = [];\n    let result50 = [];\n    let\
    \ result51 = [];\n    let result52 = [];\n    let result53 = [];\n    let result54\
    \ = [];\n    let result55 = [];\n    let result56 = [];\n    let result57 = [];\n\
    \    let result58 = [];\n    let result59 = [];\n    let result60 = [];\n    let\
    \ result61 = [];\n    let result62 = [];\n    let result63 = [];\n    let result64\
    \ = [];\n    let result65 = [];\n    let result66 = [];\n    let result67 = [];\n\
    \    let result68 = [];\n    let result69 = [];\n    let result70 = [];\n    let\
    \ result71 = [];\n    let result72 = [];\n   ", "    let sum = 0;\n    let arr\
    \ = [];\n    for (let i = 0; i < nums.length; i++) {\n        sum = 0;\n     \
    \   for (let j = 0; j < nums[i].toString().length; j++) {\n            sum +=\
    \ parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n    }\n\
    \    let sorted = [];\n    for (let i = 0; i < arr.length; i++) {\n        for\
    \ (let j = 0; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n   \
    \             let temp = arr[i];\n                arr[i] = arr[j];\n         \
    \       arr[j] = temp;\n                temp = nums[i];\n                nums[i]\
    \ = nums[j];\n                nums[j] = temp;\n            }\n        }\n    }\n\
    \    return nums;\n}\n", "    let result: any = [];\n    let sum: any = [];\n\
    \    for (let i: number = 0; i < nums.length; i++) {\n        sum.push(nums[i].toString().split('').reduce((a:\
    \ any, b: any) => +a + +b));\n    }\n    for (let i: number = 0; i < nums.length;\
    \ i++) {\n        let min: number = Math.min(...sum);\n        let index: number\
    \ = sum.indexOf(min);\n        result.push(nums[index]);\n        sum.splice(index,\
    \ 1);\n        nums.splice(index, 1);\n    }\n    return result;\n}\nconsole.log(order_by_points([1,\
    \ 11, -1, -11, -12]));\n", "    if (nums.length === 0) {\n        return [];\n\
    \    }\n    let sum: number = 0;\n    let arr: number[] = [];\n    let arr2: number[]\
    \ = [];\n    for (let i: number = 0; i < nums.length; i++) {\n        sum = 0;\n\
    \        for (let j: number = 0; j < nums[i].toString().length; j++) {\n     \
    \       sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n\
    \        arr2.push(sum);\n    }\n    arr2.sort(function (a, b) { return a - b\
    \ });\n    let arr3: number[] = [];\n    for (let i: number = 0; i < arr2.length;\
    \ i++) {\n        for (let j: number = 0; j < arr.length; j++) {\n           \
    \ if (arr2[i] === arr[j]) {\n                arr3.push(nums[j]);\n           \
    \     arr[j] = -1;\n                break;\n            }\n        }\n    }\n\
    \    return arr3;\n}\nconsole.log(order_by_points([1, 11, -1, -11, -12]));\n",
  "    let result: any = [];\n    let sum: any = [];\n    let sum_of_digits: any =\
    \ [];\n    let index: any = [];\n    for (let i = 0; i < nums.length; i++) {\n\
    \        sum.push(nums[i].toString().split('').reduce((a, b) => parseInt(a) +\
    \ parseInt(b)));\n        index.push(i);\n    }\n    for (let i = 0; i < sum.length;\
    \ i++) {\n        sum_of_digits.push(sum[i]);\n    }\n    sum_of_digits.sort(function\
    \ (a, b) { return a - b });\n    for (let i = 0; i < sum_of_digits.length; i++)\
    \ {\n        for (let j = 0; j < sum.length; j++) {\n            if (sum_of_digits[i]\
    \ == sum[j]) {\n                result.push(nums[index[j]]);\n               \
    \ sum[j] = -1;\n                break;\n            }\n        }\n    }\n    return\
    \ result;\n}\n", "    let sum = 0;\n    let newArr = [];\n    let newArr2 = [];\n\
    \    let newArr3 = [];\n    let newArr4 = [];\n    let newArr5 = [];\n    let\
    \ newArr6 = [];\n    let newArr7 = [];\n    let newArr8 = [];\n    let newArr9\
    \ = [];\n    let newArr10 = [];\n    let newArr11 = [];\n    let newArr12 = [];\n\
    \    let newArr13 = [];\n    let newArr14 = [];\n    let newArr15 = [];\n    let\
    \ newArr16 = [];\n    let newArr17 = [];\n    let newArr18 = [];\n    let newArr19\
    \ = [];\n    let newArr20 = [];\n    let newArr21 = [];\n    let newArr22 = [];\n\
    \    let newArr23 = [];\n    let newArr24 = [];\n    let newArr25 = [];\n    let\
    \ newArr26 = [];\n    let newArr27 = [];\n    let newArr28 = [];\n    let newArr29\
    \ = [];\n    let newArr30 = [];\n    let newArr31 = [];\n    let newArr32 = [];\n\
    \    let newArr33 = [];\n    let newArr34 = [];\n    let newArr35 = [];\n    let\
    \ newArr36 = [];\n    let newArr37 = [];\n    let newArr38 = [];\n    let newArr39\
    \ = [];\n    let newArr40 = [];\n    let newArr41 = [];\n    let newArr42 = [];\n\
    \    let newArr43 = [];\n    let newArr44 = [];\n    let newArr45 = [];\n    let\
    \ newArr46 = [];\n    let newArr47 = [];\n    let newArr48 = [];\n    let newArr49\
    \ = [];\n    let newArr50 = [];\n    let newArr51 = [];\n    let newArr52 = [];\n\
    \    let newArr53 = [];\n    let newArr54 = [];\n    let newArr55 = [];\n    let\
    \ newArr56 = [];\n   ", "    let sum = 0;\n    let result = [];\n    let result_sum\
    \ = [];\n    for (let i = 0; i < nums.length; i++) {\n        sum = 0;\n     \
    \   for (let j = 0; j < nums[i].toString().length; j++) {\n            sum +=\
    \ parseInt(nums[i].toString()[j]);\n        }\n        result.push(sum);\n   \
    \ }\n    for (let i = 0; i < result.length; i++) {\n        for (let j = 0; j\
    \ < result.length; j++) {\n            if (result[i] < result[j]) {\n        \
    \        let temp = result[i];\n                result[i] = result[j];\n     \
    \           result[j] = temp;\n                let temp_num = nums[i];\n     \
    \           nums[i] = nums[j];\n                nums[j] = temp_num;\n        \
    \    }\n        }\n    }\n    return nums;\n}\n", "    let nums_map = new Map();\n\
    \    for (let i = 0; i < nums.length; i++) {\n        let sum = 0;\n        let\
    \ num = nums[i];\n        while (num > 0) {\n            sum += num % 10;\n  \
    \          num = Math.floor(num / 10);\n        }\n        nums_map.set(sum, nums[i]);\n\
    \    }\n    let nums_map_keys = Array.from(nums_map.keys());\n    nums_map_keys.sort((a,\
    \ b) => a - b);\n    let result = [];\n    for (let i = 0; i < nums_map_keys.length;\
    \ i++) {\n        result.push(nums_map.get(nums_map_keys[i]));\n    }\n    return\
    \ result;\n}\n", "    let result = [];\n    let sum = 0;\n    let sum_arr = [];\n\
    \    for (let i = 0; i < nums.length; i++) {\n        sum = 0;\n        for (let\
    \ j = 0; j < nums[i].toString().length; j++) {\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sum_arr.push(sum);\n    }\n    for (let i = 0; i < sum_arr.length;\
    \ i++) {\n        for (let j = 0; j < sum_arr.length; j++) {\n            if (sum_arr[i]\
    \ < sum_arr[j]) {\n                let temp = sum_arr[i];\n                sum_arr[i]\
    \ = sum_arr[j];\n                sum_arr[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n", "    if (nums.length === 0)\
    \ {\n        return [];\n    }\n    let sum = 0;\n    let sumArr = [];\n    for\
    \ (let i = 0; i < nums.length; i++) {\n        sum = 0;\n        for (let j =\
    \ 0; j < nums[i].toString().length; j++) {\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sumArr.push(sum);\n    }\n    let temp = 0;\n    for (let\
    \ i = 0; i < sumArr.length; i++) {\n        for (let j = i + 1; j < sumArr.length;\
    \ j++) {\n            if (sumArr[i] > sumArr[j]) {\n                temp = sumArr[i];\n\
    \                sumArr[i] = sumArr[j];\n                sumArr[j] = temp;\n \
    \               temp = nums[i];\n                nums[i] = nums[j];\n        \
    \        nums[j] = temp;\n            }\n        }\n    }\n    return nums;\n\
    }\n", "    let nums_with_points = nums.map((num, index) => {\n        return {\n\
    \            num: num,\n            points: num.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0),\n            index: index\n        }\n  \
    \  });\n    nums_with_points.sort((a, b) => {\n        if (a.points === b.points)\
    \ {\n            return a.index - b.index;\n        }\n        return a.points\
    \ - b.points;\n    });\n    return nums_with_points.map(num => num.num);\n}\n",
  "  return nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + parseInt(cur), 0);\n    return sumA - sumB;\n  });\n}\n", "  \
    \  let sum = 0;\n    let sumArr = [];\n    let result = [];\n    for (let i =\
    \ 0; i < nums.length; i++) {\n        sum = 0;\n        for (let j = 0; j < nums[i].toString().length;\
    \ j++) {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n   \
    \     sumArr.push(sum);\n    }\n    let sortedSumArr = sumArr.sort((a, b) => a\
    \ - b);\n    for (let i = 0; i < sortedSumArr.length; i++) {\n        for (let\
    \ j = 0; j < sumArr.length; j++) {\n            if (sortedSumArr[i] === sumArr[j])\
    \ {\n                result.push(nums[j]);\n                sumArr[j] = -1;\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\nconsole.log(order_by_points([1, 11, -1, -11, -12]));\n", "  return nums.sort((a,\
    \ b) => {\n    let aSum = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n    let bSum = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n    return aSum - bSum;\n  });\n}\n", "    let result = nums.map((num,\
    \ index) => {\n        return {\n            index: index,\n            num: num,\n\
    \            sum: num.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b),\
    \ 0)\n        }\n    }).sort((a, b) => {\n        if (a.sum === b.sum) {\n   \
    \         return a.index - b.index;\n        }\n        return a.sum - b.sum;\n\
    \    });\n    return result.map(item => item.num);\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let aSum = a.toString().split('').reduce((a, b) => parseInt(a)\
    \ + parseInt(b));\n        let bSum = b.toString().split('').reduce((a, b) =>\
    \ parseInt(a) + parseInt(b));\n        return aSum - bSum;\n    });\n}\n", " \
    \   let result: any = [];\n    let sum: any = [];\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        let sum_of_digits: number = 0;\n        let num_to_string: string\
    \ = nums[i].toString();\n        for (let j = 0; j < num_to_string.length; j++)\
    \ {\n            sum_of_digits += parseInt(num_to_string[j]);\n        }\n   \
    \     sum.push(sum_of_digits);\n    }\n    for (let i = 0; i < sum.length; i++)\
    \ {\n        let min: number = Math.min(...sum);\n        let index: number =\
    \ sum.indexOf(min);\n        result.push(nums[index]);\n        sum.splice(index,\
    \ 1);\n        nums.splice(index, 1);\n    }\n    return result;\n}\n", "  return\
    \ nums.sort((a, b) => {\n    let sumA = a.toString().split('').reduce((a, b) =>\
    \ parseInt(a) + parseInt(b));\n    let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n    return sumA - sumB;\n  });\n}\n", " \
    \   let sum = 0;\n    let sumArr = [];\n    let result = [];\n    for (let i =\
    \ 0; i < nums.length; i++) {\n        sum = 0;\n        for (let j = 0; j < nums[i].toString().length;\
    \ j++) {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n   \
    \     sumArr.push(sum);\n    }\n    for (let i = 0; i < sumArr.length; i++) {\n\
    \        for (let j = 0; j < sumArr.length; j++) {\n            if (sumArr[i]\
    \ < sumArr[j]) {\n                let temp = sumArr[i];\n                sumArr[i]\
    \ = sumArr[j];\n                sumArr[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n", "    let result = [];\n   \
    \ let sum = 0;\n    let sum_array = [];\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        sum = 0;\n        for (let j = 0; j < nums[i].toString().length;\
    \ j++) {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n   \
    \     sum_array.push(sum);\n    }\n    for (let i = 0; i < sum_array.length; i++)\
    \ {\n        for (let j = 0; j < sum_array.length; j++) {\n            if (sum_array[i]\
    \ < sum_array[j]) {\n                let temp = sum_array[i];\n              \
    \  sum_array[i] = sum_array[j];\n                sum_array[j] = temp;\n      \
    \          temp = nums[i];\n                nums[i] = nums[j];\n             \
    \   nums[j] = temp;\n            }\n        }\n    }\n    return nums;\n}\n",
  "    return nums.sort((a, b) => {\n        let aSum = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n        let bSum = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n        return aSum - bSum;\n    });\n}\n",
  "    let result = nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n        return sumA - sumB;\n    });\n  \
    \  return result;\n}\n", "    let sum = 0;\n    let result = [];\n    for (let\
    \ i = 0; i < nums.length; i++) {\n        sum = 0;\n        for (let j = 0; j\
    \ < nums[i].toString().length; j++) {\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        result.push(sum);\n    }\n    for (let i = 0; i < result.length;\
    \ i++) {\n        for (let j = 0; j < result.length; j++) {\n            if (result[i]\
    \ < result[j]) {\n                let temp = result[i];\n                result[i]\
    \ = result[j];\n                result[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n", "  return nums.sort((a, b)\
    \ => {\n    const aSum = a.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n    const bSum = b.toString().split('').reduce((acc, curr) => acc + parseInt(curr),\
    \ 0);\n    return aSum - bSum;\n  });\n}\n", "  return nums.sort((a, b) => {\n\
    \    return sumDigits(a) - sumDigits(b);\n  });\n}\n", "    let result = nums.map((num,\
    \ index) => {\n        return {\n            index: index,\n            num: num,\n\
    \            sum: num.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b),\
    \ 0)\n        }\n    }).sort((a, b) => {\n        if (a.sum > b.sum) {\n     \
    \       return 1;\n        } else if (a.sum < b.sum) {\n            return -1;\n\
    \        } else {\n            return a.index - b.index;\n        }\n    }).map(item\
    \ => item.num);\n    return result;\n}\n", "    let nums_sum = [];\n    for (let\
    \ i = 0; i < nums.length; i++) {\n        let sum = 0;\n        for (let j = 0;\
    \ j < nums[i].toString().length; j++) {\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        nums_sum.push(sum);\n    }\n    let nums_sorted = [];\n  \
    \  for (let i = 0; i < nums.length; i++) {\n        let min = Math.min(...nums_sum);\n\
    \        let index = nums_sum.indexOf(min);\n        nums_sorted.push(nums[index]);\n\
    \        nums_sum.splice(index, 1);\n        nums.splice(index, 1);\n    }\n \
    \   return nums_sorted;\n}\n", "  return nums.sort((a, b) => {\n    return sum_digits(a)\
    \ - sum_digits(b);\n  });\n}\n", "    let sum = nums.map(function (num) {\n  \
    \      return num.toString().split('').reduce(function (a, b) {\n            return\
    \ parseInt(a) + parseInt(b);\n        });\n    });\n    let sorted = nums.map(function\
    \ (num, index) {\n        return {\n            num: num,\n            index:\
    \ index,\n            sum: sum[index]\n        };\n    }).sort(function (a, b)\
    \ {\n        return a.sum - b.sum;\n    });\n    return sorted.map(function (item)\
    \ {\n        return item.num;\n    });\n}\n", "    let result = [];\n    let sum\
    \ = 0;\n    let sum_array = [];\n    let sum_array_index = [];\n    let sum_array_index_sorted\
    \ = [];\n    let sum_array_sorted = [];\n    let result_array = [];\n    let nums_array\
    \ = [];\n    let nums_array_sorted = [];\n    let nums_array_index = [];\n   \
    \ let nums_array_index_sorted = [];\n    let nums_array_index_sorted_sorted =\
    \ [];\n    let nums_array_sorted_sorted = [];\n    let nums_array_sorted_sorted_sorted\
    \ = [];\n    let nums_array_index_sorted_sorted_sorted = [];\n    let nums_array_index_sorted_sorted_sorted_sorted\
    \ = [];\n    let nums_array_sorted_sorted_sorted_sorted = [];\n    let nums_array_sorted_sorted_sorted_sorted_sorted\
    \ = [];\n    let nums_array_index_sorted_sorted_sorted_sorted_sorted = [];\n \
    \   let nums_array_index_sorted_sorted_sorted_sorted_sorted_sorted = [];\n   \
    \ let nums_array_sorted_sorted_sorted_sorted_sorted_sorted = [];\n    let nums_array_sorted_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = [];\n    let nums_array_index_sorted_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = [];\n    let nums_array_index_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = [];\n    let nums_array_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = [];\n    let nums_array_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\
    \ = [];\n    let nums_array_index_sorted_sorted_s", "    return nums.sort((a,\
    \ b) => {\n        return sum_of_digits(a) - sum_of_digits(b) || nums.indexOf(a)\
    \ - nums.indexOf(b);\n    });\n}\n", "    let nums_sorted = nums.sort((a, b) =>\
    \ {\n        let a_sum = a.toString().split('').reduce((a, b) => parseInt(a) +\
    \ parseInt(b));\n        let b_sum = b.toString().split('').reduce((a, b) => parseInt(a)\
    \ + parseInt(b));\n        return a_sum - b_sum;\n    });\n    return nums_sorted;\n\
    }\n", "    let sum: number = 0;\n    let result: number[] = [];\n    let result2:\
    \ number[] = [];\n    let result3: number[] = [];\n    let result4: number[] =\
    \ [];\n    let result5: number[] = [];\n    let result6: number[] = [];\n    let\
    \ result7: number[] = [];\n    let result8: number[] = [];\n    let result9: number[]\
    \ = [];\n    let result10: number[] = [];\n    let result11: number[] = [];\n\
    \    let result12: number[] = [];\n    let result13: number[] = [];\n    let result14:\
    \ number[] = [];\n    let result15: number[] = [];\n    let result16: number[]\
    \ = [];\n    let result17: number[] = [];\n    let result18: number[] = [];\n\
    \    let result19: number[] = [];\n    let result20: number[] = [];\n    let result21:\
    \ number[] = [];\n    let result22: number[] = [];\n    let result23: number[]\
    \ = [];\n    let result24: number[] = [];\n    let result25: number[] = [];\n\
    \    let result26: number[] = [];\n    let result27: number[] = [];\n    let result28:\
    \ number[] = [];\n    let result29: number[] = [];\n    let result30: number[]\
    \ = [];\n    let result31: number[] = [];\n    let result32: number[] = [];\n\
    \    let result33: number[] = [];\n    let result34: number[] = [];\n    let result35:\
    \ number[] = [];\n    let result36: number[] = [];\n    let result37: number[]\
    \ = [];\n    let result38: number[] = [];\n    let result39: number[] = [];\n\
    \    let result40: number[] = [];\n    let result41: number[] = [];\n    let result42:\
    \ number[] = [];\n    let result43: number[] = [];\n    let result44: number[]\
    \ = [];\n    let result45: number[] = [];\n    let result46: number[] = [];\n\
    \    let result47: number[] = [];\n    let result48: number[] = [];\n    let result49:\
    \ number[] = [];\n    let result50: number[] = [];\n    let result", "    return\
    \ nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b));\n        return sumA - sumB;\n    });\n}\n",
  "    let result: any = [];\n    let sum: any = [];\n    let index: any = [];\n \
    \   for (let i = 0; i < nums.length; i++) {\n        sum.push(nums[i].toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b)));\n        index.push(i);\n    }\n    for (let\
    \ i = 0; i < sum.length; i++) {\n        for (let j = 0; j < sum.length; j++)\
    \ {\n            if (sum[i] < sum[j]) {\n                let temp = sum[i];\n\
    \                sum[i] = sum[j];\n                sum[j] = temp;\n          \
    \      temp = index[i];\n                index[i] = index[j];\n              \
    \  index[j] = temp;\n            }\n        }\n    }\n    for (let i = 0; i <\
    \ index.length; i++) {\n        result.push(nums[index[i]]);\n    }\n    return\
    \ result;\n}\n", "  if (nums.length === 0) {\n    return [];\n  }\n  let result\
    \ = [];\n  let sum = 0;\n  let num = 0;\n  for (let i = 0; i < nums.length; i++)\
    \ {\n    num = nums[i];\n    sum = 0;\n    while (num > 0) {\n      sum += num\
    \ % 10;\n      num = Math.floor(num / 10);\n    }\n    result.push([sum, i]);\n\
    \  }\n  result.sort(function (a, b) {\n    if (a[0] > b[0]) {\n      return 1;\n\
    \    } else if (a[0] < b[0]) {\n      return -1;\n    } else {\n      if (a[1]\
    \ > b[1]) {\n        return 1;\n      } else if (a[1] < b[1]) {\n        return\
    \ -1;\n      } else {\n        return 0;\n      }\n    }\n  });\n  let res = [];\n\
    \  for (let i = 0; i < result.length; i++) {\n    res.push(nums[result[i][1]]);\n\
    \  }\n  return res;\n}\n", "    let result = [];\n    let sum = 0;\n    let num\
    \ = 0;\n    let index = 0;\n    if (nums.length === 0) {\n        return [];\n\
    \    }\n    for (let i = 0; i < nums.length; i++) {\n        num = nums[i];\n\
    \        sum = 0;\n        while (num > 0) {\n            sum += num % 10;\n \
    \           num = Math.floor(num / 10);\n        }\n        result.push([sum,\
    \ i]);\n    }\n    result.sort(function (a, b) {\n        if (a[0] > b[0]) {\n\
    \            return 1;\n        }\n        if (a[0] < b[0]) {\n            return\
    \ -1;\n        }\n        if (a[1] > b[1]) {\n            return 1;\n        }\n\
    \        if (a[1] < b[1]) {\n            return -1;\n        }\n        return\
    \ 0;\n    });\n    for (let i = 0; i < result.length; i++) {\n        index =\
    \ result[i][1];\n        result[i] = nums[index];\n    }\n    return result;\n\
    }\n", "    let result: any = [];\n    let temp: any = [];\n    let sum: number\
    \ = 0;\n    for (let i: number = 0; i < nums.length; i++) {\n        sum = 0;\n\
    \        temp = nums[i].toString().split('');\n        for (let j: number = 0;\
    \ j < temp.length; j++) {\n            sum += parseInt(temp[j]);\n        }\n\
    \        result.push(sum);\n    }\n    let temp2: any = [];\n    for (let i: number\
    \ = 0; i < result.length; i++) {\n        for (let j: number = 0; j < result.length;\
    \ j++) {\n            if (result[i] < result[j]) {\n                temp2 = result[i];\n\
    \                result[i] = result[j];\n                result[j] = temp2;\n\
    \                temp2 = nums[i];\n                nums[i] = nums[j];\n      \
    \          nums[j] = temp2;\n            }\n        }\n    }\n    return nums;\n\
    }\n", "    let result = [];\n    let sum = 0;\n    let sumArr = [];\n    for (let\
    \ i = 0; i < nums.length; i++) {\n        sum = 0;\n        for (let j = 0; j\
    \ < nums[i].toString().length; j++) {\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sumArr.push(sum);\n    }\n    for (let i = 0; i < sumArr.length;\
    \ i++) {\n        for (let j = 0; j < sumArr.length; j++) {\n            if (sumArr[i]\
    \ < sumArr[j]) {\n                let temp = sumArr[i];\n                sumArr[i]\
    \ = sumArr[j];\n                sumArr[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n", "    let result: any = [];\n\
    \    let sum: any = [];\n    let sum_of_digits: any = [];\n    let index: any\
    \ = [];\n    let temp: any = [];\n    let temp_index: any = [];\n    let temp_sum:\
    \ any = [];\n    let temp_sum_of_digits: any = [];\n    let temp_result: any =\
    \ [];\n    let temp_index_result: any = [];\n    let temp_sum_result: any = [];\n\
    \    let temp_sum_of_digits_result: any = [];\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        sum.push(nums[i]);\n        sum_of_digits.push(nums[i]);\n \
    \       index.push(i);\n    }\n    for (let i = 0; i < sum.length; i++) {\n  \
    \      let temp_sum_of_digits_element: any = 0;\n        let temp_sum_element:\
    \ any = 0;\n        let temp_index_element: any = 0;\n        let temp_element:\
    \ any = 0;\n        if (sum[i] < 0) {\n            temp_sum_element = sum[i] *\
    \ -1;\n        } else {\n            temp_sum_element = sum[i];\n        }\n \
    \       if (sum_of_digits[i] < 0) {\n            temp_sum_of_digits_element =\
    \ sum_of_digits[i] * -1;\n        } else {\n            temp_sum_of_digits_element\
    \ = sum_of_digits[i];\n        }\n        temp_index_element = index[i];\n   \
    \     temp_element = nums[i];\n        temp_sum.push(temp_sum_element);\n    \
    \    temp_sum_of_digits.push(temp_sum_of_digits_element);\n        temp_index.push(temp_index_element);\n\
    \        temp.push(temp_element);\n    }\n    for (let i = 0; i < temp_sum.length;\
    \ i++) {\n        let temp_sum_of_digits_element: any = 0;\n        let temp",
  "    let result: any = [];\n    let sum: any = [];\n    let index: any = [];\n \
    \   let temp: any = [];\n    for (let i: number = 0; i < nums.length; i++) {\n\
    \        sum.push(nums[i].toString().split('').reduce((a: number, b: number) =>\
    \ a + parseInt(b), 0));\n        index.push(i);\n    }\n    for (let i: number\
    \ = 0; i < sum.length; i++) {\n        for (let j: number = 0; j < sum.length\
    \ - 1; j++) {\n            if (sum[j] > sum[j + 1]) {\n                temp =\
    \ sum[j];\n                sum[j] = sum[j + 1];\n                sum[j + 1] =\
    \ temp;\n                temp = index[j];\n                index[j] = index[j\
    \ + 1];\n                index[j + 1] = temp;\n            }\n        }\n    }\n\
    \    for (let i: number = 0; i < index.length; i++) {\n        result.push(nums[index[i]]);\n\
    \    }\n    return result;\n}\n", "    let sum_of_digits = (num: number): number\
    \ => {\n        return num.toString().split('').reduce((a, b) => {\n         \
    \   return parseInt(a) + parseInt(b);\n        });\n    };\n    let sum_of_digits_array\
    \ = nums.map((num) => {\n        return sum_of_digits(num);\n    });\n    let\
    \ sorted_array = [];\n    for (let i = 0; i < nums.length; i++) {\n        let\
    \ min_index = sum_of_digits_array.indexOf(Math.min(...sum_of_digits_array));\n\
    \        sorted_array.push(nums[min_index]);\n        sum_of_digits_array[min_index]\
    \ = Infinity;\n    }\n    return sorted_array;\n}\n", "    return nums.sort((a,\
    \ b) => {\n        let sumA = 0;\n        let sumB = 0;\n        for (let i =\
    \ 0; i < a.toString().length; i++) {\n            sumA += parseInt(a.toString()[i]);\n\
    \        }\n        for (let i = 0; i < b.toString().length; i++) {\n        \
    \    sumB += parseInt(b.toString()[i]);\n        }\n        return sumA - sumB;\n\
    \    });\n}\n", "    let sum = 0;\n    let sum_arr = [];\n    let result = [];\n\
    \    let result_arr = [];\n    for (let i = 0; i < nums.length; i++) {\n     \
    \   sum = 0;\n        for (let j = 0; j < nums[i].toString().length; j++) {\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        sum_arr.push(sum);\n\
    \    }\n    for (let i = 0; i < sum_arr.length; i++) {\n        for (let j = 0;\
    \ j < sum_arr.length; j++) {\n            if (sum_arr[i] < sum_arr[j]) {\n   \
    \             let temp = sum_arr[i];\n                sum_arr[i] = sum_arr[j];\n\
    \                sum_arr[j] = temp;\n                temp = nums[i];\n       \
    \         nums[i] = nums[j];\n                nums[j] = temp;\n            }\n\
    \        }\n    }\n    return nums;\n}\n", "    let result: any = [];\n    let\
    \ sum: any = [];\n    let index: any = [];\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        let temp: any = nums[i].toString().split('');\n        let tempSum:\
    \ any = 0;\n        for (let j = 0; j < temp.length; j++) {\n            tempSum\
    \ += parseInt(temp[j]);\n        }\n        sum.push(tempSum);\n        index.push(i);\n\
    \    }\n    for (let i = 0; i < nums.length; i++) {\n        let min: any = Math.min(...sum);\n\
    \        let minIndex: any = sum.indexOf(min);\n        result.push(nums[index[minIndex]]);\n\
    \        sum.splice(minIndex, 1);\n        index.splice(minIndex, 1);\n    }\n\
    \    return result;\n}\n", "    if (nums.length === 0) {\n        return [];\n\
    \    }\n    let result: any = [];\n    let sum: any = [];\n    for (let i = 0;\
    \ i < nums.length; i++) {\n        sum.push(nums[i].toString().split('').reduce((a,\
    \ b) => +a + +b, 0));\n    }\n    for (let i = 0; i < nums.length; i++) {\n  \
    \      let min: number = Math.min(...sum);\n        let index: number = sum.indexOf(min);\n\
    \        result.push(nums[index]);\n        sum.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return result;\n}\n", "    let result: any = [];\n    let temp:\
    \ any = [];\n    let sum: number = 0;\n    let tempSum: number = 0;\n    let tempNum:\
    \ number = 0;\n    for (let i: number = 0; i < nums.length; i++) {\n        sum\
    \ = 0;\n        tempNum = nums[i];\n        while (tempNum > 0) {\n          \
    \  sum += tempNum % 10;\n            tempNum = Math.floor(tempNum / 10);\n   \
    \     }\n        temp.push(sum);\n    }\n    for (let i: number = 0; i < nums.length;\
    \ i++) {\n        tempSum = temp[i];\n        for (let j: number = i; j < nums.length;\
    \ j++) {\n            if (tempSum > temp[j]) {\n                tempSum = temp[j];\n\
    \                temp[j] = temp[i];\n                temp[i] = tempSum;\n    \
    \            tempSum = nums[j];\n                nums[j] = nums[i];\n        \
    \        nums[i] = tempSum;\n            }\n        }\n    }\n    return nums;\n\
    }\nconsole.log(order_by_points([1, 11, -1, -11, -12]));\n", "    let result: any\
    \ = [];\n    let sum: any = [];\n    let sum_of_digits: any = [];\n    let index:\
    \ any = [];\n    for (let i = 0; i < nums.length; i++) {\n        sum_of_digits[i]\
    \ = 0;\n        sum[i] = 0;\n        index[i] = 0;\n        let num = nums[i];\n\
    \        while (num > 0) {\n            sum_of_digits[i] += num % 10;\n      \
    \      num = Math.floor(num / 10);\n        }\n        sum[i] = sum_of_digits[i];\n\
    \        index[i] = i;\n    }\n    for (let i = 0; i < nums.length; i++) {\n \
    \       for (let j = i + 1; j < nums.length; j++) {\n            if (sum[i] >\
    \ sum[j]) {\n                let temp = sum[i];\n                sum[i] = sum[j];\n\
    \                sum[j] = temp;\n                temp = nums[i];\n           \
    \     nums[i] = nums[j];\n                nums[j] = temp;\n                temp\
    \ = index[i];\n                index[i] = index[j];\n                index[j]\
    \ = temp;\n            }\n        }\n    }\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        for (let j = i + 1; j < nums.length; j++) {\n            if\
    \ (sum[i] == sum[j]) {\n                if (index[i] > index[j]) {\n         \
    \           let temp = sum[i];\n                    sum[i] = sum[j];\n       \
    \             sum[j] = temp;\n                    temp = nums[i];\n          \
    \          nums[i] = nums[j];\n                    nums[j] = temp;\n         \
    \           temp = index[i];\n                    index[i] = index[j];\n     \
    \               index[j] = temp;\n                }\n            }\n        }\n\
    \    }\n    for (let i = 0; i < nums.length; i++) {\n        result[i]", "   \
    \ let result: any = [];\n    let sum: any = [];\n    for (let i: number = 0; i\
    \ < nums.length; i++) {\n        sum.push(nums[i].toString().split('').reduce((a:\
    \ number, b: number) => a + +b, 0));\n    }\n    for (let i: number = 0; i < nums.length;\
    \ i++) {\n        let min: number = Math.min(...sum);\n        let index: number\
    \ = sum.indexOf(min);\n        result.push(nums[index]);\n        sum.splice(index,\
    \ 1);\n        nums.splice(index, 1);\n    }\n    return result;\n}\nconsole.log(order_by_points([1,\
    \ 11, -1, -11, -12]));\n", "    let result: any = [];\n    let sum: any = [];\n\
    \    let sum_index: any = [];\n    let index: any = [];\n    for (let i = 0; i\
    \ < nums.length; i++) {\n        let sum_num: any = 0;\n        let num: any =\
    \ nums[i];\n        while (num > 0) {\n            sum_num += num % 10;\n    \
    \        num = Math.floor(num / 10);\n        }\n        sum.push(sum_num);\n\
    \        sum_index.push(sum_num);\n        index.push(i);\n    }\n    sum_index.sort(function\
    \ (a, b) { return a - b });\n    for (let i = 0; i < sum_index.length; i++) {\n\
    \        let index_num: any = sum.indexOf(sum_index[i]);\n        result.push(nums[index[index_num]]);\n\
    \        sum.splice(index_num, 1);\n        index.splice(index_num, 1);\n    }\n\
    \    return result;\n}\n", "    let result = [];\n    let sum = 0;\n    let sumArr\
    \ = [];\n    let indexArr = [];\n    let index = 0;\n    let temp = 0;\n    let\
    \ temp2 = 0;\n    for (let i = 0; i < nums.length; i++) {\n        sum = 0;\n\
    \        for (let j = 0; j < nums[i].toString().length; j++) {\n            sum\
    \ += parseInt(nums[i].toString()[j]);\n        }\n        sumArr.push(sum);\n\
    \        indexArr.push(i);\n    }\n    for (let i = 0; i < sumArr.length; i++)\
    \ {\n        for (let j = 0; j < sumArr.length - 1; j++) {\n            if (sumArr[j]\
    \ > sumArr[j + 1]) {\n                temp = sumArr[j];\n                sumArr[j]\
    \ = sumArr[j + 1];\n                sumArr[j + 1] = temp;\n                temp2\
    \ = indexArr[j];\n                indexArr[j] = indexArr[j + 1];\n           \
    \     indexArr[j + 1] = temp2;\n            }\n        }\n    }\n    for (let\
    \ i = 0; i < indexArr.length; i++) {\n        result.push(nums[indexArr[i]]);\n\
    \    }\n    return result;\n}\n", "    let sum = 0;\n    let sumArr = [];\n  \
    \  for (let i = 0; i < nums.length; i++) {\n        sum = 0;\n        for (let\
    \ j = 0; j < nums[i].toString().length; j++) {\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sumArr.push(sum);\n    }\n    let sortedArr = [];\n    let\
    \ sortedSumArr = sumArr.sort();\n    for (let i = 0; i < sortedSumArr.length;\
    \ i++) {\n        for (let j = 0; j < sumArr.length; j++) {\n            if (sortedSumArr[i]\
    \ === sumArr[j]) {\n                sortedArr.push(nums[j]);\n               \
    \ sumArr[j] = null;\n                break;\n            }\n        }\n    }\n\
    \    return sortedArr;\n}\n", "    let result: any = [];\n    let sum: any = [];\n\
    \    let index: any = [];\n    let temp: any = [];\n    let temp2: any = [];\n\
    \    let temp3: any = [];\n    let temp4: any = [];\n    let temp5: any = [];\n\
    \    let temp6: any = [];\n    let temp7: any = [];\n    let temp8: any = [];\n\
    \    let temp9: any = [];\n    let temp10: any = [];\n    let temp11: any = [];\n\
    \    let temp12: any = [];\n    let temp13: any = [];\n    let temp14: any = [];\n\
    \    let temp15: any = [];\n    let temp16: any = [];\n    let temp17: any = [];\n\
    \    let temp18: any = [];\n    let temp19: any = [];\n    let temp20: any = [];\n\
    \    let temp21: any = [];\n    let temp22: any = [];\n    let temp23: any = [];\n\
    \    let temp24: any = [];\n    let temp25: any = [];\n    let temp26: any = [];\n\
    \    let temp27: any = [];\n    let temp28: any = [];\n    let temp29: any = [];\n\
    \    let temp30: any = [];\n    let temp31: any = [];\n    let temp32: any = [];\n\
    \    let temp33: any = [];\n    let temp34: any = [];\n    let temp35: any = [];\n\
    \    let temp36: any = [];\n    let temp37: any = [];\n    let temp38: any = [];\n\
    \    let temp39: any = [];\n    let temp40: any = [];\n    let temp41: any = [];\n\
    \    let temp42: any = [];\n    let temp43: any = [];\n    let temp44: any = [];\n\
    \    let temp45: any = [];\n    let temp46: any = [];\n    let temp47: any = [];\n\
    \    let temp48: any = [];\n    let temp49: any = [];\n    let temp50: any = [];\n\
    \    let temp51: any = [];\n    let temp52: any = [];\n    let temp53: any = [];\n\
    \    let temp54: any = [];\n    let", "    if (nums.length === 0) {\n        return\
    \ [];\n    }\n    let sum_of_digits = [];\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        let sum = 0;\n        let num = nums[i];\n        while (num\
    \ > 0) {\n            sum += num % 10;\n            num = Math.floor(num / 10);\n\
    \        }\n        sum_of_digits.push(sum);\n    }\n    let sorted_nums = [];\n\
    \    for (let i = 0; i < nums.length; i++) {\n        let min = Math.min(...sum_of_digits);\n\
    \        let index = sum_of_digits.indexOf(min);\n        sorted_nums.push(nums[index]);\n\
    \        sum_of_digits[index] = Infinity;\n    }\n    return sorted_nums;\n}\n",
  "    let result: any = [];\n    let sum: any = [];\n    for (let i: number = 0;\
    \ i < nums.length; i++) {\n        sum.push(nums[i].toString().split('').reduce((a:\
    \ number, b: number) => parseInt(a) + parseInt(b)));\n    }\n    let sorted: any\
    \ = sum.slice().sort((a: number, b: number) => a - b);\n    for (let i: number\
    \ = 0; i < sorted.length; i++) {\n        for (let j: number = 0; j < sum.length;\
    \ j++) {\n            if (sorted[i] === sum[j]) {\n                result.push(nums[j]);\n\
    \                sum[j] = null;\n            }\n        }\n    }\n    return result;\n\
    }\n", "    let sum = 0;\n    let sum_arr = [];\n    let result = [];\n    for\
    \ (let i = 0; i < nums.length; i++) {\n        sum = 0;\n        for (let j =\
    \ 0; j < nums[i].toString().length; j++) {\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sum_arr.push(sum);\n    }\n    for (let i = 0; i < sum_arr.length;\
    \ i++) {\n        for (let j = 0; j < sum_arr.length; j++) {\n            if (sum_arr[i]\
    \ < sum_arr[j]) {\n                let temp = sum_arr[i];\n                sum_arr[i]\
    \ = sum_arr[j];\n                sum_arr[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n", "    let sum = 0;\n    let\
    \ result = [];\n    let result2 = [];\n    let result3 = [];\n    let result4\
    \ = [];\n    let result5 = [];\n    let result6 = [];\n    let result7 = [];\n\
    \    let result8 = [];\n    let result9 = [];\n    let result10 = [];\n    let\
    \ result11 = [];\n    let result12 = [];\n    let result13 = [];\n    let result14\
    \ = [];\n    let result15 = [];\n    let result16 = [];\n    let result17 = [];\n\
    \    let result18 = [];\n    let result19 = [];\n    let result20 = [];\n    let\
    \ result21 = [];\n    let result22 = [];\n    let result23 = [];\n    let result24\
    \ = [];\n    let result25 = [];\n    let result26 = [];\n    let result27 = [];\n\
    \    let result28 = [];\n    let result29 = [];\n    let result30 = [];\n    let\
    \ result31 = [];\n    let result32 = [];\n    let result33 = [];\n    let result34\
    \ = [];\n    let result35 = [];\n    let result36 = [];\n    let result37 = [];\n\
    \    let result38 = [];\n    let result39 = [];\n    let result40 = [];\n    let\
    \ result41 = [];\n    let result42 = [];\n    let result43 = [];\n    let result44\
    \ = [];\n    let result45 = [];\n    let result46 = [];\n    let result47 = [];\n\
    \    let result48 = [];\n    let result49 = [];\n    let result50 = [];\n    let\
    \ result51 = [];\n    let result52 = [];\n    let result53 = [];\n    let result54\
    \ = [];\n    let result55 = [];\n    let result56 = [];\n    let result57 = [];\n\
    \    let result58 = [];\n    let result59 = [];\n    let result60 = [];\n    let\
    \ result61 = [];\n    let result62 = [];\n    let result63 = [];\n    let result64\
    \ = [];\n    let result65 = [];\n    let result66 = [];\n    let result67 = [];\n\
    \    let result68 = [];\n    let result69 = [];\n    let result70 = [];\n    let\
    \ result71 = [];\n    let result72 = [];\n   ", "    let sum = 0;\n    let sum_arr\
    \ = [];\n    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n \
    \       sum = 0;\n        for (let j = 0; j < nums[i].toString().length; j++)\
    \ {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n        sum_arr.push(sum);\n\
    \    }\n    for (let i = 0; i < sum_arr.length; i++) {\n        for (let j = 0;\
    \ j < sum_arr.length; j++) {\n            if (sum_arr[i] < sum_arr[j]) {\n   \
    \             let temp = sum_arr[i];\n                sum_arr[i] = sum_arr[j];\n\
    \                sum_arr[j] = temp;\n                temp = nums[i];\n       \
    \         nums[i] = nums[j];\n                nums[j] = temp;\n            }\n\
    \        }\n    }\n    return nums;\n}\n", "    let sum = 0;\n    let result =\
    \ [];\n    let result2 = [];\n    let result3 = [];\n    let result4 = [];\n \
    \   let result5 = [];\n    let result6 = [];\n    let result7 = [];\n    let result8\
    \ = [];\n    let result9 = [];\n    let result10 = [];\n    let result11 = [];\n\
    \    let result12 = [];\n    let result13 = [];\n    let result14 = [];\n    let\
    \ result15 = [];\n    let result16 = [];\n    let result17 = [];\n    let result18\
    \ = [];\n    let result19 = [];\n    let result20 = [];\n    let result21 = [];\n\
    \    let result22 = [];\n    let result23 = [];\n    let result24 = [];\n    let\
    \ result25 = [];\n    let result26 = [];\n    let result27 = [];\n    let result28\
    \ = [];\n    let result29 = [];\n    let result30 = [];\n    let result31 = [];\n\
    \    let result32 = [];\n    let result33 = [];\n    let result34 = [];\n    let\
    \ result35 = [];\n    let result36 = [];\n    let result37 = [];\n    let result38\
    \ = [];\n    let result39 = [];\n    let result40 = [];\n    let result41 = [];\n\
    \    let result42 = [];\n    let result43 = [];\n    let result44 = [];\n    let\
    \ result45 = [];\n    let result46 = [];\n    let result47 = [];\n    let result48\
    \ = [];\n    let result49 = [];\n    let result50 = [];\n    let result51 = [];\n\
    \    let result52 = [];\n    let result53 = [];\n    let result54 = [];\n    let\
    \ result55 = [];\n    let result56 = [];\n    let result57 = [];\n    let result58\
    \ = [];\n    let result59 = [];\n    let result60 = [];\n    let result61 = [];\n\
    \    let result62 = [];\n    let result63 = [];\n    let result64 = [];\n    let\
    \ result65 = [];\n    let result66 = [];\n    let result67 = [];\n    let result68\
    \ = [];\n    let result69 = [];\n    let result70 = [];\n    let result71 = [];\n\
    \    let result72 = [];\n   ", "    let sum = 0;\n    let sumArr = [];\n    let\
    \ result = [];\n    for (let i = 0; i < nums.length; i++) {\n        sum = 0;\n\
    \        for (let j = 0; j < nums[i].toString().length; j++) {\n            sum\
    \ += parseInt(nums[i].toString()[j]);\n        }\n        sumArr.push(sum);\n\
    \    }\n    for (let i = 0; i < sumArr.length; i++) {\n        let min = sumArr[i];\n\
    \        let index = i;\n        for (let j = i + 1; j < sumArr.length; j++) {\n\
    \            if (sumArr[j] < min) {\n                min = sumArr[j];\n      \
    \          index = j;\n            }\n        }\n        let temp = sumArr[i];\n\
    \        sumArr[i] = sumArr[index];\n        sumArr[index] = temp;\n        result.push(nums[index]);\n\
    \    }\n    return result;\n}\n", "    return nums.sort((a, b) => {\n        let\
    \ sumA = 0;\n        let sumB = 0;\n        for (let i = 0; i < a.toString().length;\
    \ i++) {\n            sumA += parseInt(a.toString()[i]);\n        }\n        for\
    \ (let i = 0; i < b.toString().length; i++) {\n            sumB += parseInt(b.toString()[i]);\n\
    \        }\n        return sumA - sumB;\n    });\n}\n", "    let result: any =\
    \ [];\n    let sum: any = 0;\n    let sumArr: any = [];\n    let index: any =\
    \ 0;\n    let indexArr: any = [];\n    let sumIndex: any = [];\n    let sumIndexArr:\
    \ any = [];\n    let indexArr2: any = [];\n    let sumIndexArr2: any = [];\n \
    \   let result2: any = [];\n    let result3: any = [];\n    let result4: any =\
    \ [];\n    if (nums.length === 0) {\n        return [];\n    } else {\n      \
    \  for (let i: number = 0; i < nums.length; i++) {\n            sum = 0;\n   \
    \         for (let j: number = 0; j < nums[i].toString().length; j++) {\n    \
    \            sum += parseInt(nums[i].toString().charAt(j));\n            }\n \
    \           sumArr.push(sum);\n            indexArr.push(i);\n        }\n    \
    \    for (let i: number = 0; i < sumArr.length; i++) {\n            sumIndex.push(sumArr[i]);\n\
    \            sumIndex.push(indexArr[i]);\n            sumIndexArr.push(sumIndex);\n\
    \            sumIndex = [];\n        }\n        for (let i: number = 0; i < sumIndexArr.length;\
    \ i++) {\n            for (let j: number = 0; j < sumIndexArr.length; j++) {\n\
    \                if (sumIndexArr[i][0] < sumIndexArr[j][0]) {\n              \
    \      result = sumIndexArr[i];\n                    sumIndexArr[i] = sumIndexArr[j];\n\
    \                    sumIndexArr[j] = result;\n                }\n           \
    \ }\n        }\n        for (let i: number = 0; i < sumIndexArr.length; i++) {\n\
    \            indexArr2.push(sumIndexArr[i][1]);\n            sumIndexArr2.push(sumIndexArr[i][0]);\n\
    \        }\n        for (let i: number = 0; i < indexArr2.length; i++) {\n   \
    \        ", "    let result: any = [];\n    let temp: any = [];\n    let sum:\
    \ number = 0;\n    for (let i: number = 0; i < nums.length; i++) {\n        let\
    \ num: string = nums[i].toString();\n        for (let j: number = 0; j < num.length;\
    \ j++) {\n            sum += parseInt(num[j]);\n        }\n        temp.push(sum);\n\
    \        sum = 0;\n    }\n    for (let i: number = 0; i < temp.length; i++) {\n\
    \        let min: number = temp[i];\n        let index: number = i;\n        for\
    \ (let j: number = i + 1; j < temp.length; j++) {\n            if (temp[j] < min)\
    \ {\n                min = temp[j];\n                index = j;\n            }\n\
    \        }\n        if (i !== index) {\n            let temp2: number = temp[i];\n\
    \            temp[i] = temp[index];\n            temp[index] = temp2;\n      \
    \      let temp3: number = nums[i];\n            nums[i] = nums[index];\n    \
    \        nums[index] = temp3;\n        }\n    }\n    return nums;\n}\n", "   \
    \ let result: any = [];\n    let sum: any = [];\n    let temp: any = [];\n   \
    \ let temp2: any = [];\n    for (let i: number = 0; i < nums.length; i++) {\n\
    \        temp.push(nums[i]);\n        temp2.push(nums[i]);\n        sum.push(nums[i].toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b)));\n    }\n    for (let i: number = 0; i < sum.length;\
    \ i++) {\n        for (let j: number = 0; j < sum.length; j++) {\n           \
    \ if (sum[i] < sum[j]) {\n                let temp3: any = sum[i];\n         \
    \       sum[i] = sum[j];\n                sum[j] = temp3;\n                let\
    \ temp4: any = temp[i];\n                temp[i] = temp[j];\n                temp[j]\
    \ = temp4;\n            }\n        }\n    }\n    for (let i: number = 0; i < temp.length;\
    \ i++) {\n        for (let j: number = 0; j < temp2.length; j++) {\n         \
    \   if (temp[i] === temp2[j]) {\n                result.push(temp2[j]);\n    \
    \            temp2[j] = null;\n            }\n        }\n    }\n    return result;\n\
    }\n", "    let sum = 0;\n    let result = [];\n    let arr = [];\n    for (let\
    \ i = 0; i < nums.length; i++) {\n        sum = 0;\n        for (let j = 0; j\
    \ < nums[i].toString().length; j++) {\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        arr.push(sum);\n    }\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if (arr[i]\
    \ < arr[j]) {\n                let temp = arr[i];\n                arr[i] = arr[j];\n\
    \                arr[j] = temp;\n                temp = nums[i];\n           \
    \     nums[i] = nums[j];\n                nums[j] = temp;\n            }\n   \
    \     }\n    }\n    return nums;\n}\n", "    let result = [];\n    let sum = 0;\n\
    \    let sum_array = [];\n    for (let i = 0; i < nums.length; i++) {\n      \
    \  sum = 0;\n        for (let j = 0; j < nums[i].toString().length; j++) {\n \
    \           sum += parseInt(nums[i].toString()[j]);\n        }\n        sum_array.push(sum);\n\
    \    }\n    for (let i = 0; i < sum_array.length; i++) {\n        let min = Math.min(...sum_array);\n\
    \        let index = sum_array.indexOf(min);\n        result.push(nums[index]);\n\
    \        sum_array.splice(index, 1);\n        nums.splice(index, 1);\n    }\n\
    \    return result;\n}\n", "    let sum: number = 0;\n    let nums_sum: number[]\
    \ = [];\n    let nums_sum_index: number[] = [];\n    let result: number[] = [];\n\
    \    for (let i = 0; i < nums.length; i++) {\n        sum = 0;\n        for (let\
    \ j = 0; j < nums[i].toString().length; j++) {\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        nums_sum.push(sum);\n        nums_sum_index.push(i);\n   \
    \ }\n    for (let i = 0; i < nums_sum.length; i++) {\n        for (let j = 0;\
    \ j < nums_sum.length - 1; j++) {\n            if (nums_sum[j] > nums_sum[j +\
    \ 1]) {\n                let temp = nums_sum[j];\n                nums_sum[j]\
    \ = nums_sum[j + 1];\n                nums_sum[j + 1] = temp;\n              \
    \  temp = nums_sum_index[j];\n                nums_sum_index[j] = nums_sum_index[j\
    \ + 1];\n                nums_sum_index[j + 1] = temp;\n            }\n      \
    \  }\n    }\n    for (let i = 0; i < nums_sum_index.length; i++) {\n        result.push(nums[nums_sum_index[i]]);\n\
    \    }\n    return result;\n}\n", "    let sum = 0;\n    let arr = [];\n    for\
    \ (let i = 0; i < nums.length; i++) {\n        sum = 0;\n        for (let j =\
    \ 0; j < nums[i].toString().length; j++) {\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        arr.push(sum);\n    }\n    let temp = 0;\n    for (let i =\
    \ 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++)\
    \ {\n            if (arr[i] > arr[j]) {\n                temp = arr[i];\n    \
    \            arr[i] = arr[j];\n                arr[j] = temp;\n              \
    \  temp = nums[i];\n                nums[i] = nums[j];\n                nums[j]\
    \ = temp;\n            }\n        }\n    }\n    return nums;\n}\n", "  if (nums.length\
    \ === 0) {\n    return [];\n  }\n  let sum = 0;\n  let nums_sum = [];\n  for (let\
    \ i = 0; i < nums.length; i++) {\n    sum = 0;\n    for (let j = 0; j < nums[i].toString().length;\
    \ j++) {\n      sum += parseInt(nums[i].toString()[j]);\n    }\n    nums_sum.push(sum);\n\
    \  }\n  let result = [];\n  let min = nums_sum[0];\n  let index = 0;\n  for (let\
    \ i = 0; i < nums.length; i++) {\n    for (let j = 0; j < nums_sum.length; j++)\
    \ {\n      if (nums_sum[j] < min) {\n        min = nums_sum[j];\n        index\
    \ = j;\n      }\n    }\n    result.push(nums[index]);\n    nums_sum[index] = Infinity;\n\
    \    min = nums_sum[0];\n  }\n  return result;\n}\n", "    let result = [];\n\
    \    let sum = 0;\n    let sumArray = [];\n    let indexArray = [];\n    let index\
    \ = 0;\n    let indexOfIndex = 0;\n    let indexOfSum = 0;\n    for (let i = 0;\
    \ i < nums.length; i++) {\n        let num = nums[i];\n        sum = 0;\n    \
    \    while (num > 0) {\n            sum += num % 10;\n            num = Math.floor(num\
    \ / 10);\n        }\n        sumArray.push(sum);\n        indexArray.push(i);\n\
    \    }\n    for (let i = 0; i < sumArray.length; i++) {\n        index = 0;\n\
    \        for (let j = 0; j < sumArray.length; j++) {\n            if (sumArray[j]\
    \ < sumArray[index]) {\n                index = j;\n            }\n        }\n\
    \        indexOfIndex = indexArray[index];\n        indexOfSum = sumArray[index];\n\
    \        result.push(nums[indexOfIndex]);\n        sumArray[index] = Infinity;\n\
    \        indexArray[index] = Infinity;\n    }\n    return result;\n}\nconsole.log(order_by_points([1,\
    \ 11, -1, -11, -12]));\nconsole.log(order_by_points([]));\n", "  if (nums.length\
    \ === 0) {\n    return [];\n  }\n  let sum = 0;\n  let result = [];\n  let index\
    \ = 0;\n  let temp = [];\n  for (let i = 0; i < nums.length; i++) {\n    sum =\
    \ 0;\n    for (let j = 0; j < nums[i].toString().length; j++) {\n      sum +=\
    \ parseInt(nums[i].toString()[j]);\n    }\n    temp.push(sum);\n  }\n  for (let\
    \ i = 0; i < temp.length; i++) {\n    index = temp.indexOf(Math.min(...temp));\n\
    \    result.push(nums[index]);\n    temp[index] = Infinity;\n  }\n  return result;\n\
    }\n", "    let sumDigits = (n: number): number => {\n        let sum = 0;\n  \
    \      while (n > 0) {\n            sum += n % 10;\n            n = Math.floor(n\
    \ / 10);\n        }\n        return sum;\n    };\n    let sums = nums.map(sumDigits);\n\
    \    let sorted = nums.map((n, i) => [n, sums[i], i]).sort((a, b) => {\n     \
    \   if (a[1] < b[1]) {\n            return -1;\n        } else if (a[1] > b[1])\
    \ {\n            return 1;\n        } else {\n            return a[2] - b[2];\n\
    \        }\n    });\n    return sorted.map(x => x[0]);\n}\n", "    var sum = 0;\n\
    \    var result = [];\n    for (var i = 0; i < nums.length; i++) {\n        sum\
    \ = 0;\n        for (var j = 0; j < nums[i].toString().length; j++) {\n      \
    \      sum += parseInt(nums[i].toString()[j]);\n        }\n        result.push(sum);\n\
    \    }\n    for (var i = 0; i < result.length; i++) {\n        for (var j = 0;\
    \ j < result.length; j++) {\n            if (result[i] < result[j]) {\n      \
    \          var temp = result[i];\n                result[i] = result[j];\n   \
    \             result[j] = temp;\n                var temp2 = nums[i];\n      \
    \          nums[i] = nums[j];\n                nums[j] = temp2;\n            }\n\
    \        }\n    }\n    return nums;\n}\n", "    return nums.sort((a, b) => {\n\
    \        let sumA = 0;\n        let sumB = 0;\n        for (let i = 0; i < a.toString().length;\
    \ i++) {\n            sumA += parseInt(a.toString()[i]);\n        }\n        for\
    \ (let i = 0; i < b.toString().length; i++) {\n            sumB += parseInt(b.toString()[i]);\n\
    \        }\n        return sumA - sumB;\n    });\n}\n", "    let sum = 0;\n  \
    \  let result = [];\n    for (let i = 0; i < nums.length; i++) {\n        let\
    \ num = nums[i];\n        let numString = num.toString();\n        for (let j\
    \ = 0; j < numString.length; j++) {\n            sum += parseInt(numString[j]);\n\
    \        }\n        result.push(sum);\n        sum = 0;\n    }\n    let sorted\
    \ = result.sort((a, b) => a - b);\n    let final = [];\n    for (let i = 0; i\
    \ < sorted.length; i++) {\n        let index = result.indexOf(sorted[i]);\n  \
    \      final.push(nums[index]);\n        result[index] = -1;\n    }\n    return\
    \ final;\n}\n", "    let sum = 0;\n    let arr = [];\n    for (let i = 0; i <\
    \ nums.length; i++) {\n        sum = 0;\n        let num = nums[i].toString();\n\
    \        for (let j = 0; j < num.length; j++) {\n            sum += parseInt(num[j]);\n\
    \        }\n        arr.push([sum, i]);\n    }\n    arr.sort(function (a, b) {\n\
    \        if (a[0] === b[0]) {\n            return a[1] - b[1];\n        }\n  \
    \      return a[0] - b[0];\n    });\n    let result = [];\n    for (let i = 0;\
    \ i < arr.length; i++) {\n        result.push(nums[arr[i][1]]);\n    }\n    return\
    \ result;\n}\n", "    let sum = 0;\n    let result = [];\n    if (nums.length\
    \ == 0) {\n        return [];\n    }\n    for (let i = 0; i < nums.length; i++)\
    \ {\n        let num = nums[i];\n        while (num > 0) {\n            sum +=\
    \ num % 10;\n            num = Math.floor(num / 10);\n        }\n        result.push([sum,\
    \ i]);\n        sum = 0;\n    }\n    result.sort(function (a, b) {\n        if\
    \ (a[0] == b[0]) {\n            return a[1] - b[1];\n        }\n        return\
    \ a[0] - b[0];\n    });\n    for (let i = 0; i < result.length; i++) {\n     \
    \   result[i] = nums[result[i][1]];\n    }\n    return result;\n}\n", "    let\
    \ sum = 0;\n    let result = [];\n    let newArr = [];\n    for (let i = 0; i\
    \ < nums.length; i++) {\n        sum = 0;\n        for (let j = 0; j < nums[i].toString().length;\
    \ j++) {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n   \
    \     result.push(sum);\n    }\n    for (let i = 0; i < result.length; i++) {\n\
    \        for (let j = i + 1; j < result.length; j++) {\n            if (result[i]\
    \ > result[j]) {\n                let temp = result[i];\n                result[i]\
    \ = result[j];\n                result[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n", "    let sumOfDigits: number[]\
    \ = [];\n    let result: number[] = [];\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        sumOfDigits.push(nums[i].toString().split('').reduce((a, b)\
    \ => parseInt(a) + parseInt(b)));\n    }\n    for (let i = 0; i < sumOfDigits.length;\
    \ i++) {\n        for (let j = 0; j < sumOfDigits.length; j++) {\n           \
    \ if (sumOfDigits[i] < sumOfDigits[j]) {\n                let temp = sumOfDigits[i];\n\
    \                sumOfDigits[i] = sumOfDigits[j];\n                sumOfDigits[j]\
    \ = temp;\n                temp = nums[i];\n                nums[i] = nums[j];\n\
    \                nums[j] = temp;\n            }\n        }\n    }\n    return\
    \ nums;\n}\n", "    let sum = 0;\n    let result = [];\n    for (let i = 0; i\
    \ < nums.length; i++) {\n        sum = 0;\n        for (let j = 0; j < nums[i].toString().length;\
    \ j++) {\n            sum += +nums[i].toString()[j];\n        }\n        result.push(sum);\n\
    \    }\n    let temp = 0;\n    for (let i = 0; i < result.length; i++) {\n   \
    \     for (let j = 0; j < result.length; j++) {\n            if (result[i] < result[j])\
    \ {\n                temp = result[i];\n                result[i] = result[j];\n\
    \                result[j] = temp;\n                temp = nums[i];\n        \
    \        nums[i] = nums[j];\n                nums[j] = temp;\n            }\n\
    \        }\n    }\n    return nums;\n}\n", "    let result = [];\n    let sum\
    \ = 0;\n    let sumArray = [];\n    for (let i = 0; i < nums.length; i++) {\n\
    \        sum = 0;\n        for (let j = 0; j < nums[i].toString().length; j++)\
    \ {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n        sumArray.push(sum);\n\
    \    }\n    for (let i = 0; i < sumArray.length; i++) {\n        for (let j =\
    \ 0; j < sumArray.length; j++) {\n            if (sumArray[i] < sumArray[j]) {\n\
    \                let temp = sumArray[i];\n                sumArray[i] = sumArray[j];\n\
    \                sumArray[j] = temp;\n                temp = nums[i];\n      \
    \          nums[i] = nums[j];\n                nums[j] = temp;\n            }\n\
    \        }\n    }\n    return nums;\n}\n", "    let sum = 0;\n    let nums_sum\
    \ = [];\n    for (let i = 0; i < nums.length; i++) {\n        sum = 0;\n     \
    \   for (let j = 0; j < nums[i].toString().length; j++) {\n            sum +=\
    \ parseInt(nums[i].toString()[j]);\n        }\n        nums_sum.push(sum);\n \
    \   }\n    let nums_sorted = [];\n    let nums_sorted_sum = [];\n    for (let\
    \ i = 0; i < nums.length; i++) {\n        nums_sorted.push(nums[nums_sum.indexOf(Math.min(...nums_sum))]);\n\
    \        nums_sorted_sum.push(nums_sum[nums_sum.indexOf(Math.min(...nums_sum))]);\n\
    \        nums_sum[nums_sum.indexOf(Math.min(...nums_sum))] = Infinity;\n    }\n\
    \    return nums_sorted;\n}\nconsole.log(order_by_points([1, 11, -1, -11, -12]));\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

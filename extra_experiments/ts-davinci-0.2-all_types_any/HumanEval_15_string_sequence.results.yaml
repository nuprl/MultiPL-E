language: ts
name: HumanEval_15_string_sequence
results:
- exit_code: 2
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    return Array.from(Array(n\
    \ + 1).keys()).join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpaje34874.ts(7,18): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    ../../../../tmp/tmpaje34874.ts(7,36): error TS2339: Property ''keys'' does not
    exist on type ''any[]''.

    '
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    return string_sequence(n - 1) + \" \" +\
    \ n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let str = \"\"\
    ;\n    for (let i = 0; i <= n; i++) {\n        str += i + \" \";\n    }\n    return\
    \ str.trim();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 2
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    return n < 0\
    \ ? \"Negative numbers not allowed\" : Array.from(Array(n + 1).keys()).join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpudp8qe99.ts(7,59): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    ../../../../tmp/tmpudp8qe99.ts(7,77): error TS2339: Property ''keys'' does not
    exist on type ''any[]''.

    '
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n == 0) {\n\
    \        return \"0\";\n    } else {\n        return string_sequence(n - 1) +\
    \ \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let str = \"\"\
    ;\n    for (let i = 0; i <= n; i++) {\n        str += i + \" \";\n    }\n    return\
    \ str.trim();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    return string_sequence(n - 1) + \" \" +\
    \ n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n == 0) {\n\
    \        return \"0\";\n    }\n    else {\n        return string_sequence(n -\
    \ 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n < 0) {\n\
    \        return \"\";\n    }\n    if (n === 0) {\n        return \"0\";\n    }\n\
    \    return string_sequence(n - 1) + \" \" + n;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n < 0) {\n\
    \        return \"\";\n    }\n    if (n === 0) {\n        return \"0\";\n    }\n\
    \    return string_sequence(n - 1) + \" \" + n;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    return string_sequence(n - 1) + \" \" +\
    \ n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let str = \"\"\
    ;\n    for (let i = 0; i <= n; i++) {\n        str += i + \" \";\n    }\n    return\
    \ str.trim();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    return string_sequence(n - 1) + \" \" +\
    \ n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n  if (n === 0) {\n\
    \    return \"0\";\n  } else {\n    return string_sequence(n - 1) + \" \" + n;\n\
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 2
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    return Array.from(Array(n\
    \ + 1).keys()).join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpaje34874.ts(7,18): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    ../../../../tmp/tmpaje34874.ts(7,36): error TS2339: Property ''keys'' does not
    exist on type ''any[]''.

    '
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    return string_sequence(n - 1) + \" \" +\
    \ n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let str = '';\n\
    \    for (let i = 0; i <= n; i++) {\n        str += i + ' ';\n    }\n    return\
    \ str.trim();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328492
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    var result =\
    \ \"\";\n    for (var i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328493
- exit_code: 2
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    return n < 0\
    \ ? \"ERROR\" : Array.from(Array(n + 1).keys()).join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n\
    \  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpwbsddcga.ts(7,36): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    ../../../../tmp/tmpwbsddcga.ts(7,54): error TS2339: Property ''keys'' does not
    exist on type ''any[]''.

    '
  timestamp: 1660328492
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n < 0) {\n\
    \        return \"\";\n    }\n    else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' 0'\n\nshould\
    \ loosely deep-equal\n\n'0'\n    at test (/tmp/tmposeuvp53.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmposeuvp53.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' 0',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660328493
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    return string_sequence(n - 1) + \" \" +\
    \ n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 2
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    return Array.from(Array(n\
    \ + 1).keys()).join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpaje34874.ts(7,18): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    ../../../../tmp/tmpaje34874.ts(7,36): error TS2339: Property ''keys'' does not
    exist on type ''any[]''.

    '
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 2
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    return Array.from(Array(n\
    \ + 1).keys()).join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpaje34874.ts(7,18): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    ../../../../tmp/tmpaje34874.ts(7,36): error TS2339: Property ''keys'' does not
    exist on type ''any[]''.

    '
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n == 0) {\n\
    \        return \"0\";\n    }\n    else {\n        return string_sequence(n -\
    \ 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    return string_sequence(n - 1) + \" \" +\
    \ n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n < 0) {\n\
    \        return \"\";\n    } else {\n        return string_sequence(n - 1) + \"\
    \ \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' 0'\n\nshould\
    \ loosely deep-equal\n\n'0'\n    at test (/tmp/tmpf41i8t50.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpf41i8t50.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' 0',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660328494
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n < 0) {\n\
    \        return \"\";\n    }\n    if (n === 0) {\n        return \"0\";\n    }\n\
    \    return string_sequence(n - 1) + \" \" + n;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    var str = \"\"\
    ;\n    for (var i = 0; i <= n; i++) {\n        str += i + \" \";\n    }\n    return\
    \ str;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'0 '\n\nshould\
    \ loosely deep-equal\n\n'0'\n    at test (/tmp/tmpu_40x7c_.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpu_40x7c_.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '0 ',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660328494
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    return string_sequence(n - 1) + \" \" +\
    \ n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    return string_sequence(n - 1) + \" \" +\
    \ n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n == 0) {\n\
    \        return \"0\";\n    }\n    else {\n        return string_sequence(n -\
    \ 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n == 0) {\n\
    \        return \"0\";\n    }\n    else {\n        return string_sequence(n -\
    \ 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let str = \"\"\
    ;\n    for (let i = 0; i <= n; i++) {\n        str += i + \" \";\n    }\n    return\
    \ str.trim();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i.toString()\
    \ + \" \";\n    }\n    return result.trim();\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328494
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 2
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    return Array.from(Array(n\
    \ + 1).keys()).join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpaje34874.ts(7,18): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    ../../../../tmp/tmpaje34874.ts(7,36): error TS2339: Property ''keys'' does not
    exist on type ''any[]''.

    '
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n < 0) {\n\
    \        return \"\";\n    }\n    else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' 0'\n\nshould\
    \ loosely deep-equal\n\n'0'\n    at test (/tmp/tmposeuvp53.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmposeuvp53.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' 0',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660328493
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    return string_sequence(n - 1) + \" \" +\
    \ n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    var result =\
    \ \"\";\n    for (var i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328493
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ '';\n    for (let i = 0; i <= n; i++) {\n        result += i + ' ';\n    }\n\
    \    return result.trim();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328494
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 2
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    return Array.from(Array(n\
    \ + 1).keys()).join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpaje34874.ts(7,18): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    ../../../../tmp/tmpaje34874.ts(7,36): error TS2339: Property ''keys'' does not
    exist on type ''any[]''.

    '
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    var result =\
    \ \"\";\n    for (var i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328493
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    return string_sequence(n - 1) + \" \" +\
    \ n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ '';\n    for (let i = 0; i <= n; i++) {\n        result += i + ' ';\n    }\n\
    \    return result.trim();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328494
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    return string_sequence(n - 1) + \" \" +\
    \ n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n == 0) {\n\
    \        return \"0\";\n    } else {\n        return string_sequence(n - 1) +\
    \ \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n == 0) {\n\
    \        return \"0\";\n    }\n    else {\n        return string_sequence(n -\
    \ 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n < 0) {\n\
    \        return \"\";\n    }\n    else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' 0'\n\nshould\
    \ loosely deep-equal\n\n'0'\n    at test (/tmp/tmposeuvp53.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmposeuvp53.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' 0',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660328493
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n < 0) {\n\
    \        return \"\";\n    }\n    else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' 0'\n\nshould\
    \ loosely deep-equal\n\n'0'\n    at test (/tmp/tmposeuvp53.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmposeuvp53.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' 0',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660328493
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    return string_sequence(n - 1) + \" \" +\
    \ n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ '';\n    for (let i = 0; i <= n; i++) {\n        result += i + ' ';\n    }\n\
    \    return result.trim();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328494
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = '';\n    for (let i = 0; i <= n; i++) {\n        result += i + ' ';\n    }\n\
    \    return result.trim();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328495
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n < 0) {\n\
    \        return \"\";\n    }\n    if (n === 0) {\n        return \"0\";\n    }\n\
    \    return string_sequence(n - 1) + \" \" + n;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = string_sequence;\n  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"\
    0 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n < 0) {\n\
    \        return \"\";\n    }\n    else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' 0'\n\nshould\
    \ loosely deep-equal\n\n'0'\n    at test (/tmp/tmposeuvp53.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmposeuvp53.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' 0',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660328493
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n < 0) {\n\
    \        return \"\";\n    } else {\n        return string_sequence(n - 1) + \"\
    \ \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' 0'\n\nshould\
    \ loosely deep-equal\n\n'0'\n    at test (/tmp/tmpf41i8t50.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpf41i8t50.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' 0',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660328494
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    return string_sequence(n - 1) + \" \" +\
    \ n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    return string_sequence(n - 1) + \" \" +\
    \ n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    return string_sequence(n - 1) + \" \" +\
    \ n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 1
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n < 0) {\n\
    \        return \"\";\n    } else {\n        return string_sequence(n - 1) + \"\
    \ \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' 0'\n\nshould\
    \ loosely deep-equal\n\n'0'\n    at test (/tmp/tmpf41i8t50.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpf41i8t50.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' 0',\n  expected:\
    \ '0',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660328494
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    var result: string\
    \ = \"\";\n    for (var i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328496
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    } else {\n        return string_sequence(n - 1)\
    \ + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328490
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    return string_sequence(n - 1) + \" \" +\
    \ n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    return string_sequence(n - 1) + \" \" +\
    \ n;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 2
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    return Array.from(Array(n\
    \ + 1).keys()).join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpaje34874.ts(7,18): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    ../../../../tmp/tmpaje34874.ts(7,36): error TS2339: Property ''keys'' does not
    exist on type ''any[]''.

    '
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ '';\n    for (let i = 0; i <= n; i++) {\n        result += i + ' ';\n    }\n\
    \    return result.trim();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328494
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result =\
    \ \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n  \
    \  }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 2
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    return Array.from(Array(n\
    \ + 1).keys()).join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../tmp/tmpaje34874.ts(7,18): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    ../../../../tmp/tmpaje34874.ts(7,36): error TS2339: Property ''keys'' does not
    exist on type ''any[]''.

    '
  timestamp: 1660328488
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return \"0\";\n    }\n    else {\n        return string_sequence(n\
    \ - 1) + \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    if (n === 0)\
    \ {\n        return 0;\n    } else {\n        return string_sequence(n - 1) +\
    \ \" \" + n;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = string_sequence;\n  assert.deepEqual(candidate(0),\"\
    0\");\n  assert.deepEqual(candidate(3),\"0 1 2 3\");\n  assert.deepEqual(candidate(10),\"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328496
- exit_code: 0
  program: "//Return a string containing space-delimited numbers starting from 0 upto\
    \ n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence(n: any): any {\n    let result: string\
    \ = \"\";\n    for (let i = 0; i <= n; i++) {\n        result += i + \" \";\n\
    \    }\n    return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = string_sequence;\n\
    \  assert.deepEqual(candidate(0),\"0\");\n  assert.deepEqual(candidate(3),\"0\
    \ 1 2 3\");\n  assert.deepEqual(candidate(10),\"0 1 2 3 4 5 6 7 8 9 10\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660328491

name: HumanEval_152_compare
language: py
prompt:
  "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
  \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
  \ of some long-awaited\n    event is finally known. The feelings and thoughts you\
  \ have at that moment are\n    definitely worth noting down and comparing.\n   \
  \ Your task is to determine if a person correctly guessed the results of a number\
  \ of matches.\n    You are given two arrays of scores and guesses of equal length,\
  \ where each index shows a match. \n    Return an array of the same length denoting\
  \ how far off each guess was. If they have guessed correctly,\n    the value is\
  \ 0, and if not, the value is the absolute difference between the guess and the\
  \ score.\n    \n    \n    example:\n\n    compare([1, 2, 3, 4, 5, 1], [1, 2, 3,\
  \ 4, 2, -2])\n[0, 0, 0, 0, 3, 3]\n\ncompare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0,\
  \ -2])\n[4, 4, 1, 0, 0, 6]\n\n\"\"\"\n"
tests:
  "def check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3,\
  \ 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0,\
  \ 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2,\
  \ -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0,\
  \ 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
completions: []
stop_tokens:
  - "\ndef"
  - "\n#"
  - "\nif"
  - "\nclass"
